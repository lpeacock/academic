V 000055 55 58776         1580965114503 implementation
(_unit VHDL(async_fifo_fg 0 203(implementation 0 255))
	(_version vde)
	(_time 1580965114504 2020.02.05 22:58:34)
	(_source(\C:/Xilinx/Vivado/2019.2/data/ip/xilinx/lib_fifo_v1_0/hdl/lib_fifo_v1_0_rfs.vhd\(\C:/Xilinx/Vivado/2019.2/data/ip/xpm/xpm_VCOMP.vhd\ VHDL i)))
	(_parameters tan)
	(_code d6868685d3808bc083d7d7d6908c81d0dfd0d0d080d380)
	(_ent
		(_time 1580965114496)
	)
	(_comp
		(.xpm.VCOMPONENTS.xpm_fifo_async
			(_object
				(_type(_int ~STRING~15116 1 541(_array -2((_uto i 1 i 2147483647)))))
				(_gen(_int FIFO_MEMORY_TYPE 27 1 541(_ent(_string \"auto"\))))
				(_gen(_int FIFO_WRITE_DEPTH -1 1 542(_ent((i 2048)))))
				(_gen(_int CASCADE_HEIGHT -1 1 543(_ent((i 0)))))
				(_gen(_int RELATED_CLOCKS -1 1 544(_ent((i 0)))))
				(_gen(_int WRITE_DATA_WIDTH -1 1 545(_ent((i 32)))))
				(_type(_int ~STRING~15117 1 546(_array -2((_uto i 1 i 2147483647)))))
				(_gen(_int READ_MODE 28 1 546(_ent(_string \"std"\))))
				(_gen(_int FIFO_READ_LATENCY -1 1 547(_ent((i 1)))))
				(_gen(_int FULL_RESET_VALUE -1 1 548(_ent((i 0)))))
				(_type(_int ~STRING~15118 1 549(_array -2((_uto i 1 i 2147483647)))))
				(_gen(_int USE_ADV_FEATURES 29 1 549(_ent(_string \"0707"\))))
				(_gen(_int READ_DATA_WIDTH -1 1 550(_ent((i 32)))))
				(_gen(_int CDC_SYNC_STAGES -1 1 551(_ent((i 2)))))
				(_gen(_int WR_DATA_COUNT_WIDTH -1 1 552(_ent((i 1)))))
				(_gen(_int PROG_FULL_THRESH -1 1 553(_ent((i 10)))))
				(_gen(_int RD_DATA_COUNT_WIDTH -1 1 554(_ent((i 1)))))
				(_gen(_int PROG_EMPTY_THRESH -1 1 555(_ent((i 10)))))
				(_type(_int ~STRING~15119 1 556(_array -2((_uto i 1 i 2147483647)))))
				(_gen(_int DOUT_RESET_VALUE 30 1 556(_ent(_string \"0"\))))
				(_type(_int ~STRING~15120 1 557(_array -2((_uto i 1 i 2147483647)))))
				(_gen(_int ECC_MODE 31 1 557(_ent(_string \"no_ecc"\))))
				(_gen(_int SIM_ASSERT_CHK -1 1 558(_ent((i 0)))))
				(_gen(_int WAKEUP_TIME -1 1 559(_ent((i 0)))))
				(_port(_int sleep -3 1 563(_ent (_in))))
				(_port(_int rst -3 1 564(_ent (_in))))
				(_port(_int wr_clk -3 1 565(_ent (_in))))
				(_port(_int wr_en -3 1 566(_ent (_in))))
				(_type(_int ~STD_LOGIC_VECTOR{WRITE_DATA_WIDTH-1~downto~0}~15 1 567(_array -3((_dto c 19 i 0)))))
				(_port(_int din 32 1 567(_ent (_in))))
				(_port(_int full -3 1 568(_ent (_out))))
				(_port(_int prog_full -3 1 569(_ent (_out))))
				(_type(_int ~STD_LOGIC_VECTOR{WR_DATA_COUNT_WIDTH-1~downto~0}~15 1 570(_array -3((_dto c 20 i 0)))))
				(_port(_int wr_data_count 33 1 570(_ent (_out))))
				(_port(_int overflow -3 1 571(_ent (_out))))
				(_port(_int wr_rst_busy -3 1 572(_ent (_out))))
				(_port(_int almost_full -3 1 573(_ent (_out))))
				(_port(_int wr_ack -3 1 574(_ent (_out))))
				(_port(_int rd_clk -3 1 575(_ent (_in))))
				(_port(_int rd_en -3 1 576(_ent (_in))))
				(_type(_int ~STD_LOGIC_VECTOR{READ_DATA_WIDTH-1~downto~0}~15 1 577(_array -3((_dto c 21 i 0)))))
				(_port(_int dout 34 1 577(_ent (_out))))
				(_port(_int empty -3 1 578(_ent (_out))))
				(_port(_int prog_empty -3 1 579(_ent (_out))))
				(_type(_int ~STD_LOGIC_VECTOR{RD_DATA_COUNT_WIDTH-1~downto~0}~15 1 580(_array -3((_dto c 22 i 0)))))
				(_port(_int rd_data_count 35 1 580(_ent (_out))))
				(_port(_int underflow -3 1 581(_ent (_out))))
				(_port(_int rd_rst_busy -3 1 582(_ent (_out))))
				(_port(_int almost_empty -3 1 583(_ent (_out))))
				(_port(_int data_valid -3 1 584(_ent (_out))))
				(_port(_int injectsbiterr -3 1 585(_ent (_in))))
				(_port(_int injectdbiterr -3 1 586(_ent (_in))))
				(_port(_int sbiterr -3 1 587(_ent (_out))))
				(_port(_int dbiterr -3 1 588(_ent (_out))))
			)
		)
	)
	(_generate lib_fifo_instance 0 602(_if 23)
		(_generate full_gen 0 605(_if 24)
			(_object
				(_prcs
					(line__608(_arch 0 0 608(_assignment(_trgt(7))(_sens(21)(131)))))
					(line__609(_arch 1 0 609(_assignment(_trgt(9))(_sens(21)(132)))))
				)
			)
		)
		(_generate full_gen1 0 614(_if 25)
			(_object
				(_prcs
					(line__617(_arch 2 0 617(_assignment(_alias((Full)(Full_int)))(_simpleassign BUF)(_trgt(7))(_sens(131)))))
					(line__618(_arch 3 0 618(_assignment(_alias((Almost_full)(Almost_full_int)))(_simpleassign BUF)(_trgt(9))(_sens(132)))))
				)
			)
		)
		(_generate LEGACY_COREGEN_DEPTH 0 723(_if 26)
			(_generate V6_S6_AND_LATER 0 791(_if t)
				(_inst I_ASYNC_FIFO_BRAM 0 804(_ent fifo_generator_v13_2_5 protected_b739615d3c41fd280daa5881fcb9783e580b19fb1ad444ceaad4686fab969164)
					(_gen
						((C_COMMON_CLOCK)(_code 27))
						((C_EN_SAFETY_CKT)(_code 28))
						((C_COUNT_TYPE)(_code 29))
						((C_DATA_COUNT_WIDTH)(_code 30))
						((C_DEFAULT_VALUE)(_code 31))
						((C_DIN_WIDTH)(_code 32))
						((C_DOUT_RST_VAL)(_code 33))
						((C_DOUT_WIDTH)(_code 34))
						((C_ENABLE_RLOCS)(_code 35))
						((C_FAMILY)(_code 36))
						((C_FULL_FLAGS_RST_VAL)(_code 37))
						((C_HAS_ALMOST_EMPTY)(_code 38))
						((C_HAS_ALMOST_FULL)(_code 39))
						((C_HAS_BACKUP)(_code 40))
						((C_HAS_DATA_COUNT)(_code 41))
						((C_HAS_INT_CLK)(_code 42))
						((C_HAS_MEMINIT_FILE)(_code 43))
						((C_HAS_OVERFLOW)(_code 44))
						((C_HAS_RD_DATA_COUNT)(_code 45))
						((C_HAS_RD_RST)(_code 46))
						((C_HAS_RST)(_code 47))
						((C_HAS_SRST)(_code 48))
						((C_HAS_UNDERFLOW)(_code 49))
						((C_HAS_VALID)(_code 50))
						((C_HAS_WR_ACK)(_code 51))
						((C_HAS_WR_DATA_COUNT)(_code 52))
						((C_HAS_WR_RST)(_code 53))
						((C_IMPLEMENTATION_TYPE)(_code 54))
						((C_INIT_WR_PNTR_VAL)(_code 55))
						((C_MEMORY_TYPE)(_code 56))
						((C_MIF_FILE_NAME)(_code 57))
						((C_OPTIMIZATION_MODE)(_code 58))
						((C_OVERFLOW_LOW)(_code 59))
						((C_PRELOAD_LATENCY)(_code 60))
						((C_PRELOAD_REGS)(_code 61))
						((C_PRIM_FIFO_TYPE)(_code 62))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL)(_code 63))
						((C_PROG_EMPTY_THRESH_NEGATE_VAL)(_code 64))
						((C_PROG_EMPTY_TYPE)(_code 65))
						((C_PROG_FULL_THRESH_ASSERT_VAL)(_code 66))
						((C_PROG_FULL_THRESH_NEGATE_VAL)(_code 67))
						((C_PROG_FULL_TYPE)(_code 68))
						((C_RD_DATA_COUNT_WIDTH)(_code 69))
						((C_RD_DEPTH)(_code 70))
						((C_RD_FREQ)(_code 71))
						((C_RD_PNTR_WIDTH)(_code 72))
						((C_UNDERFLOW_LOW)(_code 73))
						((C_USE_DOUT_RST)(_code 74))
						((C_USE_ECC)(_code 75))
						((C_USE_EMBEDDED_REG)(_code 76))
						((C_USE_FIFO16_FLAGS)(_code 77))
						((C_USE_FWFT_DATA_COUNT)(_code 78))
						((C_VALID_LOW)(_code 79))
						((C_WR_ACK_LOW)(_code 80))
						((C_WR_DATA_COUNT_WIDTH)(_code 81))
						((C_WR_DEPTH)(_code 82))
						((C_WR_FREQ)(_code 83))
						((C_WR_PNTR_WIDTH)(_code 84))
						((C_WR_RESPONSE_LATENCY)(_code 85))
						((C_MSGON_VAL)(_code 86))
						((C_ENABLE_RST_SYNC)(_code 87))
						((C_ERROR_INJECTION_TYPE)(_code 88))
						((C_SYNCHRONIZER_STAGE)(_code 89))
						((C_INTERFACE_TYPE)(_code 90))
						((C_AXI_TYPE)(_code 91))
						((C_HAS_AXI_WR_CHANNEL)(_code 92))
						((C_HAS_AXI_RD_CHANNEL)(_code 93))
						((C_HAS_SLAVE_CE)(_code 94))
						((C_HAS_MASTER_CE)(_code 95))
						((C_ADD_NGC_CONSTRAINT)(_code 96))
						((C_USE_COMMON_OVERFLOW)(_code 97))
						((C_USE_COMMON_UNDERFLOW)(_code 98))
						((C_USE_DEFAULT_SETTINGS)(_code 99))
						((C_AXI_ID_WIDTH)(_code 100))
						((C_AXI_ADDR_WIDTH)(_code 101))
						((C_AXI_DATA_WIDTH)(_code 102))
						((C_AXI_LEN_WIDTH)(_code 103))
						((C_AXI_LOCK_WIDTH)(_code 104))
						((C_HAS_AXI_ID)(_code 105))
						((C_HAS_AXI_AWUSER)(_code 106))
						((C_HAS_AXI_WUSER)(_code 107))
						((C_HAS_AXI_BUSER)(_code 108))
						((C_HAS_AXI_ARUSER)(_code 109))
						((C_HAS_AXI_RUSER)(_code 110))
						((C_AXI_ARUSER_WIDTH)(_code 111))
						((C_AXI_AWUSER_WIDTH)(_code 112))
						((C_AXI_WUSER_WIDTH)(_code 113))
						((C_AXI_BUSER_WIDTH)(_code 114))
						((C_AXI_RUSER_WIDTH)(_code 115))
						((C_HAS_AXIS_TDATA)(_code 116))
						((C_HAS_AXIS_TID)(_code 117))
						((C_HAS_AXIS_TDEST)(_code 118))
						((C_HAS_AXIS_TUSER)(_code 119))
						((C_HAS_AXIS_TREADY)(_code 120))
						((C_HAS_AXIS_TLAST)(_code 121))
						((C_HAS_AXIS_TSTRB)(_code 122))
						((C_HAS_AXIS_TKEEP)(_code 123))
						((C_AXIS_TDATA_WIDTH)(_code 124))
						((C_AXIS_TID_WIDTH)(_code 125))
						((C_AXIS_TDEST_WIDTH)(_code 126))
						((C_AXIS_TUSER_WIDTH)(_code 127))
						((C_AXIS_TSTRB_WIDTH)(_code 128))
						((C_AXIS_TKEEP_WIDTH)(_code 129))
						((C_WACH_TYPE)(_code 130))
						((C_WDCH_TYPE)(_code 131))
						((C_WRCH_TYPE)(_code 132))
						((C_RACH_TYPE)(_code 133))
						((C_RDCH_TYPE)(_code 134))
						((C_AXIS_TYPE)(_code 135))
						((C_IMPLEMENTATION_TYPE_WACH)(_code 136))
						((C_IMPLEMENTATION_TYPE_WDCH)(_code 137))
						((C_IMPLEMENTATION_TYPE_WRCH)(_code 138))
						((C_IMPLEMENTATION_TYPE_RACH)(_code 139))
						((C_IMPLEMENTATION_TYPE_RDCH)(_code 140))
						((C_IMPLEMENTATION_TYPE_AXIS)(_code 141))
						((C_APPLICATION_TYPE_WACH)(_code 142))
						((C_APPLICATION_TYPE_WDCH)(_code 143))
						((C_APPLICATION_TYPE_WRCH)(_code 144))
						((C_APPLICATION_TYPE_RACH)(_code 145))
						((C_APPLICATION_TYPE_RDCH)(_code 146))
						((C_APPLICATION_TYPE_AXIS)(_code 147))
						((C_USE_ECC_WACH)(_code 148))
						((C_USE_ECC_WDCH)(_code 149))
						((C_USE_ECC_WRCH)(_code 150))
						((C_USE_ECC_RACH)(_code 151))
						((C_USE_ECC_RDCH)(_code 152))
						((C_USE_ECC_AXIS)(_code 153))
						((C_ERROR_INJECTION_TYPE_WACH)(_code 154))
						((C_ERROR_INJECTION_TYPE_WDCH)(_code 155))
						((C_ERROR_INJECTION_TYPE_WRCH)(_code 156))
						((C_ERROR_INJECTION_TYPE_RACH)(_code 157))
						((C_ERROR_INJECTION_TYPE_RDCH)(_code 158))
						((C_ERROR_INJECTION_TYPE_AXIS)(_code 159))
						((C_DIN_WIDTH_WACH)(_code 160))
						((C_DIN_WIDTH_WDCH)(_code 161))
						((C_DIN_WIDTH_WRCH)(_code 162))
						((C_DIN_WIDTH_RACH)(_code 163))
						((C_DIN_WIDTH_RDCH)(_code 164))
						((C_DIN_WIDTH_AXIS)(_code 165))
						((C_WR_DEPTH_WACH)(_code 166))
						((C_WR_DEPTH_WDCH)(_code 167))
						((C_WR_DEPTH_WRCH)(_code 168))
						((C_WR_DEPTH_RACH)(_code 169))
						((C_WR_DEPTH_RDCH)(_code 170))
						((C_WR_DEPTH_AXIS)(_code 171))
						((C_WR_PNTR_WIDTH_WACH)(_code 172))
						((C_WR_PNTR_WIDTH_WDCH)(_code 173))
						((C_WR_PNTR_WIDTH_WRCH)(_code 174))
						((C_WR_PNTR_WIDTH_RACH)(_code 175))
						((C_WR_PNTR_WIDTH_RDCH)(_code 176))
						((C_WR_PNTR_WIDTH_AXIS)(_code 177))
						((C_HAS_DATA_COUNTS_WACH)(_code 178))
						((C_HAS_DATA_COUNTS_WDCH)(_code 179))
						((C_HAS_DATA_COUNTS_WRCH)(_code 180))
						((C_HAS_DATA_COUNTS_RACH)(_code 181))
						((C_HAS_DATA_COUNTS_RDCH)(_code 182))
						((C_HAS_DATA_COUNTS_AXIS)(_code 183))
						((C_HAS_PROG_FLAGS_WACH)(_code 184))
						((C_HAS_PROG_FLAGS_WDCH)(_code 185))
						((C_HAS_PROG_FLAGS_WRCH)(_code 186))
						((C_HAS_PROG_FLAGS_RACH)(_code 187))
						((C_HAS_PROG_FLAGS_RDCH)(_code 188))
						((C_HAS_PROG_FLAGS_AXIS)(_code 189))
						((C_PROG_FULL_TYPE_WACH)(_code 190))
						((C_PROG_FULL_TYPE_WDCH)(_code 191))
						((C_PROG_FULL_TYPE_WRCH)(_code 192))
						((C_PROG_FULL_TYPE_RACH)(_code 193))
						((C_PROG_FULL_TYPE_RDCH)(_code 194))
						((C_PROG_FULL_TYPE_AXIS)(_code 195))
						((C_PROG_FULL_THRESH_ASSERT_VAL_WACH)(_code 196))
						((C_PROG_FULL_THRESH_ASSERT_VAL_WDCH)(_code 197))
						((C_PROG_FULL_THRESH_ASSERT_VAL_WRCH)(_code 198))
						((C_PROG_FULL_THRESH_ASSERT_VAL_RACH)(_code 199))
						((C_PROG_FULL_THRESH_ASSERT_VAL_RDCH)(_code 200))
						((C_PROG_FULL_THRESH_ASSERT_VAL_AXIS)(_code 201))
						((C_PROG_EMPTY_TYPE_WACH)(_code 202))
						((C_PROG_EMPTY_TYPE_WDCH)(_code 203))
						((C_PROG_EMPTY_TYPE_WRCH)(_code 204))
						((C_PROG_EMPTY_TYPE_RACH)(_code 205))
						((C_PROG_EMPTY_TYPE_RDCH)(_code 206))
						((C_PROG_EMPTY_TYPE_AXIS)(_code 207))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH)(_code 208))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH)(_code 209))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH)(_code 210))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH)(_code 211))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH)(_code 212))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS)(_code 213))
						((C_REG_SLICE_MODE_WACH)(_code 214))
						((C_REG_SLICE_MODE_WDCH)(_code 215))
						((C_REG_SLICE_MODE_WRCH)(_code 216))
						((C_REG_SLICE_MODE_RACH)(_code 217))
						((C_REG_SLICE_MODE_RDCH)(_code 218))
						((C_REG_SLICE_MODE_AXIS)(_code 219))
					)
					(_port
						((backup)(_code 220))
						((backup_marker)(_code 221))
						((clk)(_code 222))
						((rst)(Ainit))
						((srst)(_code 223))
						((wr_clk)(Wr_clk))
						((wr_rst)(Ainit))
						((rd_clk)(Rd_clk))
						((rd_rst)(Ainit))
						((wr_en)(Wr_en))
						((rd_en)(Rd_en))
						((din)(Din))
						((prog_empty_thresh)(PROG_RDTHRESH_ZEROS))
						((prog_empty_thresh_assert)(PROG_RDTHRESH_ZEROS))
						((prog_empty_thresh_negate)(PROG_RDTHRESH_ZEROS))
						((prog_full_thresh)(PROG_WRTHRESH_ZEROS))
						((prog_full_thresh_assert)(PROG_WRTHRESH_ZEROS))
						((prog_full_thresh_negate)(PROG_WRTHRESH_ZEROS))
						((int_clk)(_code 224))
						((injectdbiterr)(_code 225))
						((injectsbiterr)(_code 226))
						((sleep)(_code 227))
						((full)(Full_int))
						((almost_full)(Almost_full_int))
						((wr_ack)(Wr_ack))
						((overflow)(Wr_err))
						((empty)(Empty))
						((almost_empty)(Almost_empty))
						((valid)(Rd_ack))
						((underflow)(Rd_err))
						((dout)(Dout))
						((data_count)(DATA_COUNT))
						((rd_data_count)(sig_full_fifo_rdcnt))
						((wr_data_count)(sig_full_fifo_wrcnt))
						((prog_full)(PROG_FULL))
						((prog_empty)(PROG_EMPTY))
						((sbiterr)(SBITERR))
						((dbiterr)(DBITERR))
						((wr_rst_busy)(WR_RST_BUSY))
						((rd_rst_busy)(RD_RST_BUSY))
						((m_aclk)(_code 228))
						((s_aclk)(_code 229))
						((m_aclk_en)(_code 230))
						((s_aclk_en)(_code 231))
						((s_aresetn)(_code 232))
						((s_axi_awid)(_code 233))
						((s_axi_awaddr)(_code 234))
						((s_axi_awlen)(_code 235))
						((s_axi_awsize)(_code 236))
						((s_axi_awburst)(_code 237))
						((s_axi_awlock)(_code 238))
						((s_axi_awcache)(_code 239))
						((s_axi_awprot)(_code 240))
						((s_axi_awqos)(_code 241))
						((s_axi_awregion)(_code 242))
						((s_axi_awuser)(_code 243))
						((s_axi_awvalid)(_code 244))
						((s_axi_awready)(S_AXI_AWREADY))
						((s_axi_wid)(_code 245))
						((s_axi_wdata)(_code 246))
						((s_axi_wstrb)(_code 247))
						((s_axi_wuser)(_code 248))
						((s_axi_wlast)(_code 249))
						((s_axi_wvalid)(_code 250))
						((s_axi_bready)(_code 251))
						((s_axi_wready)(S_AXI_WREADY))
						((s_axi_bvalid)(S_AXI_BVALID))
						((s_axi_bid)(S_AXI_BID))
						((s_axi_bresp)(S_AXI_BRESP))
						((s_axi_buser)(S_AXI_BUSER))
						((m_axi_awid)(M_AXI_AWID))
						((m_axi_awaddr)(M_AXI_AWADDR))
						((m_axi_awlen)(M_AXI_AWLEN))
						((m_axi_awsize)(M_AXI_AWSIZE))
						((m_axi_awburst)(M_AXI_AWBURST))
						((m_axi_awlock)(M_AXI_AWLOCK))
						((m_axi_awcache)(M_AXI_AWCACHE))
						((m_axi_awprot)(M_AXI_AWPROT))
						((m_axi_awqos)(M_AXI_AWQOS))
						((m_axi_awregion)(M_AXI_AWREGION))
						((m_axi_awuser)(M_AXI_AWUSER))
						((m_axi_awvalid)(M_AXI_AWVALID))
						((m_axi_awready)(_code 252))
						((m_axi_wid)(M_AXI_WID))
						((m_axi_wdata)(M_AXI_WDATA))
						((m_axi_wstrb)(M_AXI_WSTRB))
						((m_axi_wlast)(M_AXI_WLAST))
						((m_axi_wuser)(M_AXI_WUSER))
						((m_axi_wvalid)(M_AXI_WVALID))
						((m_axi_wready)(_code 253))
						((m_axi_bid)(_code 254))
						((m_axi_bresp)(_code 255))
						((m_axi_buser)(_code 256))
						((m_axi_bvalid)(_code 257))
						((m_axi_bready)(M_AXI_BREADY))
						((s_axi_arid)(_code 258))
						((s_axi_araddr)(_code 259))
						((s_axi_arlen)(_code 260))
						((s_axi_arsize)(_code 261))
						((s_axi_arburst)(_code 262))
						((s_axi_arlock)(_code 263))
						((s_axi_arcache)(_code 264))
						((s_axi_arprot)(_code 265))
						((s_axi_arqos)(_code 266))
						((s_axi_arregion)(_code 267))
						((s_axi_aruser)(_code 268))
						((s_axi_arvalid)(_code 269))
						((s_axi_arready)(S_AXI_ARREADY))
						((s_axi_rid)(S_AXI_RID))
						((s_axi_rdata)(S_AXI_RDATA))
						((s_axi_rresp)(S_AXI_RRESP))
						((s_axi_rlast)(S_AXI_RLAST))
						((s_axi_ruser)(S_AXI_RUSER))
						((s_axi_rvalid)(S_AXI_RVALID))
						((s_axi_rready)(_code 270))
						((m_axi_arid)(M_AXI_ARID))
						((m_axi_araddr)(M_AXI_ARADDR))
						((m_axi_arlen)(M_AXI_ARLEN))
						((m_axi_arsize)(M_AXI_ARSIZE))
						((m_axi_arburst)(M_AXI_ARBURST))
						((m_axi_arlock)(M_AXI_ARLOCK))
						((m_axi_arcache)(M_AXI_ARCACHE))
						((m_axi_arprot)(M_AXI_ARPROT))
						((m_axi_arqos)(M_AXI_ARQOS))
						((m_axi_arregion)(M_AXI_ARREGION))
						((m_axi_aruser)(M_AXI_ARUSER))
						((m_axi_arvalid)(M_AXI_ARVALID))
						((m_axi_arready)(_code 271))
						((m_axi_rid)(_code 272))
						((m_axi_rdata)(_code 273))
						((m_axi_rresp)(_code 274))
						((m_axi_rlast)(_code 275))
						((m_axi_ruser)(_code 276))
						((m_axi_rvalid)(_code 277))
						((m_axi_rready)(M_AXI_RREADY))
						((s_axis_tvalid)(_code 278))
						((s_axis_tready)(S_AXIS_TREADY))
						((s_axis_tdata)(_code 279))
						((s_axis_tstrb)(_code 280))
						((s_axis_tkeep)(_code 281))
						((s_axis_tlast)(_code 282))
						((s_axis_tid)(_code 283))
						((s_axis_tdest)(_code 284))
						((s_axis_tuser)(_code 285))
						((m_axis_tvalid)(M_AXIS_TVALID))
						((m_axis_tready)(_code 286))
						((m_axis_tdata)(M_AXIS_TDATA))
						((m_axis_tstrb)(M_AXIS_TSTRB))
						((m_axis_tkeep)(M_AXIS_TKEEP))
						((m_axis_tlast)(M_AXIS_TLAST))
						((m_axis_tid)(M_AXIS_TID))
						((m_axis_tdest)(M_AXIS_TDEST))
						((m_axis_tuser)(M_AXIS_TUSER))
						((axi_aw_injectsbiterr)(_code 287))
						((axi_aw_injectdbiterr)(_code 288))
						((axi_aw_prog_full_thresh)(_code 289))
						((axi_aw_prog_empty_thresh)(_code 290))
						((axi_aw_data_count)(AXI_AW_DATA_COUNT))
						((axi_aw_wr_data_count)(AXI_AW_WR_DATA_COUNT))
						((axi_aw_rd_data_count)(AXI_AW_RD_DATA_COUNT))
						((axi_aw_sbiterr)(AXI_AW_SBITERR))
						((axi_aw_dbiterr)(AXI_AW_DBITERR))
						((axi_aw_overflow)(AXI_AW_OVERFLOW))
						((axi_aw_underflow)(AXI_AW_UNDERFLOW))
						((axi_aw_prog_full)(AXI_AW_PROG_FULL))
						((axi_aw_prog_empty)(AXI_AW_PROG_EMPTY))
						((axi_w_injectsbiterr)(_code 291))
						((axi_w_injectdbiterr)(_code 292))
						((axi_w_prog_full_thresh)(_code 293))
						((axi_w_prog_empty_thresh)(_code 294))
						((axi_w_data_count)(AXI_W_DATA_COUNT))
						((axi_w_wr_data_count)(AXI_W_WR_DATA_COUNT))
						((axi_w_rd_data_count)(AXI_W_RD_DATA_COUNT))
						((axi_w_sbiterr)(AXI_W_SBITERR))
						((axi_w_dbiterr)(AXI_W_DBITERR))
						((axi_w_overflow)(AXI_W_OVERFLOW))
						((axi_w_underflow)(AXI_W_UNDERFLOW))
						((axi_w_prog_full)(AXI_W_PROG_FULL))
						((axi_w_prog_empty)(AXI_W_PROG_EMPTY))
						((axi_b_injectsbiterr)(_code 295))
						((axi_b_injectdbiterr)(_code 296))
						((axi_b_prog_full_thresh)(_code 297))
						((axi_b_prog_empty_thresh)(_code 298))
						((axi_b_data_count)(AXI_B_DATA_COUNT))
						((axi_b_wr_data_count)(AXI_B_WR_DATA_COUNT))
						((axi_b_rd_data_count)(AXI_B_RD_DATA_COUNT))
						((axi_b_sbiterr)(AXI_B_SBITERR))
						((axi_b_dbiterr)(AXI_B_DBITERR))
						((axi_b_overflow)(AXI_B_OVERFLOW))
						((axi_b_underflow)(AXI_B_UNDERFLOW))
						((axi_b_prog_full)(AXI_B_PROG_FULL))
						((axi_b_prog_empty)(AXI_B_PROG_EMPTY))
						((axi_ar_injectsbiterr)(_code 299))
						((axi_ar_injectdbiterr)(_code 300))
						((axi_ar_prog_full_thresh)(_code 301))
						((axi_ar_prog_empty_thresh)(_code 302))
						((axi_ar_data_count)(AXI_AR_DATA_COUNT))
						((axi_ar_wr_data_count)(AXI_AR_WR_DATA_COUNT))
						((axi_ar_rd_data_count)(AXI_AR_RD_DATA_COUNT))
						((axi_ar_sbiterr)(AXI_AR_SBITERR))
						((axi_ar_dbiterr)(AXI_AR_DBITERR))
						((axi_ar_overflow)(AXI_AR_OVERFLOW))
						((axi_ar_underflow)(AXI_AR_UNDERFLOW))
						((axi_ar_prog_full)(AXI_AR_PROG_FULL))
						((axi_ar_prog_empty)(AXI_AR_PROG_EMPTY))
						((axi_r_injectsbiterr)(_code 303))
						((axi_r_injectdbiterr)(_code 304))
						((axi_r_prog_full_thresh)(_code 305))
						((axi_r_prog_empty_thresh)(_code 306))
						((axi_r_data_count)(AXI_R_DATA_COUNT))
						((axi_r_wr_data_count)(AXI_R_WR_DATA_COUNT))
						((axi_r_rd_data_count)(AXI_R_RD_DATA_COUNT))
						((axi_r_sbiterr)(AXI_R_SBITERR))
						((axi_r_dbiterr)(AXI_R_DBITERR))
						((axi_r_overflow)(AXI_R_OVERFLOW))
						((axi_r_underflow)(AXI_R_UNDERFLOW))
						((axi_r_prog_full)(AXI_R_PROG_FULL))
						((axi_r_prog_empty)(AXI_R_PROG_EMPTY))
						((axis_injectsbiterr)(_code 307))
						((axis_injectdbiterr)(_code 308))
						((axis_prog_full_thresh)(_code 309))
						((axis_prog_empty_thresh)(_code 310))
						((axis_data_count)(AXIS_DATA_COUNT))
						((axis_wr_data_count)(AXIS_WR_DATA_COUNT))
						((axis_rd_data_count)(AXIS_RD_DATA_COUNT))
						((axis_sbiterr)(AXIS_SBITERR))
						((axis_dbiterr)(AXIS_DBITERR))
						((axis_overflow)(AXIS_OVERFLOW))
						((axis_underflow)(AXIS_UNDERFLOW))
						((axis_prog_full)(AXIS_PROG_FULL))
						((axis_prog_empty)(AXIS_PROG_EMPTY))
					)
				)
			)
			(_object
				(_cnst(_int ADJUSTED_AFIFO_DEPTH -1 0 731(_arch gms(_code 311))))
				(_cnst(_int ADJUSTED_RDCNT_WIDTH -1 0 732(_arch gms(_code 312))))
				(_cnst(_int ADJUSTED_WRCNT_WIDTH -1 0 733(_arch gms(_code 313))))
				(_cnst(_int PROG_FULL_THRESH_ASSERT_VAL -1 0 736(_arch gms(_code 314))))
				(_cnst(_int PROG_FULL_THRESH_NEGATE_VAL -1 0 737(_arch gms(_code 315))))
				(_type(_int ~INTEGER~range~4~to~22~13 0 749(_scalar (_to i 4 i 22))))
				(_cnst(_int ADJUSTED_RD_PNTR_WIDTH 27 0 749(_arch gms(_code 316))))
				(_type(_int ~INTEGER~range~4~to~22~139 0 750(_scalar (_to i 4 i 22))))
				(_cnst(_int ADJUSTED_WR_PNTR_WIDTH 28 0 750(_arch gms(_code 317))))
				(_type(_int ~NATURAL~range~ADJUSTED_RD_PNTR_WIDTH-1~downto~0~13 0 754(_scalar (_dto c 318 i 0))))
				(_type(_int ~STD_LOGIC_VECTOR{ADJUSTED_RD_PNTR_WIDTH-1~downto~0}~13 0 754(_array -3((_dto c 319 i 0)))))
				(_sig(_int PROG_RDTHRESH_ZEROS 30 0 754(_arch(_uni((_others(i 2)))))))
				(_type(_int ~NATURAL~range~ADJUSTED_WR_PNTR_WIDTH-1~downto~0~13 0 756(_scalar (_dto c 320 i 0))))
				(_type(_int ~STD_LOGIC_VECTOR{ADJUSTED_WR_PNTR_WIDTH-1~downto~0}~13 0 756(_array -3((_dto c 321 i 0)))))
				(_sig(_int PROG_WRTHRESH_ZEROS 32 0 756(_arch(_uni((_others(i 2)))))))
				(_type(_int ~NATURAL~range~ADJUSTED_RDCNT_WIDTH-1~downto~0~13 0 762(_scalar (_dto c 322 i 0))))
				(_type(_int ~STD_LOGIC_VECTOR{ADJUSTED_RDCNT_WIDTH-1~downto~0}~13 0 762(_array -3((_dto c 323 i 0)))))
				(_sig(_int sig_full_fifo_rdcnt 34 0 762(_arch(_uni))))
				(_type(_int ~NATURAL~range~ADJUSTED_WRCNT_WIDTH-1~downto~0~13 0 763(_scalar (_dto c 324 i 0))))
				(_type(_int ~STD_LOGIC_VECTOR{ADJUSTED_WRCNT_WIDTH-1~downto~0}~13 0 763(_array -3((_dto c 325 i 0)))))
				(_sig(_int sig_full_fifo_wrcnt 36 0 763(_arch(_uni))))
				(_sig(_int DATA_COUNT 36 0 766(_arch(_uni))))
				(_prcs
					(line__774(_arch 4 0 774(_assignment(_trgt(11))(_sens(139(_range 326)))(_read(139(_range 327))))))
					(line__778(_arch 5 0 778(_assignment(_trgt(12))(_sens(138(_range 328)))(_read(138(_range 329))))))
				)
			)
		)
		(_generate USE_2N_DEPTH 0 1346(_if 330)
			(_generate V6_S6_AND_LATER 0 1398(_if t)
				(_inst I_ASYNC_FIFO_BRAM 0 1411(_ent fifo_generator_v13_2_5 protected_b739615d3c41fd280daa5881fcb9783e580b19fb1ad444ceaad4686fab969164)
					(_gen
						((C_COMMON_CLOCK)(_code 331))
						((C_EN_SAFETY_CKT)(_code 332))
						((C_COUNT_TYPE)(_code 333))
						((C_DATA_COUNT_WIDTH)(_code 334))
						((C_DEFAULT_VALUE)(_code 335))
						((C_DIN_WIDTH)(_code 336))
						((C_DOUT_RST_VAL)(_code 337))
						((C_DOUT_WIDTH)(_code 338))
						((C_ENABLE_RLOCS)(_code 339))
						((C_FAMILY)(_code 340))
						((C_FULL_FLAGS_RST_VAL)(_code 341))
						((C_HAS_ALMOST_EMPTY)(_code 342))
						((C_HAS_ALMOST_FULL)(_code 343))
						((C_HAS_BACKUP)(_code 344))
						((C_HAS_DATA_COUNT)(_code 345))
						((C_HAS_INT_CLK)(_code 346))
						((C_HAS_MEMINIT_FILE)(_code 347))
						((C_HAS_OVERFLOW)(_code 348))
						((C_HAS_RD_DATA_COUNT)(_code 349))
						((C_HAS_RD_RST)(_code 350))
						((C_HAS_RST)(_code 351))
						((C_HAS_SRST)(_code 352))
						((C_HAS_UNDERFLOW)(_code 353))
						((C_HAS_VALID)(_code 354))
						((C_HAS_WR_ACK)(_code 355))
						((C_HAS_WR_DATA_COUNT)(_code 356))
						((C_HAS_WR_RST)(_code 357))
						((C_IMPLEMENTATION_TYPE)(_code 358))
						((C_INIT_WR_PNTR_VAL)(_code 359))
						((C_MEMORY_TYPE)(_code 360))
						((C_MIF_FILE_NAME)(_code 361))
						((C_OPTIMIZATION_MODE)(_code 362))
						((C_OVERFLOW_LOW)(_code 363))
						((C_PRELOAD_LATENCY)(_code 364))
						((C_PRELOAD_REGS)(_code 365))
						((C_PRIM_FIFO_TYPE)(_code 366))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL)(_code 367))
						((C_PROG_EMPTY_THRESH_NEGATE_VAL)(_code 368))
						((C_PROG_EMPTY_TYPE)(_code 369))
						((C_PROG_FULL_THRESH_ASSERT_VAL)(_code 370))
						((C_PROG_FULL_THRESH_NEGATE_VAL)(_code 371))
						((C_PROG_FULL_TYPE)(_code 372))
						((C_RD_DATA_COUNT_WIDTH)(_code 373))
						((C_RD_DEPTH)(_code 374))
						((C_RD_FREQ)(_code 375))
						((C_RD_PNTR_WIDTH)(_code 376))
						((C_UNDERFLOW_LOW)(_code 377))
						((C_USE_DOUT_RST)(_code 378))
						((C_USE_ECC)(_code 379))
						((C_USE_EMBEDDED_REG)(_code 380))
						((C_USE_FIFO16_FLAGS)(_code 381))
						((C_USE_FWFT_DATA_COUNT)(_code 382))
						((C_VALID_LOW)(_code 383))
						((C_WR_ACK_LOW)(_code 384))
						((C_WR_DATA_COUNT_WIDTH)(_code 385))
						((C_WR_DEPTH)(_code 386))
						((C_WR_FREQ)(_code 387))
						((C_WR_PNTR_WIDTH)(_code 388))
						((C_WR_RESPONSE_LATENCY)(_code 389))
						((C_MSGON_VAL)(_code 390))
						((C_ENABLE_RST_SYNC)(_code 391))
						((C_ERROR_INJECTION_TYPE)(_code 392))
						((C_INTERFACE_TYPE)(_code 393))
						((C_AXI_TYPE)(_code 394))
						((C_HAS_AXI_WR_CHANNEL)(_code 395))
						((C_HAS_AXI_RD_CHANNEL)(_code 396))
						((C_HAS_SLAVE_CE)(_code 397))
						((C_HAS_MASTER_CE)(_code 398))
						((C_ADD_NGC_CONSTRAINT)(_code 399))
						((C_USE_COMMON_OVERFLOW)(_code 400))
						((C_USE_COMMON_UNDERFLOW)(_code 401))
						((C_USE_DEFAULT_SETTINGS)(_code 402))
						((C_AXI_ID_WIDTH)(_code 403))
						((C_AXI_ADDR_WIDTH)(_code 404))
						((C_AXI_DATA_WIDTH)(_code 405))
						((C_HAS_AXI_AWUSER)(_code 406))
						((C_HAS_AXI_WUSER)(_code 407))
						((C_HAS_AXI_BUSER)(_code 408))
						((C_HAS_AXI_ARUSER)(_code 409))
						((C_HAS_AXI_RUSER)(_code 410))
						((C_AXI_ARUSER_WIDTH)(_code 411))
						((C_AXI_AWUSER_WIDTH)(_code 412))
						((C_AXI_WUSER_WIDTH)(_code 413))
						((C_AXI_BUSER_WIDTH)(_code 414))
						((C_AXI_RUSER_WIDTH)(_code 415))
						((C_HAS_AXIS_TDATA)(_code 416))
						((C_HAS_AXIS_TID)(_code 417))
						((C_HAS_AXIS_TDEST)(_code 418))
						((C_HAS_AXIS_TUSER)(_code 419))
						((C_HAS_AXIS_TREADY)(_code 420))
						((C_HAS_AXIS_TLAST)(_code 421))
						((C_HAS_AXIS_TSTRB)(_code 422))
						((C_HAS_AXIS_TKEEP)(_code 423))
						((C_AXIS_TDATA_WIDTH)(_code 424))
						((C_AXIS_TID_WIDTH)(_code 425))
						((C_AXIS_TDEST_WIDTH)(_code 426))
						((C_AXIS_TUSER_WIDTH)(_code 427))
						((C_AXIS_TSTRB_WIDTH)(_code 428))
						((C_AXIS_TKEEP_WIDTH)(_code 429))
						((C_WACH_TYPE)(_code 430))
						((C_WDCH_TYPE)(_code 431))
						((C_WRCH_TYPE)(_code 432))
						((C_RACH_TYPE)(_code 433))
						((C_RDCH_TYPE)(_code 434))
						((C_AXIS_TYPE)(_code 435))
						((C_IMPLEMENTATION_TYPE_WACH)(_code 436))
						((C_IMPLEMENTATION_TYPE_WDCH)(_code 437))
						((C_IMPLEMENTATION_TYPE_WRCH)(_code 438))
						((C_IMPLEMENTATION_TYPE_RACH)(_code 439))
						((C_IMPLEMENTATION_TYPE_RDCH)(_code 440))
						((C_IMPLEMENTATION_TYPE_AXIS)(_code 441))
						((C_APPLICATION_TYPE_WACH)(_code 442))
						((C_APPLICATION_TYPE_WDCH)(_code 443))
						((C_APPLICATION_TYPE_WRCH)(_code 444))
						((C_APPLICATION_TYPE_RACH)(_code 445))
						((C_APPLICATION_TYPE_RDCH)(_code 446))
						((C_APPLICATION_TYPE_AXIS)(_code 447))
						((C_USE_ECC_WACH)(_code 448))
						((C_USE_ECC_WDCH)(_code 449))
						((C_USE_ECC_WRCH)(_code 450))
						((C_USE_ECC_RACH)(_code 451))
						((C_USE_ECC_RDCH)(_code 452))
						((C_USE_ECC_AXIS)(_code 453))
						((C_ERROR_INJECTION_TYPE_WACH)(_code 454))
						((C_ERROR_INJECTION_TYPE_WDCH)(_code 455))
						((C_ERROR_INJECTION_TYPE_WRCH)(_code 456))
						((C_ERROR_INJECTION_TYPE_RACH)(_code 457))
						((C_ERROR_INJECTION_TYPE_RDCH)(_code 458))
						((C_ERROR_INJECTION_TYPE_AXIS)(_code 459))
						((C_DIN_WIDTH_WACH)(_code 460))
						((C_DIN_WIDTH_WDCH)(_code 461))
						((C_DIN_WIDTH_WRCH)(_code 462))
						((C_DIN_WIDTH_RACH)(_code 463))
						((C_DIN_WIDTH_RDCH)(_code 464))
						((C_DIN_WIDTH_AXIS)(_code 465))
						((C_WR_DEPTH_WACH)(_code 466))
						((C_WR_DEPTH_WDCH)(_code 467))
						((C_WR_DEPTH_WRCH)(_code 468))
						((C_WR_DEPTH_RACH)(_code 469))
						((C_WR_DEPTH_RDCH)(_code 470))
						((C_WR_DEPTH_AXIS)(_code 471))
						((C_WR_PNTR_WIDTH_WACH)(_code 472))
						((C_WR_PNTR_WIDTH_WDCH)(_code 473))
						((C_WR_PNTR_WIDTH_WRCH)(_code 474))
						((C_WR_PNTR_WIDTH_RACH)(_code 475))
						((C_WR_PNTR_WIDTH_RDCH)(_code 476))
						((C_WR_PNTR_WIDTH_AXIS)(_code 477))
						((C_HAS_DATA_COUNTS_WACH)(_code 478))
						((C_HAS_DATA_COUNTS_WDCH)(_code 479))
						((C_HAS_DATA_COUNTS_WRCH)(_code 480))
						((C_HAS_DATA_COUNTS_RACH)(_code 481))
						((C_HAS_DATA_COUNTS_RDCH)(_code 482))
						((C_HAS_DATA_COUNTS_AXIS)(_code 483))
						((C_HAS_PROG_FLAGS_WACH)(_code 484))
						((C_HAS_PROG_FLAGS_WDCH)(_code 485))
						((C_HAS_PROG_FLAGS_WRCH)(_code 486))
						((C_HAS_PROG_FLAGS_RACH)(_code 487))
						((C_HAS_PROG_FLAGS_RDCH)(_code 488))
						((C_HAS_PROG_FLAGS_AXIS)(_code 489))
						((C_PROG_FULL_TYPE_WACH)(_code 490))
						((C_PROG_FULL_TYPE_WDCH)(_code 491))
						((C_PROG_FULL_TYPE_WRCH)(_code 492))
						((C_PROG_FULL_TYPE_RACH)(_code 493))
						((C_PROG_FULL_TYPE_RDCH)(_code 494))
						((C_PROG_FULL_TYPE_AXIS)(_code 495))
						((C_PROG_FULL_THRESH_ASSERT_VAL_WACH)(_code 496))
						((C_PROG_FULL_THRESH_ASSERT_VAL_WDCH)(_code 497))
						((C_PROG_FULL_THRESH_ASSERT_VAL_WRCH)(_code 498))
						((C_PROG_FULL_THRESH_ASSERT_VAL_RACH)(_code 499))
						((C_PROG_FULL_THRESH_ASSERT_VAL_RDCH)(_code 500))
						((C_PROG_FULL_THRESH_ASSERT_VAL_AXIS)(_code 501))
						((C_PROG_EMPTY_TYPE_WACH)(_code 502))
						((C_PROG_EMPTY_TYPE_WDCH)(_code 503))
						((C_PROG_EMPTY_TYPE_WRCH)(_code 504))
						((C_PROG_EMPTY_TYPE_RACH)(_code 505))
						((C_PROG_EMPTY_TYPE_RDCH)(_code 506))
						((C_PROG_EMPTY_TYPE_AXIS)(_code 507))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH)(_code 508))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH)(_code 509))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH)(_code 510))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH)(_code 511))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH)(_code 512))
						((C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS)(_code 513))
						((C_REG_SLICE_MODE_WACH)(_code 514))
						((C_REG_SLICE_MODE_WDCH)(_code 515))
						((C_REG_SLICE_MODE_WRCH)(_code 516))
						((C_REG_SLICE_MODE_RACH)(_code 517))
						((C_REG_SLICE_MODE_RDCH)(_code 518))
						((C_REG_SLICE_MODE_AXIS)(_code 519))
					)
					(_port
						((backup)(_code 520))
						((backup_marker)(_code 521))
						((clk)(_code 522))
						((rst)(Ainit))
						((srst)(_code 523))
						((wr_clk)(Wr_clk))
						((wr_rst)(Ainit))
						((rd_clk)(Rd_clk))
						((rd_rst)(Ainit))
						((wr_en)(Wr_en))
						((rd_en)(Rd_en))
						((din)(Din))
						((prog_empty_thresh)(PROG_RDTHRESH_ZEROS))
						((prog_empty_thresh_assert)(PROG_RDTHRESH_ZEROS))
						((prog_empty_thresh_negate)(PROG_RDTHRESH_ZEROS))
						((prog_full_thresh)(PROG_WRTHRESH_ZEROS))
						((prog_full_thresh_assert)(PROG_WRTHRESH_ZEROS))
						((prog_full_thresh_negate)(PROG_WRTHRESH_ZEROS))
						((int_clk)(_code 524))
						((injectdbiterr)(_code 525))
						((injectsbiterr)(_code 526))
						((sleep)(_code 527))
						((full)(Full_int))
						((almost_full)(Almost_full_int))
						((wr_ack)(Wr_ack))
						((overflow)(Rd_err))
						((empty)(Empty))
						((almost_empty)(Almost_empty))
						((valid)(Rd_ack))
						((underflow)(Wr_err))
						((dout)(Dout))
						((data_count)(DATA_COUNT))
						((rd_data_count)(sig_full_fifo_rdcnt))
						((wr_data_count)(sig_full_fifo_wrcnt))
						((prog_full)(PROG_FULL))
						((prog_empty)(PROG_EMPTY))
						((sbiterr)(SBITERR))
						((dbiterr)(DBITERR))
						((wr_rst_busy)(WR_RST_BUSY))
						((rd_rst_busy)(RD_RST_BUSY))
						((m_aclk)(_code 528))
						((s_aclk)(_code 529))
						((m_aclk_en)(_code 530))
						((s_aclk_en)(_code 531))
						((s_aresetn)(_code 532))
						((s_axi_awid)(_code 533))
						((s_axi_awaddr)(_code 534))
						((s_axi_awlen)(_code 535))
						((s_axi_awsize)(_code 536))
						((s_axi_awburst)(_code 537))
						((s_axi_awlock)(_code 538))
						((s_axi_awcache)(_code 539))
						((s_axi_awprot)(_code 540))
						((s_axi_awqos)(_code 541))
						((s_axi_awregion)(_code 542))
						((s_axi_awuser)(_code 543))
						((s_axi_awvalid)(_code 544))
						((s_axi_awready)(S_AXI_AWREADY))
						((s_axi_wid)(_code 545))
						((s_axi_wdata)(_code 546))
						((s_axi_wstrb)(_code 547))
						((s_axi_wuser)(_code 548))
						((s_axi_wlast)(_code 549))
						((s_axi_wvalid)(_code 550))
						((s_axi_bready)(_code 551))
						((s_axi_wready)(S_AXI_WREADY))
						((s_axi_bvalid)(S_AXI_BVALID))
						((s_axi_bid)(S_AXI_BID))
						((s_axi_bresp)(S_AXI_BRESP))
						((s_axi_buser)(S_AXI_BUSER))
						((m_axi_awid)(M_AXI_AWID))
						((m_axi_awaddr)(M_AXI_AWADDR))
						((m_axi_awlen)(M_AXI_AWLEN))
						((m_axi_awsize)(M_AXI_AWSIZE))
						((m_axi_awburst)(M_AXI_AWBURST))
						((m_axi_awlock)(M_AXI_AWLOCK))
						((m_axi_awcache)(M_AXI_AWCACHE))
						((m_axi_awprot)(M_AXI_AWPROT))
						((m_axi_awqos)(M_AXI_AWQOS))
						((m_axi_awregion)(M_AXI_AWREGION))
						((m_axi_awuser)(M_AXI_AWUSER))
						((m_axi_awvalid)(M_AXI_AWVALID))
						((m_axi_awready)(_code 552))
						((m_axi_wid)(M_AXI_WID))
						((m_axi_wdata)(M_AXI_WDATA))
						((m_axi_wstrb)(M_AXI_WSTRB))
						((m_axi_wlast)(M_AXI_WLAST))
						((m_axi_wuser)(M_AXI_WUSER))
						((m_axi_wvalid)(M_AXI_WVALID))
						((m_axi_wready)(_code 553))
						((m_axi_bid)(_code 554))
						((m_axi_bresp)(_code 555))
						((m_axi_buser)(_code 556))
						((m_axi_bvalid)(_code 557))
						((m_axi_bready)(M_AXI_BREADY))
						((s_axi_arid)(_code 558))
						((s_axi_araddr)(_code 559))
						((s_axi_arlen)(_code 560))
						((s_axi_arsize)(_code 561))
						((s_axi_arburst)(_code 562))
						((s_axi_arlock)(_code 563))
						((s_axi_arcache)(_code 564))
						((s_axi_arprot)(_code 565))
						((s_axi_arqos)(_code 566))
						((s_axi_arregion)(_code 567))
						((s_axi_aruser)(_code 568))
						((s_axi_arvalid)(_code 569))
						((s_axi_arready)(S_AXI_ARREADY))
						((s_axi_rid)(S_AXI_RID))
						((s_axi_rdata)(S_AXI_RDATA))
						((s_axi_rresp)(S_AXI_RRESP))
						((s_axi_rlast)(S_AXI_RLAST))
						((s_axi_ruser)(S_AXI_RUSER))
						((s_axi_rvalid)(S_AXI_RVALID))
						((s_axi_rready)(_code 570))
						((m_axi_arid)(M_AXI_ARID))
						((m_axi_araddr)(M_AXI_ARADDR))
						((m_axi_arlen)(M_AXI_ARLEN))
						((m_axi_arsize)(M_AXI_ARSIZE))
						((m_axi_arburst)(M_AXI_ARBURST))
						((m_axi_arlock)(M_AXI_ARLOCK))
						((m_axi_arcache)(M_AXI_ARCACHE))
						((m_axi_arprot)(M_AXI_ARPROT))
						((m_axi_arqos)(M_AXI_ARQOS))
						((m_axi_arregion)(M_AXI_ARREGION))
						((m_axi_aruser)(M_AXI_ARUSER))
						((m_axi_arvalid)(M_AXI_ARVALID))
						((m_axi_arready)(_code 571))
						((m_axi_rid)(_code 572))
						((m_axi_rdata)(_code 573))
						((m_axi_rresp)(_code 574))
						((m_axi_rlast)(_code 575))
						((m_axi_ruser)(_code 576))
						((m_axi_rvalid)(_code 577))
						((m_axi_rready)(M_AXI_RREADY))
						((s_axis_tvalid)(_code 578))
						((s_axis_tready)(S_AXIS_TREADY))
						((s_axis_tdata)(_code 579))
						((s_axis_tstrb)(_code 580))
						((s_axis_tkeep)(_code 581))
						((s_axis_tlast)(_code 582))
						((s_axis_tid)(_code 583))
						((s_axis_tdest)(_code 584))
						((s_axis_tuser)(_code 585))
						((m_axis_tvalid)(M_AXIS_TVALID))
						((m_axis_tready)(_code 586))
						((m_axis_tdata)(M_AXIS_TDATA))
						((m_axis_tstrb)(M_AXIS_TSTRB))
						((m_axis_tkeep)(M_AXIS_TKEEP))
						((m_axis_tlast)(M_AXIS_TLAST))
						((m_axis_tid)(M_AXIS_TID))
						((m_axis_tdest)(M_AXIS_TDEST))
						((m_axis_tuser)(M_AXIS_TUSER))
						((axi_aw_injectsbiterr)(_code 587))
						((axi_aw_injectdbiterr)(_code 588))
						((axi_aw_prog_full_thresh)(_code 589))
						((axi_aw_prog_empty_thresh)(_code 590))
						((axi_aw_data_count)(AXI_AW_DATA_COUNT))
						((axi_aw_wr_data_count)(AXI_AW_WR_DATA_COUNT))
						((axi_aw_rd_data_count)(AXI_AW_RD_DATA_COUNT))
						((axi_aw_sbiterr)(AXI_AW_SBITERR))
						((axi_aw_dbiterr)(AXI_AW_DBITERR))
						((axi_aw_overflow)(AXI_AW_OVERFLOW))
						((axi_aw_underflow)(AXI_AW_UNDERFLOW))
						((axi_aw_prog_full)(AXI_AW_PROG_FULL))
						((axi_aw_prog_empty)(AXI_AW_PROG_EMPTY))
						((axi_w_injectsbiterr)(_code 591))
						((axi_w_injectdbiterr)(_code 592))
						((axi_w_prog_full_thresh)(_code 593))
						((axi_w_prog_empty_thresh)(_code 594))
						((axi_w_data_count)(AXI_W_DATA_COUNT))
						((axi_w_wr_data_count)(AXI_W_WR_DATA_COUNT))
						((axi_w_rd_data_count)(AXI_W_RD_DATA_COUNT))
						((axi_w_sbiterr)(AXI_W_SBITERR))
						((axi_w_dbiterr)(AXI_W_DBITERR))
						((axi_w_overflow)(AXI_W_OVERFLOW))
						((axi_w_underflow)(AXI_W_UNDERFLOW))
						((axi_w_prog_full)(AXI_W_PROG_FULL))
						((axi_w_prog_empty)(AXI_W_PROG_EMPTY))
						((axi_b_injectsbiterr)(_code 595))
						((axi_b_injectdbiterr)(_code 596))
						((axi_b_prog_full_thresh)(_code 597))
						((axi_b_prog_empty_thresh)(_code 598))
						((axi_b_data_count)(AXI_B_DATA_COUNT))
						((axi_b_wr_data_count)(AXI_B_WR_DATA_COUNT))
						((axi_b_rd_data_count)(AXI_B_RD_DATA_COUNT))
						((axi_b_sbiterr)(AXI_B_SBITERR))
						((axi_b_dbiterr)(AXI_B_DBITERR))
						((axi_b_overflow)(AXI_B_OVERFLOW))
						((axi_b_underflow)(AXI_B_UNDERFLOW))
						((axi_b_prog_full)(AXI_B_PROG_FULL))
						((axi_b_prog_empty)(AXI_B_PROG_EMPTY))
						((axi_ar_injectsbiterr)(_code 599))
						((axi_ar_injectdbiterr)(_code 600))
						((axi_ar_prog_full_thresh)(_code 601))
						((axi_ar_prog_empty_thresh)(_code 602))
						((axi_ar_data_count)(AXI_AR_DATA_COUNT))
						((axi_ar_wr_data_count)(AXI_AR_WR_DATA_COUNT))
						((axi_ar_rd_data_count)(AXI_AR_RD_DATA_COUNT))
						((axi_ar_sbiterr)(AXI_AR_SBITERR))
						((axi_ar_dbiterr)(AXI_AR_DBITERR))
						((axi_ar_overflow)(AXI_AR_OVERFLOW))
						((axi_ar_underflow)(AXI_AR_UNDERFLOW))
						((axi_ar_prog_full)(AXI_AR_PROG_FULL))
						((axi_ar_prog_empty)(AXI_AR_PROG_EMPTY))
						((axi_r_injectsbiterr)(_code 603))
						((axi_r_injectdbiterr)(_code 604))
						((axi_r_prog_full_thresh)(_code 605))
						((axi_r_prog_empty_thresh)(_code 606))
						((axi_r_data_count)(AXI_R_DATA_COUNT))
						((axi_r_wr_data_count)(AXI_R_WR_DATA_COUNT))
						((axi_r_rd_data_count)(AXI_R_RD_DATA_COUNT))
						((axi_r_sbiterr)(AXI_R_SBITERR))
						((axi_r_dbiterr)(AXI_R_DBITERR))
						((axi_r_overflow)(AXI_R_OVERFLOW))
						((axi_r_underflow)(AXI_R_UNDERFLOW))
						((axi_r_prog_full)(AXI_R_PROG_FULL))
						((axi_r_prog_empty)(AXI_R_PROG_EMPTY))
						((axis_injectsbiterr)(_code 607))
						((axis_injectdbiterr)(_code 608))
						((axis_prog_full_thresh)(_code 609))
						((axis_prog_empty_thresh)(_code 610))
						((axis_data_count)(AXIS_DATA_COUNT))
						((axis_wr_data_count)(AXIS_WR_DATA_COUNT))
						((axis_rd_data_count)(AXIS_RD_DATA_COUNT))
						((axis_sbiterr)(AXIS_SBITERR))
						((axis_dbiterr)(AXIS_DBITERR))
						((axis_overflow)(AXIS_OVERFLOW))
						((axis_underflow)(AXIS_UNDERFLOW))
						((axis_prog_full)(AXIS_PROG_FULL))
						((axis_prog_empty)(AXIS_PROG_EMPTY))
					)
				)
			)
			(_object
				(_cnst(_int PROG_FULL_THRESH_ASSERT_VAL -1 0 1350(_arch gms(_code 611))))
				(_cnst(_int PROG_FULL_THRESH_NEGATE_VAL -1 0 1351(_arch gms(_code 612))))
				(_type(_int ~INTEGER~range~4~to~22~1310 0 1354(_scalar (_to i 4 i 22))))
				(_cnst(_int RD_PNTR_WIDTH 37 0 1354(_arch gms(_code 613))))
				(_type(_int ~INTEGER~range~4~to~22~1311 0 1355(_scalar (_to i 4 i 22))))
				(_cnst(_int WR_PNTR_WIDTH 38 0 1355(_arch gms(_code 614))))
				(_type(_int ~NATURAL~range~RD_PNTR_WIDTH-1~downto~0~13 0 1359(_scalar (_dto c 615 i 0))))
				(_type(_int ~STD_LOGIC_VECTOR{RD_PNTR_WIDTH-1~downto~0}~13 0 1359(_array -3((_dto c 616 i 0)))))
				(_sig(_int PROG_RDTHRESH_ZEROS 40 0 1359(_arch(_uni((_others(i 2)))))))
				(_type(_int ~NATURAL~range~WR_PNTR_WIDTH-1~downto~0~13 0 1361(_scalar (_dto c 617 i 0))))
				(_type(_int ~STD_LOGIC_VECTOR{WR_PNTR_WIDTH-1~downto~0}~13 0 1361(_array -3((_dto c 618 i 0)))))
				(_sig(_int PROG_WRTHRESH_ZEROS 42 0 1361(_arch(_uni((_others(i 2)))))))
				(_type(_int ~NATURAL~range~C_RD_COUNT_WIDTH-1~downto~0~13 0 1370(_scalar (_dto c 619 i 0))))
				(_type(_int ~STD_LOGIC_VECTOR{C_RD_COUNT_WIDTH-1~downto~0}~1312 0 1370(_array -3((_dto c 620 i 0)))))
				(_sig(_int sig_full_fifo_rdcnt 44 0 1370(_arch(_uni))))
				(_type(_int ~NATURAL~range~C_WR_COUNT_WIDTH-1~downto~0~13 0 1371(_scalar (_dto c 621 i 0))))
				(_type(_int ~STD_LOGIC_VECTOR{C_WR_COUNT_WIDTH-1~downto~0}~1313 0 1371(_array -3((_dto c 622 i 0)))))
				(_sig(_int sig_full_fifo_wrcnt 46 0 1371(_arch(_uni))))
				(_sig(_int DATA_COUNT 46 0 1374(_arch(_uni))))
				(_prcs
					(line__1380(_arch 6 0 1380(_assignment(_trgt(11))(_sens(144(_range 623)))(_read(144(_range 624))))))
					(line__1384(_arch 7 0 1384(_assignment(_trgt(12))(_sens(143(_range 625)))(_read(143(_range 626))))))
				)
			)
		)
	)
	(_generate xpm_fifo_instance 0 1929(_if 627)
		(_inst xpm_fifo_async_inst 0 1932(_comp .xpm.VCOMPONENTS.xpm_fifo_async)
			(_gen
				((FIFO_MEMORY_TYPE)(_code 628))
				((FIFO_WRITE_DEPTH)(_code 629))
				((RELATED_CLOCKS)((i 0)))
				((WRITE_DATA_WIDTH)(_code 630))
				((READ_MODE)(_code 631))
				((FIFO_READ_LATENCY)(_code 632))
				((FULL_RESET_VALUE)((i 1)))
				((USE_ADV_FEATURES)(_string \"1F1F"\))
				((READ_DATA_WIDTH)(_code 633))
				((CDC_SYNC_STAGES)(_code 634))
				((WR_DATA_COUNT_WIDTH)(_code 635))
				((PROG_FULL_THRESH)((i 10)))
				((RD_DATA_COUNT_WIDTH)(_code 636))
				((PROG_EMPTY_THRESH)((i 10)))
				((DOUT_RESET_VALUE)(_string \"0"\))
				((ECC_MODE)(_string \"no_ecc"\))
				((WAKEUP_TIME)((i 0)))
			)
			(_port
				((sleep)((i 2)))
				((rst)(Ainit))
				((wr_clk)(Wr_clk))
				((wr_en)(Wr_en))
				((din)(Din))
				((full)(Full_int))
				((prog_full)(_open))
				((wr_data_count)(Wr_count))
				((overflow)(Wr_err_i))
				((wr_rst_busy)(wr_rst_busy))
				((almost_full)(Almost_full))
				((wr_ack)(Wr_ack))
				((rd_clk)(Rd_clk))
				((rd_en)(Rd_en))
				((dout)(Dout))
				((empty)(Empty_i))
				((prog_empty)(_open))
				((rd_data_count)(Rd_count))
				((underflow)(Rd_err_i))
				((rd_rst_busy)(_open))
				((almost_empty)(Almost_empty))
				((data_valid)(Rd_ack))
				((injectsbiterr)((i 2)))
				((injectdbiterr)((i 2)))
				((sbiterr)(_open))
				((dbiterr)(_open))
			)
			(_use(_ent xpm xpm_fifo_async)
				(_gen
					((FIFO_MEMORY_TYPE)(_code 637))
					((ECC_MODE)(_string \"no_ecc"\))
					((RELATED_CLOCKS)((i 0)))
					((SIM_ASSERT_CHK)((i 0)))
					((CASCADE_HEIGHT)((i 0)))
					((FIFO_WRITE_DEPTH)(_code 638))
					((WRITE_DATA_WIDTH)(_code 639))
					((WR_DATA_COUNT_WIDTH)(_code 640))
					((PROG_FULL_THRESH)((i 10)))
					((FULL_RESET_VALUE)((i 1)))
					((USE_ADV_FEATURES)(_string \"1F1F"\))
					((READ_MODE)(_code 641))
					((FIFO_READ_LATENCY)(_code 642))
					((READ_DATA_WIDTH)(_code 643))
					((RD_DATA_COUNT_WIDTH)(_code 644))
					((PROG_EMPTY_THRESH)((i 10)))
					((DOUT_RESET_VALUE)(_string \"0"\))
					((CDC_SYNC_STAGES)(_code 645))
					((WAKEUP_TIME)((i 0)))
				)
				(_port
					((sleep)(sleep))
					((rst)(rst))
					((wr_clk)(wr_clk))
					((wr_en)(wr_en))
					((din)(din))
					((full)(full))
					((prog_full)(_open))
					((wr_data_count)(wr_data_count))
					((overflow)(overflow))
					((wr_rst_busy)(wr_rst_busy))
					((almost_full)(almost_full))
					((wr_ack)(wr_ack))
					((rd_clk)(rd_clk))
					((rd_en)(rd_en))
					((dout)(dout))
					((empty)(empty))
					((prog_empty)(_open))
					((rd_data_count)(rd_data_count))
					((underflow)(underflow))
					((rd_rst_busy)(_open))
					((almost_empty)(almost_empty))
					((data_valid)(data_valid))
					((injectsbiterr)(injectsbiterr))
					((injectdbiterr)(injectdbiterr))
					((sbiterr)(_open))
					((dbiterr)(_open))
				)
			)
		)
		(_generate STD_MODE 0 1988(_if 646)
		)
		(_generate FWFT_MODE 0 1999(_if 647)
		)
		(_object
			(_prcs
				(line__1983(_arch 8 0 1983(_assignment(_alias((Empty)(Empty_i)))(_simpleassign BUF)(_trgt(8))(_sens(133)))))
				(line__1984(_arch 9 0 1984(_assignment(_trgt(7))(_sens(21)(131)))))
				(line__1985(_arch 10 0 1985(_assignment(_trgt(16))(_sens(134)))))
				(line__1986(_arch 11 0 1986(_assignment(_trgt(14))(_sens(135)))))
			)
		)
	)
	(_object
		(_gen(_int C_ALLOW_2N_DEPTH -1 0 205 \0\ (_ent gms((i 0)))))
		(_type(_int ~STRING~12 0 206(_array -2((_uto i 1 i 2147483647)))))
		(_gen(_int C_FAMILY 0 0 206(_ent(_string \"virtex5"\))))
		(_gen(_int C_DATA_WIDTH -1 0 207 \16\ (_ent gms((i 16)))))
		(_gen(_int C_ENABLE_RLOCS -1 0 208 \0\ (_ent((i 0)))))
		(_gen(_int C_FIFO_DEPTH -1 0 209 \15\ (_ent gms((i 15)))))
		(_gen(_int C_HAS_ALMOST_EMPTY -1 0 210 \1\ (_ent((i 1)))))
		(_gen(_int C_HAS_ALMOST_FULL -1 0 211 \1\ (_ent((i 1)))))
		(_gen(_int C_HAS_RD_ACK -1 0 212 \0\ (_ent((i 0)))))
		(_gen(_int C_HAS_RD_COUNT -1 0 213 \1\ (_ent((i 1)))))
		(_gen(_int C_HAS_RD_ERR -1 0 214 \0\ (_ent((i 0)))))
		(_gen(_int C_HAS_WR_ACK -1 0 215 \0\ (_ent((i 0)))))
		(_gen(_int C_HAS_WR_COUNT -1 0 216 \1\ (_ent((i 1)))))
		(_gen(_int C_HAS_WR_ERR -1 0 217 \0\ (_ent((i 0)))))
		(_gen(_int C_EN_SAFETY_CKT -1 0 218 \0\ (_ent((i 0)))))
		(_gen(_int C_RD_ACK_LOW -1 0 219 \0\ (_ent((i 0)))))
		(_gen(_int C_RD_COUNT_WIDTH -1 0 220 \3\ (_ent gms((i 3)))))
		(_gen(_int C_RD_ERR_LOW -1 0 221 \0\ (_ent((i 0)))))
		(_gen(_int C_USE_EMBEDDED_REG -1 0 222 \0\ (_ent((i 0)))))
		(_gen(_int C_PRELOAD_REGS -1 0 223 \0\ (_ent((i 0)))))
		(_gen(_int C_PRELOAD_LATENCY -1 0 224 \1\ (_ent((i 1)))))
		(_gen(_int C_USE_BLOCKMEM -1 0 225 \1\ (_ent((i 1)))))
		(_gen(_int C_WR_ACK_LOW -1 0 226 \0\ (_ent((i 0)))))
		(_gen(_int C_WR_COUNT_WIDTH -1 0 227 \3\ (_ent gms((i 3)))))
		(_gen(_int C_WR_ERR_LOW -1 0 228 \0\ (_ent((i 0)))))
		(_gen(_int C_SYNCHRONIZER_STAGE -1 0 229 \2\ (_ent((i 2)))))
		(_gen(_int C_XPM_FIFO -1 0 230 \1\ (_ent gms((i 1)))))
		(_type(_int ~STD_LOGIC_VECTOR{C_DATA_WIDTH-1~downto~0}~12 0 233(_array -3((_dto c 648 i 0)))))
		(_port(_int Din 1 0 233(_ent(_in((_others(i 2)))))))
		(_port(_int Wr_en -3 0 234(_ent(_in((i 3))))))
		(_port(_int Wr_clk -3 0 235(_ent(_in((i 3))))))
		(_port(_int Rd_en -3 0 236(_ent(_in((i 2))))))
		(_port(_int Rd_clk -3 0 237(_ent(_in((i 3))))))
		(_port(_int Ainit -3 0 238(_ent(_in((i 3))))))
		(_type(_int ~STD_LOGIC_VECTOR{C_DATA_WIDTH-1~downto~0}~122 0 239(_array -3((_dto c 649 i 0)))))
		(_port(_int Dout 2 0 239(_ent(_out))))
		(_port(_int Full -3 0 240(_ent(_out))))
		(_port(_int Empty -3 0 241(_ent(_out))))
		(_port(_int Almost_full -3 0 242(_ent(_out))))
		(_port(_int Almost_empty -3 0 243(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_WR_COUNT_WIDTH-1~downto~0}~12 0 244(_array -3((_dto c 650 i 0)))))
		(_port(_int Wr_count 3 0 244(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_RD_COUNT_WIDTH-1~downto~0}~12 0 245(_array -3((_dto c 651 i 0)))))
		(_port(_int Rd_count 4 0 245(_ent(_out))))
		(_port(_int Rd_ack -3 0 246(_ent(_out))))
		(_port(_int Rd_err -3 0 247(_ent(_out))))
		(_port(_int Wr_ack -3 0 248(_ent(_out))))
		(_port(_int Wr_err -3 0 249(_ent(_out))))
		(_type(_int ~STRING{1~to~4}~13 0 344(_array -2((_to i 1 i 4)))))
		(_type(_int ~STRING{1~to~5}~13 0 345(_array -2((_to i 1 i 5)))))
		(_type(_int ~STRING{1~to~11}~13 0 346(_array -2((_to i 1 i 11)))))
		(_type(_int ~STRING{1~to~3}~13 0 364(_array -2((_to i 1 i 3)))))
		(_type(_int ~STRING{1~to~4}~132 0 365(_array -2((_to i 1 i 4)))))
		(_type(_int ~STRING~13 0 401(_array -2((_uto i 1 i 2147483647)))))
		(_cnst(_int FAMILY_TO_USE 10 0 401(_arch gms(_code 652))))
		(_cnst(_int FAMILY_IS_SUPPORTED -4 0 407(_arch((i 1)))))
		(_type(_int ~STRING~133 0 410(_array -2((_to i 1 i 11)))))
		(_cnst(_int C_DEFAULT_VALUE 11 0 410(_arch(_string \"BlankString"\))))
		(_type(_int ~STRING~135 0 411(_array -2((_to i 1 i 6)))))
		(_cnst(_int C_PRIM_FIFO_TYPE 12 0 411(_arch(_string \"512x36"\))))
		(_type(_int ~STRING~136 0 412(_array -2((_to i 1 i 1)))))
		(_cnst(_int RST_VAL 13 0 412(_arch(_string \"0"\))))
		(_cnst(_int FAM_IS_NOT_S3_V4_V5 -4 0 420(_arch((i 1)))))
		(_cnst(_int FG_MEM_TYPE -1 0 426(_arch gms(_code 653))))
		(_cnst(_int FG_IMP_TYPE -1 0 439(_arch((i 2)))))
		(_cnst(_int C_HAS_RST_INT -1 0 442(_arch((i 1)))))
		(_cnst(_int C_HAS_SRST_INT -1 0 444(_arch((i 0)))))
		(_cnst(_int C_EN_SAFETY_CKT_1 -1 0 446(_arch gms(_code 654))))
		(_sig(_int PROG_FULL -3 0 450(_arch(_uni))))
		(_sig(_int PROG_EMPTY -3 0 451(_arch(_uni))))
		(_sig(_int SBITERR -3 0 452(_arch(_uni))))
		(_sig(_int DBITERR -3 0 453(_arch(_uni))))
		(_sig(_int WR_RST_BUSY -3 0 454(_arch(_uni))))
		(_sig(_int RD_RST_BUSY -3 0 455(_arch(_uni))))
		(_sig(_int S_AXI_AWREADY -3 0 456(_arch(_uni))))
		(_sig(_int S_AXI_WREADY -3 0 457(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{3~downto~0}~13 0 458(_array -3((_dto i 3 i 0)))))
		(_sig(_int S_AXI_BID 14 0 458(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{2-1~downto~0}~13 0 459(_array -3((_dto i 1 i 0)))))
		(_sig(_int S_AXI_BRESP 15 0 459(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{0~downto~0}~13 0 460(_array -3((_dto i 0 i 0)))))
		(_sig(_int S_AXI_BUSER 16 0 460(_arch(_uni))))
		(_sig(_int S_AXI_BVALID -3 0 461(_arch(_uni))))
		(_sig(_int M_AXI_AWID 14 0 464(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{31~downto~0}~13 0 465(_array -3((_dto i 31 i 0)))))
		(_sig(_int M_AXI_AWADDR 17 0 465(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{8-1~downto~0}~13 0 466(_array -3((_dto i 7 i 0)))))
		(_sig(_int M_AXI_AWLEN 18 0 466(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{3-1~downto~0}~13 0 467(_array -3((_dto i 2 i 0)))))
		(_sig(_int M_AXI_AWSIZE 19 0 467(_arch(_uni))))
		(_sig(_int M_AXI_AWBURST 15 0 468(_arch(_uni))))
		(_sig(_int M_AXI_AWLOCK 15 0 469(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{4-1~downto~0}~13 0 470(_array -3((_dto i 3 i 0)))))
		(_sig(_int M_AXI_AWCACHE 20 0 470(_arch(_uni))))
		(_sig(_int M_AXI_AWPROT 19 0 471(_arch(_uni))))
		(_sig(_int M_AXI_AWQOS 20 0 472(_arch(_uni))))
		(_sig(_int M_AXI_AWREGION 20 0 473(_arch(_uni))))
		(_sig(_int M_AXI_AWUSER 16 0 474(_arch(_uni))))
		(_sig(_int M_AXI_AWVALID -3 0 475(_arch(_uni))))
		(_sig(_int M_AXI_WID 14 0 476(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{63~downto~0}~13 0 477(_array -3((_dto i 63 i 0)))))
		(_sig(_int M_AXI_WDATA 21 0 477(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{7~downto~0}~13 0 478(_array -3((_dto i 7 i 0)))))
		(_sig(_int M_AXI_WSTRB 22 0 478(_arch(_uni))))
		(_sig(_int M_AXI_WLAST -3 0 479(_arch(_uni))))
		(_sig(_int M_AXI_WUSER 16 0 480(_arch(_uni))))
		(_sig(_int M_AXI_WVALID -3 0 481(_arch(_uni))))
		(_sig(_int M_AXI_BREADY -3 0 482(_arch(_uni))))
		(_sig(_int S_AXI_ARREADY -3 0 485(_arch(_uni))))
		(_sig(_int S_AXI_RID 14 0 486(_arch(_uni))))
		(_sig(_int S_AXI_RDATA 21 0 487(_arch(_uni))))
		(_sig(_int S_AXI_RRESP 15 0 488(_arch(_uni))))
		(_sig(_int S_AXI_RLAST -3 0 489(_arch(_uni))))
		(_sig(_int S_AXI_RUSER 16 0 490(_arch(_uni))))
		(_sig(_int S_AXI_RVALID -3 0 491(_arch(_uni))))
		(_sig(_int M_AXI_ARID 14 0 494(_arch(_uni))))
		(_sig(_int M_AXI_ARADDR 17 0 495(_arch(_uni))))
		(_sig(_int M_AXI_ARLEN 18 0 496(_arch(_uni))))
		(_sig(_int M_AXI_ARSIZE 19 0 497(_arch(_uni))))
		(_sig(_int M_AXI_ARBURST 15 0 498(_arch(_uni))))
		(_sig(_int M_AXI_ARLOCK 15 0 499(_arch(_uni))))
		(_sig(_int M_AXI_ARCACHE 20 0 500(_arch(_uni))))
		(_sig(_int M_AXI_ARPROT 19 0 501(_arch(_uni))))
		(_sig(_int M_AXI_ARQOS 20 0 502(_arch(_uni))))
		(_sig(_int M_AXI_ARREGION 20 0 503(_arch(_uni))))
		(_sig(_int M_AXI_ARUSER 16 0 504(_arch(_uni))))
		(_sig(_int M_AXI_ARVALID -3 0 505(_arch(_uni))))
		(_sig(_int M_AXI_RREADY -3 0 506(_arch(_uni))))
		(_sig(_int S_AXIS_TREADY -3 0 509(_arch(_uni))))
		(_sig(_int M_AXIS_TVALID -3 0 512(_arch(_uni))))
		(_sig(_int M_AXIS_TDATA 21 0 513(_arch(_uni))))
		(_sig(_int M_AXIS_TSTRB 14 0 514(_arch(_uni))))
		(_sig(_int M_AXIS_TKEEP 14 0 515(_arch(_uni))))
		(_sig(_int M_AXIS_TLAST -3 0 516(_arch(_uni))))
		(_sig(_int M_AXIS_TID 22 0 517(_arch(_uni))))
		(_sig(_int M_AXIS_TDEST 14 0 518(_arch(_uni))))
		(_sig(_int M_AXIS_TUSER 14 0 519(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{4~downto~0}~13 0 522(_array -3((_dto i 4 i 0)))))
		(_sig(_int AXI_AW_DATA_COUNT 23 0 522(_arch(_uni))))
		(_sig(_int AXI_AW_WR_DATA_COUNT 23 0 523(_arch(_uni))))
		(_sig(_int AXI_AW_RD_DATA_COUNT 23 0 524(_arch(_uni))))
		(_sig(_int AXI_AW_SBITERR -3 0 525(_arch(_uni))))
		(_sig(_int AXI_AW_DBITERR -3 0 526(_arch(_uni))))
		(_sig(_int AXI_AW_OVERFLOW -3 0 527(_arch(_uni))))
		(_sig(_int AXI_AW_UNDERFLOW -3 0 528(_arch(_uni))))
		(_sig(_int AXI_AW_PROG_FULL -3 0 529(_arch(_uni))))
		(_sig(_int AXI_AW_PROG_EMPTY -3 0 530(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{10~downto~0}~13 0 534(_array -3((_dto i 10 i 0)))))
		(_sig(_int AXI_W_DATA_COUNT 24 0 534(_arch(_uni))))
		(_sig(_int AXI_W_WR_DATA_COUNT 24 0 535(_arch(_uni))))
		(_sig(_int AXI_W_RD_DATA_COUNT 24 0 536(_arch(_uni))))
		(_sig(_int AXI_W_SBITERR -3 0 537(_arch(_uni))))
		(_sig(_int AXI_W_DBITERR -3 0 538(_arch(_uni))))
		(_sig(_int AXI_W_OVERFLOW -3 0 539(_arch(_uni))))
		(_sig(_int AXI_W_UNDERFLOW -3 0 540(_arch(_uni))))
		(_sig(_int AXI_W_PROG_FULL -3 0 541(_arch(_uni))))
		(_sig(_int AXI_W_PROG_EMPTY -3 0 542(_arch(_uni))))
		(_sig(_int AXI_B_DATA_COUNT 23 0 545(_arch(_uni))))
		(_sig(_int AXI_B_WR_DATA_COUNT 23 0 546(_arch(_uni))))
		(_sig(_int AXI_B_RD_DATA_COUNT 23 0 547(_arch(_uni))))
		(_sig(_int AXI_B_SBITERR -3 0 548(_arch(_uni))))
		(_sig(_int AXI_B_DBITERR -3 0 549(_arch(_uni))))
		(_sig(_int AXI_B_OVERFLOW -3 0 550(_arch(_uni))))
		(_sig(_int AXI_B_UNDERFLOW -3 0 551(_arch(_uni))))
		(_sig(_int AXI_B_PROG_FULL -3 0 552(_arch(_uni))))
		(_sig(_int AXI_B_PROG_EMPTY -3 0 553(_arch(_uni))))
		(_sig(_int AXI_AR_DATA_COUNT 23 0 556(_arch(_uni))))
		(_sig(_int AXI_AR_WR_DATA_COUNT 23 0 557(_arch(_uni))))
		(_sig(_int AXI_AR_RD_DATA_COUNT 23 0 558(_arch(_uni))))
		(_sig(_int AXI_AR_SBITERR -3 0 559(_arch(_uni))))
		(_sig(_int AXI_AR_DBITERR -3 0 560(_arch(_uni))))
		(_sig(_int AXI_AR_OVERFLOW -3 0 561(_arch(_uni))))
		(_sig(_int AXI_AR_UNDERFLOW -3 0 562(_arch(_uni))))
		(_sig(_int AXI_AR_PROG_FULL -3 0 563(_arch(_uni))))
		(_sig(_int AXI_AR_PROG_EMPTY -3 0 564(_arch(_uni))))
		(_sig(_int AXI_R_DATA_COUNT 24 0 567(_arch(_uni))))
		(_sig(_int AXI_R_WR_DATA_COUNT 24 0 568(_arch(_uni))))
		(_sig(_int AXI_R_RD_DATA_COUNT 24 0 569(_arch(_uni))))
		(_sig(_int AXI_R_SBITERR -3 0 570(_arch(_uni))))
		(_sig(_int AXI_R_DBITERR -3 0 571(_arch(_uni))))
		(_sig(_int AXI_R_OVERFLOW -3 0 572(_arch(_uni))))
		(_sig(_int AXI_R_UNDERFLOW -3 0 573(_arch(_uni))))
		(_sig(_int AXI_R_PROG_FULL -3 0 574(_arch(_uni))))
		(_sig(_int AXI_R_PROG_EMPTY -3 0 575(_arch(_uni))))
		(_sig(_int AXIS_DATA_COUNT 24 0 578(_arch(_uni))))
		(_sig(_int AXIS_WR_DATA_COUNT 24 0 579(_arch(_uni))))
		(_sig(_int AXIS_RD_DATA_COUNT 24 0 580(_arch(_uni))))
		(_sig(_int AXIS_SBITERR -3 0 581(_arch(_uni))))
		(_sig(_int AXIS_DBITERR -3 0 582(_arch(_uni))))
		(_sig(_int AXIS_OVERFLOW -3 0 583(_arch(_uni))))
		(_sig(_int AXIS_UNDERFLOW -3 0 584(_arch(_uni))))
		(_sig(_int AXIS_PROG_FULL -3 0 585(_arch(_uni))))
		(_sig(_int AXIS_PROG_EMPTY -3 0 586(_arch(_uni))))
		(_sig(_int Full_int -3 0 587(_arch(_uni))))
		(_sig(_int Almost_full_int -3 0 588(_arch(_uni))))
		(_sig(_int Empty_i -3 0 592(_arch(_uni))))
		(_sig(_int Wr_err_i -3 0 593(_arch(_uni))))
		(_sig(_int Rd_err_i -3 0 594(_arch(_uni))))
		(_type(_int ~STRING~137 0 595(_array -2((_uto i 1 i 2147483647)))))
		(_cnst(_int READ_MODE 25 0 595(_arch gms(_code 655))))
		(_type(_int ~STRING~138 0 596(_array -2((_uto i 1 i 2147483647)))))
		(_cnst(_int FIFO_MEMORY_TYPE 26 0 596(_arch gms(_code 656))))
		(_cnst(_int RD_LATENCY -1 0 597(_arch gms(_code 657))))
		(_prcs
			(line__0(_int 12 0 0(_prcs)))
		)
		(_subprogram
			(_int GetMemType 13 0 277(_arch(_func -1)))
			(_int if_then_else 14 0 298(_arch(_func)))
			(_int log2 15 0 313(_arch(_func -1)))
			(_int XPM_FIFO_GetMemType 16 0 342(_arch(_func -6(_uto))))
			(_int Get_READ_MODE 17 0 362(_arch(_func)))
			(_int Getlatency 18 0 381(_arch(_func)))
		)
		(_type(_ext ~extstd.standard.INTEGER(0 INTEGER)))
		(_type(_ext ~extstd.standard.CHARACTER(0 CHARACTER)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ~extstd.standard.BOOLEAN(0 BOOLEAN)))
		(_type(_ext ~extstd.standard.NATURAL(0 NATURAL)))
		(_type(_ext ~extstd.standard.STRING(0 STRING)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD))(ieee(std_logic_misc))(ieee(STD_LOGIC_UNSIGNED))(ieee(std_logic_arith))(xpm(VCOMPONENTS)))
	(_static
		(1668183366 1852795252 1735355424 1701978162 1986618723 1629512805 1836410738 544501349 1735549292 1948283493 544104808 544437353 1634754915 1768712546 1864399220 1580343398 539897907)
		(1869903201)
		(1668246626 107)
		(1953720676 1969383794 6579572)
		(6583411)
		(1952872294)
		(0)
		(0 0 0 0 0 0 0 0)
		(0 0)
		(0)
		(0)
		(0)
		(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
		(0 0 0)
		(48)
	)
	(_model . implementation 658 -1)
)
V 000055 55 37464         1580965114524 implementation
(_unit VHDL(sync_fifo_fg 0 2203(implementation 0 2250))
	(_version vde)
	(_time 1580965114525 2020.02.05 22:58:34)
	(_source(\C:/Xilinx/Vivado/2019.2/data/ip/xilinx/lib_fifo_v1_0/hdl/lib_fifo_v1_0_rfs.vhd\(\C:/Xilinx/Vivado/2019.2/data/ip/xpm/xpm_VCOMP.vhd\ VHDL i)))
	(_parameters tan)
	(_code e6b7b4b4e9b1e7f0e5e7b7b2f0bcbee0e0e0b0e3b0e0e0)
	(_ent
		(_time 1580965114520)
	)
	(_comp
		(.xpm.VCOMPONENTS.xpm_fifo_sync
			(_object
				(_type(_int ~STRING~15121 1 598(_array -1((_uto i 1 i 2147483647)))))
				(_gen(_int FIFO_MEMORY_TYPE 27 1 598(_ent(_string \"auto"\))))
				(_gen(_int FIFO_WRITE_DEPTH -2 1 599(_ent((i 2048)))))
				(_gen(_int CASCADE_HEIGHT -2 1 600(_ent((i 0)))))
				(_gen(_int WRITE_DATA_WIDTH -2 1 601(_ent((i 32)))))
				(_type(_int ~STRING~15122 1 602(_array -1((_uto i 1 i 2147483647)))))
				(_gen(_int READ_MODE 28 1 602(_ent(_string \"std"\))))
				(_gen(_int FIFO_READ_LATENCY -2 1 603(_ent((i 1)))))
				(_gen(_int FULL_RESET_VALUE -2 1 604(_ent((i 0)))))
				(_type(_int ~STRING~15123 1 605(_array -1((_uto i 1 i 2147483647)))))
				(_gen(_int USE_ADV_FEATURES 29 1 605(_ent(_string \"0707"\))))
				(_gen(_int READ_DATA_WIDTH -2 1 606(_ent((i 32)))))
				(_gen(_int WR_DATA_COUNT_WIDTH -2 1 607(_ent((i 1)))))
				(_gen(_int PROG_FULL_THRESH -2 1 608(_ent((i 10)))))
				(_gen(_int RD_DATA_COUNT_WIDTH -2 1 609(_ent((i 1)))))
				(_gen(_int PROG_EMPTY_THRESH -2 1 610(_ent((i 10)))))
				(_type(_int ~STRING~15124 1 611(_array -1((_uto i 1 i 2147483647)))))
				(_gen(_int DOUT_RESET_VALUE 30 1 611(_ent(_string \"0"\))))
				(_type(_int ~STRING~15125 1 612(_array -1((_uto i 1 i 2147483647)))))
				(_gen(_int ECC_MODE 31 1 612(_ent(_string \"no_ecc"\))))
				(_gen(_int SIM_ASSERT_CHK -2 1 613(_ent((i 0)))))
				(_gen(_int WAKEUP_TIME -2 1 614(_ent((i 0)))))
				(_port(_int sleep -3 1 618(_ent (_in))))
				(_port(_int rst -3 1 619(_ent (_in))))
				(_port(_int wr_clk -3 1 620(_ent (_in))))
				(_port(_int wr_en -3 1 621(_ent (_in))))
				(_type(_int ~STD_LOGIC_VECTOR{WRITE_DATA_WIDTH-1~downto~0}~15127 1 622(_array -3((_dto c 15 i 0)))))
				(_port(_int din 32 1 622(_ent (_in))))
				(_port(_int full -3 1 623(_ent (_out))))
				(_port(_int prog_full -3 1 624(_ent (_out))))
				(_type(_int ~STD_LOGIC_VECTOR{WR_DATA_COUNT_WIDTH-1~downto~0}~15129 1 625(_array -3((_dto c 16 i 0)))))
				(_port(_int wr_data_count 33 1 625(_ent (_out))))
				(_port(_int overflow -3 1 626(_ent (_out))))
				(_port(_int wr_rst_busy -3 1 627(_ent (_out))))
				(_port(_int almost_full -3 1 628(_ent (_out))))
				(_port(_int wr_ack -3 1 629(_ent (_out))))
				(_port(_int rd_en -3 1 630(_ent (_in))))
				(_type(_int ~STD_LOGIC_VECTOR{READ_DATA_WIDTH-1~downto~0}~15131 1 631(_array -3((_dto c 17 i 0)))))
				(_port(_int dout 34 1 631(_ent (_out))))
				(_port(_int empty -3 1 632(_ent (_out))))
				(_port(_int prog_empty -3 1 633(_ent (_out))))
				(_type(_int ~STD_LOGIC_VECTOR{RD_DATA_COUNT_WIDTH-1~downto~0}~15133 1 634(_array -3((_dto c 18 i 0)))))
				(_port(_int rd_data_count 35 1 634(_ent (_out))))
				(_port(_int underflow -3 1 635(_ent (_out))))
				(_port(_int rd_rst_busy -3 1 636(_ent (_out))))
				(_port(_int almost_empty -3 1 637(_ent (_out))))
				(_port(_int data_valid -3 1 638(_ent (_out))))
				(_port(_int injectsbiterr -3 1 639(_ent (_in))))
				(_port(_int injectdbiterr -3 1 640(_ent (_in))))
				(_port(_int sbiterr -3 1 641(_ent (_out))))
				(_port(_int dbiterr -3 1 642(_ent (_out))))
			)
		)
	)
	(_generate xpm_fifo_instance 0 2624(_if 19)
		(_inst xpm_fifo_sync_inst 0 2627(_comp .xpm.VCOMPONENTS.xpm_fifo_sync)
			(_gen
				((FIFO_MEMORY_TYPE)(_code 20))
				((FIFO_WRITE_DEPTH)(_code 21))
				((WRITE_DATA_WIDTH)(_code 22))
				((READ_MODE)(_code 23))
				((FIFO_READ_LATENCY)(_code 24))
				((FULL_RESET_VALUE)((i 1)))
				((USE_ADV_FEATURES)(_string \"1F1F"\))
				((READ_DATA_WIDTH)(_code 25))
				((WR_DATA_COUNT_WIDTH)(_code 26))
				((PROG_FULL_THRESH)((i 10)))
				((RD_DATA_COUNT_WIDTH)((i 4)))
				((PROG_EMPTY_THRESH)((i 10)))
				((DOUT_RESET_VALUE)(_string \"0"\))
				((ECC_MODE)(_string \"no_ecc"\))
				((WAKEUP_TIME)((i 0)))
			)
			(_port
				((sleep)((i 2)))
				((rst)(Sinit))
				((wr_clk)(Clk))
				((wr_en)(Wr_en))
				((din)(Din))
				((full)(sig_Full))
				((prog_full)(_open))
				((wr_data_count)(sig_full_fg_datacnt))
				((overflow)(Wr_err_i))
				((wr_rst_busy)(_open))
				((almost_full)(Almost_full))
				((wr_ack)(Wr_ack))
				((rd_en)(Rd_en))
				((dout)(Dout))
				((empty)(Empty_i))
				((prog_empty)(_open))
				((rd_data_count)(_open))
				((underflow)(Rd_err_i))
				((rd_rst_busy)(_open))
				((almost_empty)(_open))
				((data_valid)(Rd_ack))
				((injectsbiterr)((i 2)))
				((injectdbiterr)((i 2)))
				((sbiterr)(_open))
				((dbiterr)(_open))
			)
			(_use(_ent xpm xpm_fifo_sync)
				(_gen
					((FIFO_MEMORY_TYPE)(_code 27))
					((ECC_MODE)(_string \"no_ecc"\))
					((SIM_ASSERT_CHK)((i 0)))
					((CASCADE_HEIGHT)((i 0)))
					((FIFO_WRITE_DEPTH)(_code 28))
					((WRITE_DATA_WIDTH)(_code 29))
					((WR_DATA_COUNT_WIDTH)(_code 30))
					((PROG_FULL_THRESH)((i 10)))
					((FULL_RESET_VALUE)((i 1)))
					((USE_ADV_FEATURES)(_string \"1F1F"\))
					((READ_MODE)(_code 31))
					((FIFO_READ_LATENCY)(_code 32))
					((READ_DATA_WIDTH)(_code 33))
					((RD_DATA_COUNT_WIDTH)((i 4)))
					((PROG_EMPTY_THRESH)((i 10)))
					((DOUT_RESET_VALUE)(_string \"0"\))
					((WAKEUP_TIME)((i 0)))
				)
				(_port
					((sleep)(sleep))
					((rst)(rst))
					((wr_clk)(wr_clk))
					((wr_en)(wr_en))
					((din)(din))
					((full)(full))
					((prog_full)(_open))
					((wr_data_count)(wr_data_count))
					((overflow)(overflow))
					((wr_rst_busy)(_open))
					((almost_full)(almost_full))
					((wr_ack)(wr_ack))
					((rd_en)(rd_en))
					((dout)(dout))
					((empty)(empty))
					((prog_empty)(_open))
					((rd_data_count)(_open))
					((underflow)(underflow))
					((rd_rst_busy)(_open))
					((almost_empty)(_open))
					((data_valid)(data_valid))
					((injectsbiterr)(injectsbiterr))
					((injectdbiterr)(injectdbiterr))
					((sbiterr)(_open))
					((dbiterr)(_open))
				)
			)
		)
		(_generate STD_MODE 0 2685(_if 34)
		)
		(_generate FWFT_MODE 0 2696(_if 35)
		)
		(_object
			(_prcs
				(line__2675(_arch 0 0 2675(_assignment(_alias((Empty)(empty_i)))(_simpleassign BUF)(_trgt(8))(_sens(138)))))
				(line__2676(_arch 1 0 2676(_assignment(_alias((Full)(sig_full)))(_simpleassign BUF)(_trgt(7))(_sens(18)))))
				(line__2677(_arch 2 0 2677(_assignment(_trgt(12))(_sens(14)))))
				(line__2678(_arch 3 0 2678(_assignment(_trgt(11))(_sens(15)))))
				(line__2681(_arch 4 0 2681(_assignment(_trgt(13))(_sens(19(_range 36)))(_read(19(_range 37))))))
			)
		)
	)
	(_generate legacy_fifo_instance 0 2705(_if 38)
		(_generate FAMILY_SUPPORTED 0 2788(_if t)
			(_generate UltraScale_device 0 2791(_if 39)
				(_object
					(_prcs
						(line__2793(_arch 5 0 2793(_assignment(_trgt(7))(_sens(18)(28)))))
					)
				)
			)
			(_generate Series7_device 0 2797(_if 40)
				(_object
					(_prcs
						(line__2799(_arch 6 0 2799(_assignment(_alias((Full)(sig_full)))(_simpleassign BUF)(_trgt(7))(_sens(18)))))
					)
				)
			)
			(_inst I_SYNC_FIFO_BRAM 0 2824(_ent fifo_generator_v13_2_5 protected_b739615d3c41fd280daa5881fcb9783e580b19fb1ad444ceaad4686fab969164)
				(_gen
					((C_COMMON_CLOCK)(_code 41))
					((C_EN_SAFETY_CKT)(_code 42))
					((C_COUNT_TYPE)(_code 43))
					((C_DATA_COUNT_WIDTH)(_code 44))
					((C_DEFAULT_VALUE)(_code 45))
					((C_DIN_WIDTH)(_code 46))
					((C_DOUT_RST_VAL)(_code 47))
					((C_DOUT_WIDTH)(_code 48))
					((C_ENABLE_RLOCS)(_code 49))
					((C_FAMILY)(_code 50))
					((C_FULL_FLAGS_RST_VAL)(_code 51))
					((C_HAS_ALMOST_EMPTY)(_code 52))
					((C_HAS_ALMOST_FULL)(_code 53))
					((C_HAS_BACKUP)(_code 54))
					((C_HAS_DATA_COUNT)(_code 55))
					((C_HAS_INT_CLK)(_code 56))
					((C_HAS_MEMINIT_FILE)(_code 57))
					((C_HAS_OVERFLOW)(_code 58))
					((C_HAS_RD_DATA_COUNT)(_code 59))
					((C_HAS_RD_RST)(_code 60))
					((C_HAS_RST)(_code 61))
					((C_HAS_SRST)(_code 62))
					((C_HAS_UNDERFLOW)(_code 63))
					((C_HAS_VALID)(_code 64))
					((C_HAS_WR_ACK)(_code 65))
					((C_HAS_WR_DATA_COUNT)(_code 66))
					((C_HAS_WR_RST)(_code 67))
					((C_IMPLEMENTATION_TYPE)(_code 68))
					((C_INIT_WR_PNTR_VAL)(_code 69))
					((C_MEMORY_TYPE)(_code 70))
					((C_MIF_FILE_NAME)(_code 71))
					((C_OPTIMIZATION_MODE)(_code 72))
					((C_OVERFLOW_LOW)(_code 73))
					((C_PRELOAD_LATENCY)(_code 74))
					((C_PRELOAD_REGS)(_code 75))
					((C_PRIM_FIFO_TYPE)(_code 76))
					((C_PROG_EMPTY_THRESH_ASSERT_VAL)(_code 77))
					((C_PROG_EMPTY_THRESH_NEGATE_VAL)(_code 78))
					((C_PROG_EMPTY_TYPE)(_code 79))
					((C_PROG_FULL_THRESH_ASSERT_VAL)(_code 80))
					((C_PROG_FULL_THRESH_NEGATE_VAL)(_code 81))
					((C_PROG_FULL_TYPE)(_code 82))
					((C_RD_DATA_COUNT_WIDTH)(_code 83))
					((C_RD_DEPTH)(_code 84))
					((C_RD_FREQ)(_code 85))
					((C_RD_PNTR_WIDTH)(_code 86))
					((C_UNDERFLOW_LOW)(_code 87))
					((C_USE_DOUT_RST)(_code 88))
					((C_USE_ECC)(_code 89))
					((C_USE_EMBEDDED_REG)(_code 90))
					((C_USE_FIFO16_FLAGS)(_code 91))
					((C_USE_FWFT_DATA_COUNT)(_code 92))
					((C_VALID_LOW)(_code 93))
					((C_WR_ACK_LOW)(_code 94))
					((C_WR_DATA_COUNT_WIDTH)(_code 95))
					((C_WR_DEPTH)(_code 96))
					((C_WR_FREQ)(_code 97))
					((C_WR_PNTR_WIDTH)(_code 98))
					((C_WR_RESPONSE_LATENCY)(_code 99))
					((C_MSGON_VAL)(_code 100))
					((C_ENABLE_RST_SYNC)(_code 101))
					((C_ERROR_INJECTION_TYPE)(_code 102))
					((C_SYNCHRONIZER_STAGE)(_code 103))
					((C_INTERFACE_TYPE)(_code 104))
					((C_AXI_TYPE)(_code 105))
					((C_HAS_AXI_WR_CHANNEL)(_code 106))
					((C_HAS_AXI_RD_CHANNEL)(_code 107))
					((C_HAS_SLAVE_CE)(_code 108))
					((C_HAS_MASTER_CE)(_code 109))
					((C_ADD_NGC_CONSTRAINT)(_code 110))
					((C_USE_COMMON_OVERFLOW)(_code 111))
					((C_USE_COMMON_UNDERFLOW)(_code 112))
					((C_USE_DEFAULT_SETTINGS)(_code 113))
					((C_AXI_ID_WIDTH)(_code 114))
					((C_AXI_ADDR_WIDTH)(_code 115))
					((C_AXI_DATA_WIDTH)(_code 116))
					((C_AXI_LEN_WIDTH)(_code 117))
					((C_AXI_LOCK_WIDTH)(_code 118))
					((C_HAS_AXI_ID)(_code 119))
					((C_HAS_AXI_AWUSER)(_code 120))
					((C_HAS_AXI_WUSER)(_code 121))
					((C_HAS_AXI_BUSER)(_code 122))
					((C_HAS_AXI_ARUSER)(_code 123))
					((C_HAS_AXI_RUSER)(_code 124))
					((C_AXI_ARUSER_WIDTH)(_code 125))
					((C_AXI_AWUSER_WIDTH)(_code 126))
					((C_AXI_WUSER_WIDTH)(_code 127))
					((C_AXI_BUSER_WIDTH)(_code 128))
					((C_AXI_RUSER_WIDTH)(_code 129))
					((C_HAS_AXIS_TDATA)(_code 130))
					((C_HAS_AXIS_TID)(_code 131))
					((C_HAS_AXIS_TDEST)(_code 132))
					((C_HAS_AXIS_TUSER)(_code 133))
					((C_HAS_AXIS_TREADY)(_code 134))
					((C_HAS_AXIS_TLAST)(_code 135))
					((C_HAS_AXIS_TSTRB)(_code 136))
					((C_HAS_AXIS_TKEEP)(_code 137))
					((C_AXIS_TDATA_WIDTH)(_code 138))
					((C_AXIS_TID_WIDTH)(_code 139))
					((C_AXIS_TDEST_WIDTH)(_code 140))
					((C_AXIS_TUSER_WIDTH)(_code 141))
					((C_AXIS_TSTRB_WIDTH)(_code 142))
					((C_AXIS_TKEEP_WIDTH)(_code 143))
					((C_WACH_TYPE)(_code 144))
					((C_WDCH_TYPE)(_code 145))
					((C_WRCH_TYPE)(_code 146))
					((C_RACH_TYPE)(_code 147))
					((C_RDCH_TYPE)(_code 148))
					((C_AXIS_TYPE)(_code 149))
					((C_IMPLEMENTATION_TYPE_WACH)(_code 150))
					((C_IMPLEMENTATION_TYPE_WDCH)(_code 151))
					((C_IMPLEMENTATION_TYPE_WRCH)(_code 152))
					((C_IMPLEMENTATION_TYPE_RACH)(_code 153))
					((C_IMPLEMENTATION_TYPE_RDCH)(_code 154))
					((C_IMPLEMENTATION_TYPE_AXIS)(_code 155))
					((C_APPLICATION_TYPE_WACH)(_code 156))
					((C_APPLICATION_TYPE_WDCH)(_code 157))
					((C_APPLICATION_TYPE_WRCH)(_code 158))
					((C_APPLICATION_TYPE_RACH)(_code 159))
					((C_APPLICATION_TYPE_RDCH)(_code 160))
					((C_APPLICATION_TYPE_AXIS)(_code 161))
					((C_USE_ECC_WACH)(_code 162))
					((C_USE_ECC_WDCH)(_code 163))
					((C_USE_ECC_WRCH)(_code 164))
					((C_USE_ECC_RACH)(_code 165))
					((C_USE_ECC_RDCH)(_code 166))
					((C_USE_ECC_AXIS)(_code 167))
					((C_ERROR_INJECTION_TYPE_WACH)(_code 168))
					((C_ERROR_INJECTION_TYPE_WDCH)(_code 169))
					((C_ERROR_INJECTION_TYPE_WRCH)(_code 170))
					((C_ERROR_INJECTION_TYPE_RACH)(_code 171))
					((C_ERROR_INJECTION_TYPE_RDCH)(_code 172))
					((C_ERROR_INJECTION_TYPE_AXIS)(_code 173))
					((C_DIN_WIDTH_WACH)(_code 174))
					((C_DIN_WIDTH_WDCH)(_code 175))
					((C_DIN_WIDTH_WRCH)(_code 176))
					((C_DIN_WIDTH_RACH)(_code 177))
					((C_DIN_WIDTH_RDCH)(_code 178))
					((C_DIN_WIDTH_AXIS)(_code 179))
					((C_WR_DEPTH_WACH)(_code 180))
					((C_WR_DEPTH_WDCH)(_code 181))
					((C_WR_DEPTH_WRCH)(_code 182))
					((C_WR_DEPTH_RACH)(_code 183))
					((C_WR_DEPTH_RDCH)(_code 184))
					((C_WR_DEPTH_AXIS)(_code 185))
					((C_WR_PNTR_WIDTH_WACH)(_code 186))
					((C_WR_PNTR_WIDTH_WDCH)(_code 187))
					((C_WR_PNTR_WIDTH_WRCH)(_code 188))
					((C_WR_PNTR_WIDTH_RACH)(_code 189))
					((C_WR_PNTR_WIDTH_RDCH)(_code 190))
					((C_WR_PNTR_WIDTH_AXIS)(_code 191))
					((C_HAS_DATA_COUNTS_WACH)(_code 192))
					((C_HAS_DATA_COUNTS_WDCH)(_code 193))
					((C_HAS_DATA_COUNTS_WRCH)(_code 194))
					((C_HAS_DATA_COUNTS_RACH)(_code 195))
					((C_HAS_DATA_COUNTS_RDCH)(_code 196))
					((C_HAS_DATA_COUNTS_AXIS)(_code 197))
					((C_HAS_PROG_FLAGS_WACH)(_code 198))
					((C_HAS_PROG_FLAGS_WDCH)(_code 199))
					((C_HAS_PROG_FLAGS_WRCH)(_code 200))
					((C_HAS_PROG_FLAGS_RACH)(_code 201))
					((C_HAS_PROG_FLAGS_RDCH)(_code 202))
					((C_HAS_PROG_FLAGS_AXIS)(_code 203))
					((C_PROG_FULL_TYPE_WACH)(_code 204))
					((C_PROG_FULL_TYPE_WDCH)(_code 205))
					((C_PROG_FULL_TYPE_WRCH)(_code 206))
					((C_PROG_FULL_TYPE_RACH)(_code 207))
					((C_PROG_FULL_TYPE_RDCH)(_code 208))
					((C_PROG_FULL_TYPE_AXIS)(_code 209))
					((C_PROG_FULL_THRESH_ASSERT_VAL_WACH)(_code 210))
					((C_PROG_FULL_THRESH_ASSERT_VAL_WDCH)(_code 211))
					((C_PROG_FULL_THRESH_ASSERT_VAL_WRCH)(_code 212))
					((C_PROG_FULL_THRESH_ASSERT_VAL_RACH)(_code 213))
					((C_PROG_FULL_THRESH_ASSERT_VAL_RDCH)(_code 214))
					((C_PROG_FULL_THRESH_ASSERT_VAL_AXIS)(_code 215))
					((C_PROG_EMPTY_TYPE_WACH)(_code 216))
					((C_PROG_EMPTY_TYPE_WDCH)(_code 217))
					((C_PROG_EMPTY_TYPE_WRCH)(_code 218))
					((C_PROG_EMPTY_TYPE_RACH)(_code 219))
					((C_PROG_EMPTY_TYPE_RDCH)(_code 220))
					((C_PROG_EMPTY_TYPE_AXIS)(_code 221))
					((C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH)(_code 222))
					((C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH)(_code 223))
					((C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH)(_code 224))
					((C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH)(_code 225))
					((C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH)(_code 226))
					((C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS)(_code 227))
					((C_REG_SLICE_MODE_WACH)(_code 228))
					((C_REG_SLICE_MODE_WDCH)(_code 229))
					((C_REG_SLICE_MODE_WRCH)(_code 230))
					((C_REG_SLICE_MODE_RACH)(_code 231))
					((C_REG_SLICE_MODE_RDCH)(_code 232))
					((C_REG_SLICE_MODE_AXIS)(_code 233))
				)
				(_port
					((backup)(_code 234))
					((backup_marker)(_code 235))
					((clk)(Clk))
					((rst)(_code 236))
					((srst)(Sinit))
					((wr_clk)(_code 237))
					((wr_rst)(_code 238))
					((rd_clk)(_code 239))
					((rd_rst)(_code 240))
					((wr_en)(Wr_en))
					((rd_en)(Rd_en))
					((din)(Din))
					((prog_empty_thresh)(PROG_RDTHRESH_ZEROS))
					((prog_empty_thresh_assert)(PROG_RDTHRESH_ZEROS))
					((prog_empty_thresh_negate)(PROG_RDTHRESH_ZEROS))
					((prog_full_thresh)(PROG_WRTHRESH_ZEROS))
					((prog_full_thresh_assert)(PROG_WRTHRESH_ZEROS))
					((prog_full_thresh_negate)(PROG_WRTHRESH_ZEROS))
					((int_clk)(_code 241))
					((injectdbiterr)(_code 242))
					((injectsbiterr)(_code 243))
					((sleep)(_code 244))
					((full)(sig_full))
					((almost_full)(Almost_full))
					((wr_ack)(Wr_ack))
					((overflow)(Wr_err))
					((empty)(Empty))
					((almost_empty)(ALMOST_EMPTY))
					((valid)(Rd_ack))
					((underflow)(Rd_err))
					((dout)(Dout))
					((data_count)(sig_prim_fg_datacnt))
					((rd_data_count)(RD_DATA_COUNT))
					((wr_data_count)(WR_DATA_COUNT))
					((prog_full)(PROG_FULL))
					((prog_empty)(PROG_EMPTY))
					((sbiterr)(SBITERR))
					((dbiterr)(DBITERR))
					((wr_rst_busy)(WR_RST_BUSY))
					((rd_rst_busy)(RD_RST_BUSY))
					((m_aclk)(_code 245))
					((s_aclk)(_code 246))
					((m_aclk_en)(_code 247))
					((s_aclk_en)(_code 248))
					((s_aresetn)(_code 249))
					((s_axi_awid)(_code 250))
					((s_axi_awaddr)(_code 251))
					((s_axi_awlen)(_code 252))
					((s_axi_awsize)(_code 253))
					((s_axi_awburst)(_code 254))
					((s_axi_awlock)(_code 255))
					((s_axi_awcache)(_code 256))
					((s_axi_awprot)(_code 257))
					((s_axi_awqos)(_code 258))
					((s_axi_awregion)(_code 259))
					((s_axi_awuser)(_code 260))
					((s_axi_awvalid)(_code 261))
					((s_axi_awready)(S_AXI_AWREADY))
					((s_axi_wid)(_code 262))
					((s_axi_wdata)(_code 263))
					((s_axi_wstrb)(_code 264))
					((s_axi_wuser)(_code 265))
					((s_axi_wlast)(_code 266))
					((s_axi_wvalid)(_code 267))
					((s_axi_bready)(_code 268))
					((s_axi_wready)(S_AXI_WREADY))
					((s_axi_bvalid)(S_AXI_BVALID))
					((s_axi_bid)(S_AXI_BID))
					((s_axi_bresp)(S_AXI_BRESP))
					((s_axi_buser)(S_AXI_BUSER))
					((m_axi_awid)(M_AXI_AWID))
					((m_axi_awaddr)(M_AXI_AWADDR))
					((m_axi_awlen)(M_AXI_AWLEN))
					((m_axi_awsize)(M_AXI_AWSIZE))
					((m_axi_awburst)(M_AXI_AWBURST))
					((m_axi_awlock)(M_AXI_AWLOCK))
					((m_axi_awcache)(M_AXI_AWCACHE))
					((m_axi_awprot)(M_AXI_AWPROT))
					((m_axi_awqos)(M_AXI_AWQOS))
					((m_axi_awregion)(M_AXI_AWREGION))
					((m_axi_awuser)(M_AXI_AWUSER))
					((m_axi_awvalid)(M_AXI_AWVALID))
					((m_axi_awready)(_code 269))
					((m_axi_wid)(M_AXI_WID))
					((m_axi_wdata)(M_AXI_WDATA))
					((m_axi_wstrb)(M_AXI_WSTRB))
					((m_axi_wlast)(M_AXI_WLAST))
					((m_axi_wuser)(M_AXI_WUSER))
					((m_axi_wvalid)(M_AXI_WVALID))
					((m_axi_wready)(_code 270))
					((m_axi_bid)(_code 271))
					((m_axi_bresp)(_code 272))
					((m_axi_buser)(_code 273))
					((m_axi_bvalid)(_code 274))
					((m_axi_bready)(M_AXI_BREADY))
					((s_axi_arid)(_code 275))
					((s_axi_araddr)(_code 276))
					((s_axi_arlen)(_code 277))
					((s_axi_arsize)(_code 278))
					((s_axi_arburst)(_code 279))
					((s_axi_arlock)(_code 280))
					((s_axi_arcache)(_code 281))
					((s_axi_arprot)(_code 282))
					((s_axi_arqos)(_code 283))
					((s_axi_arregion)(_code 284))
					((s_axi_aruser)(_code 285))
					((s_axi_arvalid)(_code 286))
					((s_axi_arready)(S_AXI_ARREADY))
					((s_axi_rid)(S_AXI_RID))
					((s_axi_rdata)(S_AXI_RDATA))
					((s_axi_rresp)(S_AXI_RRESP))
					((s_axi_rlast)(S_AXI_RLAST))
					((s_axi_ruser)(S_AXI_RUSER))
					((s_axi_rvalid)(S_AXI_RVALID))
					((s_axi_rready)(_code 287))
					((m_axi_arid)(M_AXI_ARID))
					((m_axi_araddr)(M_AXI_ARADDR))
					((m_axi_arlen)(M_AXI_ARLEN))
					((m_axi_arsize)(M_AXI_ARSIZE))
					((m_axi_arburst)(M_AXI_ARBURST))
					((m_axi_arlock)(M_AXI_ARLOCK))
					((m_axi_arcache)(M_AXI_ARCACHE))
					((m_axi_arprot)(M_AXI_ARPROT))
					((m_axi_arqos)(M_AXI_ARQOS))
					((m_axi_arregion)(M_AXI_ARREGION))
					((m_axi_aruser)(M_AXI_ARUSER))
					((m_axi_arvalid)(M_AXI_ARVALID))
					((m_axi_arready)(_code 288))
					((m_axi_rid)(_code 289))
					((m_axi_rdata)(_code 290))
					((m_axi_rresp)(_code 291))
					((m_axi_rlast)(_code 292))
					((m_axi_ruser)(_code 293))
					((m_axi_rvalid)(_code 294))
					((m_axi_rready)(M_AXI_RREADY))
					((s_axis_tvalid)(_code 295))
					((s_axis_tready)(S_AXIS_TREADY))
					((s_axis_tdata)(_code 296))
					((s_axis_tstrb)(_code 297))
					((s_axis_tkeep)(_code 298))
					((s_axis_tlast)(_code 299))
					((s_axis_tid)(_code 300))
					((s_axis_tdest)(_code 301))
					((s_axis_tuser)(_code 302))
					((m_axis_tvalid)(M_AXIS_TVALID))
					((m_axis_tready)(_code 303))
					((m_axis_tdata)(M_AXIS_TDATA))
					((m_axis_tstrb)(M_AXIS_TSTRB))
					((m_axis_tkeep)(M_AXIS_TKEEP))
					((m_axis_tlast)(M_AXIS_TLAST))
					((m_axis_tid)(M_AXIS_TID))
					((m_axis_tdest)(M_AXIS_TDEST))
					((m_axis_tuser)(M_AXIS_TUSER))
					((axi_aw_injectsbiterr)(_code 304))
					((axi_aw_injectdbiterr)(_code 305))
					((axi_aw_prog_full_thresh)(_code 306))
					((axi_aw_prog_empty_thresh)(_code 307))
					((axi_aw_data_count)(AXI_AW_DATA_COUNT))
					((axi_aw_wr_data_count)(AXI_AW_WR_DATA_COUNT))
					((axi_aw_rd_data_count)(AXI_AW_RD_DATA_COUNT))
					((axi_aw_sbiterr)(AXI_AW_SBITERR))
					((axi_aw_dbiterr)(AXI_AW_DBITERR))
					((axi_aw_overflow)(AXI_AW_OVERFLOW))
					((axi_aw_underflow)(AXI_AW_UNDERFLOW))
					((axi_aw_prog_full)(AXI_AW_PROG_FULL))
					((axi_aw_prog_empty)(AXI_AW_PROG_EMPTY))
					((axi_w_injectsbiterr)(_code 308))
					((axi_w_injectdbiterr)(_code 309))
					((axi_w_prog_full_thresh)(_code 310))
					((axi_w_prog_empty_thresh)(_code 311))
					((axi_w_data_count)(AXI_W_DATA_COUNT))
					((axi_w_wr_data_count)(AXI_W_WR_DATA_COUNT))
					((axi_w_rd_data_count)(AXI_W_RD_DATA_COUNT))
					((axi_w_sbiterr)(AXI_W_SBITERR))
					((axi_w_dbiterr)(AXI_W_DBITERR))
					((axi_w_overflow)(AXI_W_OVERFLOW))
					((axi_w_underflow)(AXI_W_UNDERFLOW))
					((axi_w_prog_full)(AXI_W_PROG_FULL))
					((axi_w_prog_empty)(AXI_W_PROG_EMPTY))
					((axi_b_injectsbiterr)(_code 312))
					((axi_b_injectdbiterr)(_code 313))
					((axi_b_prog_full_thresh)(_code 314))
					((axi_b_prog_empty_thresh)(_code 315))
					((axi_b_data_count)(AXI_B_DATA_COUNT))
					((axi_b_wr_data_count)(AXI_B_WR_DATA_COUNT))
					((axi_b_rd_data_count)(AXI_B_RD_DATA_COUNT))
					((axi_b_sbiterr)(AXI_B_SBITERR))
					((axi_b_dbiterr)(AXI_B_DBITERR))
					((axi_b_overflow)(AXI_B_OVERFLOW))
					((axi_b_underflow)(AXI_B_UNDERFLOW))
					((axi_b_prog_full)(AXI_B_PROG_FULL))
					((axi_b_prog_empty)(AXI_B_PROG_EMPTY))
					((axi_ar_injectsbiterr)(_code 316))
					((axi_ar_injectdbiterr)(_code 317))
					((axi_ar_prog_full_thresh)(_code 318))
					((axi_ar_prog_empty_thresh)(_code 319))
					((axi_ar_data_count)(AXI_AR_DATA_COUNT))
					((axi_ar_wr_data_count)(AXI_AR_WR_DATA_COUNT))
					((axi_ar_rd_data_count)(AXI_AR_RD_DATA_COUNT))
					((axi_ar_sbiterr)(AXI_AR_SBITERR))
					((axi_ar_dbiterr)(AXI_AR_DBITERR))
					((axi_ar_overflow)(AXI_AR_OVERFLOW))
					((axi_ar_underflow)(AXI_AR_UNDERFLOW))
					((axi_ar_prog_full)(AXI_AR_PROG_FULL))
					((axi_ar_prog_empty)(AXI_AR_PROG_EMPTY))
					((axi_r_injectsbiterr)(_code 320))
					((axi_r_injectdbiterr)(_code 321))
					((axi_r_prog_full_thresh)(_code 322))
					((axi_r_prog_empty_thresh)(_code 323))
					((axi_r_data_count)(AXI_R_DATA_COUNT))
					((axi_r_wr_data_count)(AXI_R_WR_DATA_COUNT))
					((axi_r_rd_data_count)(AXI_R_RD_DATA_COUNT))
					((axi_r_sbiterr)(AXI_R_SBITERR))
					((axi_r_dbiterr)(AXI_R_DBITERR))
					((axi_r_overflow)(AXI_R_OVERFLOW))
					((axi_r_underflow)(AXI_R_UNDERFLOW))
					((axi_r_prog_full)(AXI_R_PROG_FULL))
					((axi_r_prog_empty)(AXI_R_PROG_EMPTY))
					((axis_injectsbiterr)(_code 324))
					((axis_injectdbiterr)(_code 325))
					((axis_prog_full_thresh)(_code 326))
					((axis_prog_empty_thresh)(_code 327))
					((axis_data_count)(AXIS_DATA_COUNT))
					((axis_wr_data_count)(AXIS_WR_DATA_COUNT))
					((axis_rd_data_count)(AXIS_RD_DATA_COUNT))
					((axis_sbiterr)(AXIS_SBITERR))
					((axis_dbiterr)(AXIS_DBITERR))
					((axis_overflow)(AXIS_OVERFLOW))
					((axis_underflow)(AXIS_UNDERFLOW))
					((axis_prog_full)(AXIS_PROG_FULL))
					((axis_prog_empty)(AXIS_PROG_EMPTY))
				)
			)
			(_object
				(_prcs
					(line__2806(_arch 7 0 2806(_assignment(_trgt(19))(_sens(18)(20)))))
					(line__2808(_arch 8 0 2808(_assignment(_trgt(13))(_sens(19(_range 328)))(_read(19(_range 329))))))
				)
			)
		)
	)
	(_object
		(_type(_int ~STRING~12 0 2205(_array -1((_uto i 1 i 2147483647)))))
		(_gen(_int C_FAMILY 0 0 2205(_ent(_string \"virtex5"\))))
		(_gen(_int C_DCOUNT_WIDTH -2 0 2206 \4\ (_ent gms((i 4)))))
		(_gen(_int C_ENABLE_RLOCS -2 0 2207 \0\ (_ent((i 0)))))
		(_gen(_int C_HAS_DCOUNT -2 0 2208 \1\ (_ent((i 1)))))
		(_gen(_int C_HAS_RD_ACK -2 0 2209 \0\ (_ent((i 0)))))
		(_gen(_int C_HAS_RD_ERR -2 0 2210 \0\ (_ent((i 0)))))
		(_gen(_int C_HAS_WR_ACK -2 0 2211 \0\ (_ent((i 0)))))
		(_gen(_int C_HAS_WR_ERR -2 0 2212 \0\ (_ent((i 0)))))
		(_gen(_int C_HAS_ALMOST_FULL -2 0 2213 \0\ (_ent((i 0)))))
		(_gen(_int C_MEMORY_TYPE -2 0 2214 \0\ (_ent gms((i 0)))))
		(_gen(_int C_PORTS_DIFFER -2 0 2215 \0\ (_ent((i 0)))))
		(_gen(_int C_RD_ACK_LOW -2 0 2216 \0\ (_ent((i 0)))))
		(_gen(_int C_USE_EMBEDDED_REG -2 0 2217 \0\ (_ent((i 0)))))
		(_gen(_int C_READ_DATA_WIDTH -2 0 2218 \16\ (_ent gms((i 16)))))
		(_gen(_int C_READ_DEPTH -2 0 2219 \16\ (_ent gms((i 16)))))
		(_gen(_int C_RD_ERR_LOW -2 0 2220 \0\ (_ent((i 0)))))
		(_gen(_int C_WR_ACK_LOW -2 0 2221 \0\ (_ent((i 0)))))
		(_gen(_int C_WR_ERR_LOW -2 0 2222 \0\ (_ent((i 0)))))
		(_gen(_int C_PRELOAD_REGS -2 0 2223 \0\ (_ent gms((i 0)))))
		(_gen(_int C_PRELOAD_LATENCY -2 0 2224 \1\ (_ent gms((i 1)))))
		(_gen(_int C_WRITE_DATA_WIDTH -2 0 2225 \16\ (_ent gms((i 16)))))
		(_gen(_int C_WRITE_DEPTH -2 0 2226 \16\ (_ent gms((i 16)))))
		(_gen(_int C_SYNCHRONIZER_STAGE -2 0 2227 \2\ (_ent((i 2)))))
		(_type(_int ~INTEGER~range~0~to~1~12 0 2228(_scalar (_to i 0 i 1))))
		(_gen(_int C_XPM_FIFO 1 0 2228 \1\ (_ent gms((i 1)))))
		(_port(_int Clk -3 0 2231(_ent(_in))))
		(_port(_int Sinit -3 0 2232(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_WRITE_DATA_WIDTH-1~downto~0}~12 0 2233(_array -3((_dto c 330 i 0)))))
		(_port(_int Din 2 0 2233(_ent(_in))))
		(_port(_int Wr_en -3 0 2234(_ent(_in))))
		(_port(_int Rd_en -3 0 2235(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_READ_DATA_WIDTH-1~downto~0}~12 0 2236(_array -3((_dto c 331 i 0)))))
		(_port(_int Dout 3 0 2236(_ent(_out))))
		(_port(_int Almost_full -3 0 2237(_ent(_out))))
		(_port(_int Full -3 0 2238(_ent(_out))))
		(_port(_int Empty -3 0 2239(_ent(_out))))
		(_port(_int Rd_ack -3 0 2240(_ent(_out))))
		(_port(_int Wr_ack -3 0 2241(_ent(_out))))
		(_port(_int Rd_err -3 0 2242(_ent(_out))))
		(_port(_int Wr_err -3 0 2243(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_DCOUNT_WIDTH-1~downto~0}~12 0 2244(_array -3((_dto c 332 i 0)))))
		(_port(_int Data_count 4 0 2244(_ent(_out))))
		(_type(_int ~STRING{1~to~4}~13 0 2353(_array -1((_to i 1 i 4)))))
		(_type(_int ~STRING{1~to~5}~13 0 2354(_array -1((_to i 1 i 5)))))
		(_type(_int ~STRING{1~to~11}~13 0 2355(_array -1((_to i 1 i 11)))))
		(_type(_int ~STRING{1~to~5}~132 0 2356(_array -1((_to i 1 i 5)))))
		(_type(_int ~STRING{1~to~3}~13 0 2375(_array -1((_to i 1 i 3)))))
		(_type(_int ~STRING{1~to~4}~134 0 2376(_array -1((_to i 1 i 4)))))
		(_type(_int ~STRING~13 0 2406(_array -1((_uto i 1 i 2147483647)))))
		(_cnst(_int FAMILY_TO_USE 11 0 2406(_arch gms(_code 333))))
		(_sig(_int Wr_err_i -3 0 2407(_arch(_uni))))
		(_sig(_int Rd_err_i -3 0 2408(_arch(_uni))))
		(_cnst(_int xpm_fifo_or_lib_fifo_sel -2 0 2409(_arch((i 1)))))
		(_type(_int ~STRING~135 0 2410(_array -1((_uto i 1 i 2147483647)))))
		(_cnst(_int READ_MODE 12 0 2410(_arch gms(_code 334))))
		(_type(_int ~STRING~136 0 2411(_array -1((_uto i 1 i 2147483647)))))
		(_cnst(_int FIFO_MEMORY_TYPE 13 0 2411(_arch gms(_code 335))))
		(_cnst(_int RD_LATENCY -2 0 2412(_arch gms(_code 336))))
		(_cnst(_int FAMILY_IS_SUPPORTED -6 0 2420(_arch((i 1)))))
		(_cnst(_int MAX_DEPTH -2 0 2435(_arch gms(_code 337))))
		(_cnst(_int FGEN_CNT_WIDTH -2 0 2436(_arch gms(_code 338))))
		(_cnst(_int ADJ_FGEN_CNT_WIDTH -2 0 2437(_arch gms(_code 339))))
		(_cnst(_int FG_MEM_TYPE -2 0 2440(_arch gms(_code 340))))
		(_cnst(_int FG_IMP_TYPE -2 0 2453(_arch((i 0)))))
		(_cnst(_int PROG_FULL_THRESH_ASSERT_VAL -2 0 2458(_arch gms(_code 341))))
		(_cnst(_int PROG_FULL_THRESH_NEGATE_VAL -2 0 2459(_arch gms(_code 342))))
		(_type(_int ~STD_LOGIC_VECTOR{ADJ_FGEN_CNT_WIDTH-1~downto~0}~13 0 2464(_array -3((_dto c 343 i 0)))))
		(_sig(_int PROG_RDTHRESH_ZEROS 14 0 2464(_arch(_uni((_others(i 2)))))))
		(_sig(_int PROG_WRTHRESH_ZEROS 14 0 2466(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_full -3 0 2472(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{FGEN_CNT_WIDTH-1~downto~0}~13 0 2473(_array -3((_dto c 344 i 0)))))
		(_sig(_int sig_full_fg_datacnt 15 0 2473(_arch(_uni))))
		(_sig(_int sig_prim_fg_datacnt 14 0 2474(_arch(_uni))))
		(_sig(_int ALMOST_EMPTY -3 0 2477(_arch(_uni))))
		(_sig(_int RD_DATA_COUNT 14 0 2478(_arch(_uni))))
		(_sig(_int WR_DATA_COUNT 14 0 2479(_arch(_uni))))
		(_sig(_int PROG_FULL -3 0 2480(_arch(_uni))))
		(_sig(_int PROG_EMPTY -3 0 2481(_arch(_uni))))
		(_sig(_int SBITERR -3 0 2482(_arch(_uni))))
		(_sig(_int DBITERR -3 0 2483(_arch(_uni))))
		(_sig(_int WR_RST_BUSY -3 0 2484(_arch(_uni))))
		(_sig(_int RD_RST_BUSY -3 0 2485(_arch(_uni))))
		(_sig(_int S_AXI_AWREADY -3 0 2486(_arch(_uni))))
		(_sig(_int S_AXI_WREADY -3 0 2487(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{3~downto~0}~13 0 2488(_array -3((_dto i 3 i 0)))))
		(_sig(_int S_AXI_BID 16 0 2488(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{2-1~downto~0}~13 0 2489(_array -3((_dto i 1 i 0)))))
		(_sig(_int S_AXI_BRESP 17 0 2489(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{0~downto~0}~13 0 2490(_array -3((_dto i 0 i 0)))))
		(_sig(_int S_AXI_BUSER 18 0 2490(_arch(_uni))))
		(_sig(_int S_AXI_BVALID -3 0 2491(_arch(_uni))))
		(_sig(_int M_AXI_AWID 16 0 2494(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{31~downto~0}~13 0 2495(_array -3((_dto i 31 i 0)))))
		(_sig(_int M_AXI_AWADDR 19 0 2495(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{8-1~downto~0}~13 0 2496(_array -3((_dto i 7 i 0)))))
		(_sig(_int M_AXI_AWLEN 20 0 2496(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{3-1~downto~0}~13 0 2497(_array -3((_dto i 2 i 0)))))
		(_sig(_int M_AXI_AWSIZE 21 0 2497(_arch(_uni))))
		(_sig(_int M_AXI_AWBURST 17 0 2498(_arch(_uni))))
		(_sig(_int M_AXI_AWLOCK 17 0 2499(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{4-1~downto~0}~13 0 2500(_array -3((_dto i 3 i 0)))))
		(_sig(_int M_AXI_AWCACHE 22 0 2500(_arch(_uni))))
		(_sig(_int M_AXI_AWPROT 21 0 2501(_arch(_uni))))
		(_sig(_int M_AXI_AWQOS 22 0 2502(_arch(_uni))))
		(_sig(_int M_AXI_AWREGION 22 0 2503(_arch(_uni))))
		(_sig(_int M_AXI_AWUSER 18 0 2504(_arch(_uni))))
		(_sig(_int M_AXI_AWVALID -3 0 2505(_arch(_uni))))
		(_sig(_int M_AXI_WID 16 0 2506(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{63~downto~0}~13 0 2507(_array -3((_dto i 63 i 0)))))
		(_sig(_int M_AXI_WDATA 23 0 2507(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{7~downto~0}~13 0 2508(_array -3((_dto i 7 i 0)))))
		(_sig(_int M_AXI_WSTRB 24 0 2508(_arch(_uni))))
		(_sig(_int M_AXI_WLAST -3 0 2509(_arch(_uni))))
		(_sig(_int M_AXI_WUSER 18 0 2510(_arch(_uni))))
		(_sig(_int M_AXI_WVALID -3 0 2511(_arch(_uni))))
		(_sig(_int M_AXI_BREADY -3 0 2512(_arch(_uni))))
		(_sig(_int S_AXI_ARREADY -3 0 2515(_arch(_uni))))
		(_sig(_int S_AXI_RID 16 0 2516(_arch(_uni))))
		(_sig(_int S_AXI_RDATA 23 0 2517(_arch(_uni))))
		(_sig(_int S_AXI_RRESP 17 0 2518(_arch(_uni))))
		(_sig(_int S_AXI_RLAST -3 0 2519(_arch(_uni))))
		(_sig(_int S_AXI_RUSER 18 0 2520(_arch(_uni))))
		(_sig(_int S_AXI_RVALID -3 0 2521(_arch(_uni))))
		(_sig(_int M_AXI_ARID 16 0 2524(_arch(_uni))))
		(_sig(_int M_AXI_ARADDR 19 0 2525(_arch(_uni))))
		(_sig(_int M_AXI_ARLEN 20 0 2526(_arch(_uni))))
		(_sig(_int M_AXI_ARSIZE 21 0 2527(_arch(_uni))))
		(_sig(_int M_AXI_ARBURST 17 0 2528(_arch(_uni))))
		(_sig(_int M_AXI_ARLOCK 17 0 2529(_arch(_uni))))
		(_sig(_int M_AXI_ARCACHE 22 0 2530(_arch(_uni))))
		(_sig(_int M_AXI_ARPROT 21 0 2531(_arch(_uni))))
		(_sig(_int M_AXI_ARQOS 22 0 2532(_arch(_uni))))
		(_sig(_int M_AXI_ARREGION 22 0 2533(_arch(_uni))))
		(_sig(_int M_AXI_ARUSER 18 0 2534(_arch(_uni))))
		(_sig(_int M_AXI_ARVALID -3 0 2535(_arch(_uni))))
		(_sig(_int M_AXI_RREADY -3 0 2536(_arch(_uni))))
		(_sig(_int S_AXIS_TREADY -3 0 2539(_arch(_uni))))
		(_sig(_int M_AXIS_TVALID -3 0 2542(_arch(_uni))))
		(_sig(_int M_AXIS_TDATA 23 0 2543(_arch(_uni))))
		(_sig(_int M_AXIS_TSTRB 16 0 2544(_arch(_uni))))
		(_sig(_int M_AXIS_TKEEP 16 0 2545(_arch(_uni))))
		(_sig(_int M_AXIS_TLAST -3 0 2546(_arch(_uni))))
		(_sig(_int M_AXIS_TID 24 0 2547(_arch(_uni))))
		(_sig(_int M_AXIS_TDEST 16 0 2548(_arch(_uni))))
		(_sig(_int M_AXIS_TUSER 16 0 2549(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{4~downto~0}~13 0 2552(_array -3((_dto i 4 i 0)))))
		(_sig(_int AXI_AW_DATA_COUNT 25 0 2552(_arch(_uni))))
		(_sig(_int AXI_AW_WR_DATA_COUNT 25 0 2553(_arch(_uni))))
		(_sig(_int AXI_AW_RD_DATA_COUNT 25 0 2554(_arch(_uni))))
		(_sig(_int AXI_AW_SBITERR -3 0 2555(_arch(_uni))))
		(_sig(_int AXI_AW_DBITERR -3 0 2556(_arch(_uni))))
		(_sig(_int AXI_AW_OVERFLOW -3 0 2557(_arch(_uni))))
		(_sig(_int AXI_AW_UNDERFLOW -3 0 2558(_arch(_uni))))
		(_sig(_int AXI_AW_PROG_FULL -3 0 2559(_arch(_uni))))
		(_sig(_int AXI_AW_PROG_EMPTY -3 0 2560(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{10~downto~0}~13 0 2564(_array -3((_dto i 10 i 0)))))
		(_sig(_int AXI_W_DATA_COUNT 26 0 2564(_arch(_uni))))
		(_sig(_int AXI_W_WR_DATA_COUNT 26 0 2565(_arch(_uni))))
		(_sig(_int AXI_W_RD_DATA_COUNT 26 0 2566(_arch(_uni))))
		(_sig(_int AXI_W_SBITERR -3 0 2567(_arch(_uni))))
		(_sig(_int AXI_W_DBITERR -3 0 2568(_arch(_uni))))
		(_sig(_int AXI_W_OVERFLOW -3 0 2569(_arch(_uni))))
		(_sig(_int AXI_W_UNDERFLOW -3 0 2570(_arch(_uni))))
		(_sig(_int AXI_W_PROG_FULL -3 0 2571(_arch(_uni))))
		(_sig(_int AXI_W_PROG_EMPTY -3 0 2572(_arch(_uni))))
		(_sig(_int AXI_B_DATA_COUNT 25 0 2575(_arch(_uni))))
		(_sig(_int AXI_B_WR_DATA_COUNT 25 0 2576(_arch(_uni))))
		(_sig(_int AXI_B_RD_DATA_COUNT 25 0 2577(_arch(_uni))))
		(_sig(_int AXI_B_SBITERR -3 0 2578(_arch(_uni))))
		(_sig(_int AXI_B_DBITERR -3 0 2579(_arch(_uni))))
		(_sig(_int AXI_B_OVERFLOW -3 0 2580(_arch(_uni))))
		(_sig(_int AXI_B_UNDERFLOW -3 0 2581(_arch(_uni))))
		(_sig(_int AXI_B_PROG_FULL -3 0 2582(_arch(_uni))))
		(_sig(_int AXI_B_PROG_EMPTY -3 0 2583(_arch(_uni))))
		(_sig(_int AXI_AR_DATA_COUNT 25 0 2586(_arch(_uni))))
		(_sig(_int AXI_AR_WR_DATA_COUNT 25 0 2587(_arch(_uni))))
		(_sig(_int AXI_AR_RD_DATA_COUNT 25 0 2588(_arch(_uni))))
		(_sig(_int AXI_AR_SBITERR -3 0 2589(_arch(_uni))))
		(_sig(_int AXI_AR_DBITERR -3 0 2590(_arch(_uni))))
		(_sig(_int AXI_AR_OVERFLOW -3 0 2591(_arch(_uni))))
		(_sig(_int AXI_AR_UNDERFLOW -3 0 2592(_arch(_uni))))
		(_sig(_int AXI_AR_PROG_FULL -3 0 2593(_arch(_uni))))
		(_sig(_int AXI_AR_PROG_EMPTY -3 0 2594(_arch(_uni))))
		(_sig(_int AXI_R_DATA_COUNT 26 0 2597(_arch(_uni))))
		(_sig(_int AXI_R_WR_DATA_COUNT 26 0 2598(_arch(_uni))))
		(_sig(_int AXI_R_RD_DATA_COUNT 26 0 2599(_arch(_uni))))
		(_sig(_int AXI_R_SBITERR -3 0 2600(_arch(_uni))))
		(_sig(_int AXI_R_DBITERR -3 0 2601(_arch(_uni))))
		(_sig(_int AXI_R_OVERFLOW -3 0 2602(_arch(_uni))))
		(_sig(_int AXI_R_UNDERFLOW -3 0 2603(_arch(_uni))))
		(_sig(_int AXI_R_PROG_FULL -3 0 2604(_arch(_uni))))
		(_sig(_int AXI_R_PROG_EMPTY -3 0 2605(_arch(_uni))))
		(_sig(_int AXIS_DATA_COUNT 26 0 2608(_arch(_uni))))
		(_sig(_int AXIS_WR_DATA_COUNT 26 0 2609(_arch(_uni))))
		(_sig(_int AXIS_RD_DATA_COUNT 26 0 2610(_arch(_uni))))
		(_sig(_int AXIS_SBITERR -3 0 2611(_arch(_uni))))
		(_sig(_int AXIS_DBITERR -3 0 2612(_arch(_uni))))
		(_sig(_int AXIS_OVERFLOW -3 0 2613(_arch(_uni))))
		(_sig(_int AXIS_UNDERFLOW -3 0 2614(_arch(_uni))))
		(_sig(_int AXIS_PROG_FULL -3 0 2615(_arch(_uni))))
		(_sig(_int AXIS_PROG_EMPTY -3 0 2616(_arch(_uni))))
		(_sig(_int empty_i -3 0 2618(_arch(_uni))))
		(_subprogram
			(_int log2 9 0 2254(_arch(_func -2)))
			(_int GetMaxDepth 10 0 2292(_arch(_func)))
			(_int GetMemType 11 0 2329(_arch(_func -2)))
			(_int GetMemType 12 0 2351(_arch(_func -5(_uto))))
			(_int Get_READ_MODE 13 0 2373(_arch(_func)))
			(_int Getlatency 14 0 2390(_arch(_func)))
		)
		(_type(_ext ~extstd.standard.CHARACTER(0 CHARACTER)))
		(_type(_ext ~extstd.standard.INTEGER(0 INTEGER)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ~extstd.standard.NATURAL(0 NATURAL)))
		(_type(_ext ~extstd.standard.STRING(0 STRING)))
		(_type(_ext ~extstd.standard.BOOLEAN(0 BOOLEAN)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD))(xpm(VCOMPONENTS)))
	(_static
		(1668183366 1852795252 1735355424 1701978162 1986618723 1629512805 1836410738 544501349 1735549292 1948283493 544104808 544437353 1634754915 1768712546 1864399220 1580343398 539897907)
		(1869903201)
		(1668246626 107)
		(1953720676 1969383794 6579572)
		(1920232565 97)
		(6583411)
		(1952872294)
		(1953655158 3635301)
		(1953393003 3635301)
		(1769239137 14200)
		(1903065466)
		(1918988403 929980788)
		(1851878466 1920226155 6778473)
		(48)
		(2016555317 13875)
		(0)
		(0 0 0 0 0 0 0 0)
		(0 0)
		(0)
		(0)
		(0)
		(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
		(0 0 0)
	)
	(_model . implementation 345 -1)
)
