V 000044 55 2375          1580964470683 imp
(_unit VHDL(counter_f 0 123(imp 0 145))
	(_version vde)
	(_time 1580964470684 2020.02.05 22:47:50)
	(_source(\C:/Xilinx/Vivado/2019.2/data/ip/xilinx/axi_ahblite_bridge_v3_0/hdl/axi_ahblite_bridge_v3_0_vh_rfs.vhd\))
	(_parameters tan)
	(_code e2e6e6b1b6b4b3f4b3b1f6b8b6e5e0e7b4e4e4e4e1)
	(_ent
		(_time 1580964470681)
	)
	(_generate INFERRED_GEN 0 152(_if t)
		(_object
			(_type(_int ~NATURAL~range~C_NUM_BITS~downto~0~13 0 154(_scalar (_dto c 5 i 0))))
			(_type(_int ~UNSIGNED{C_NUM_BITS~downto~0}~13 0 154(_array -3((_dto c 6 i 0)))))
			(_sig(_int icount_out 4 0 154(_arch(_uni))))
			(_sig(_int icount_out_x 4 0 155(_arch(_uni))))
			(_sig(_int load_in_x 4 0 156(_arch(_uni))))
			(_prcs
				(line__160(_arch 0 0 160(_assignment(_trgt(10))(_sens(2)))))
				(line__164(_arch 1 0 164(_assignment(_trgt(9))(_sens(8(_range 7)))(_read(8(_range 8))))))
				(CNTR_PROC(_arch 2 0 170(_prcs(_simple)(_trgt(8))(_sens(0))(_read(1)(3)(4)(5)(9)(10)))))
				(line__185(_arch 3 0 185(_assignment(_trgt(7))(_sens(8(_object 0)))(_read(8(_object 0))))))
				(line__186(_arch 4 0 186(_assignment(_trgt(6))(_sens(8(_range 9)))(_read(8(_range 10))))))
			)
		)
		(_part (8(_object 0))
		)
	)
	(_object
		(_gen(_int C_NUM_BITS -1 0 125 \9\ (_ent gms((i 9)))))
		(_type(_int ~STRING~12 0 126(_array -2((_uto i 1 i 2147483647)))))
		(_gen(_int C_FAMILY 0 0 126(_ent(_string \"nofamily"\))))
		(_port(_int Clk -3 0 130(_ent(_in)(_event))))
		(_port(_int Rst -3 0 131(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_NUM_BITS-1~downto~0}~12 0 132(_array -3((_dto c 11 i 0)))))
		(_port(_int Load_In 1 0 132(_ent(_in))))
		(_port(_int Count_Enable -3 0 133(_ent(_in))))
		(_port(_int Count_Load -3 0 134(_ent(_in))))
		(_port(_int Count_Down -3 0 135(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_NUM_BITS-1~downto~0}~122 0 136(_array -3((_dto c 12 i 0)))))
		(_port(_int Count_Out 2 0 136(_ent(_out))))
		(_port(_int Carry_Out -3 0 137(_ent(_out))))
		(_type(_ext ~extstd.standard.INTEGER(0 INTEGER)))
		(_type(_ext ~extstd.standard.CHARACTER(0 CHARACTER)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ~extieee.NUMERIC_STD.UNSIGNED(2 UNSIGNED)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD)))
	(_model . imp 13 -1)
)
V 000044 55 2789          1580964470695 RTL
(_unit VHDL(time_out 0 295(rtl 0 314))
	(_version vde)
	(_time 1580964470696 2020.02.05 22:47:50)
	(_source(\C:/Xilinx/Vivado/2019.2/data/ip/xilinx/axi_ahblite_bridge_v3_0/hdl/axi_ahblite_bridge_v3_0_vh_rfs.vhd\))
	(_parameters tan)
	(_code f2f7f1a2f9a5f2e4f0a3b4a8f5f5f7f5f6f5f6f4fb)
	(_ent
		(_time 1580964470693)
	)
	(_generate GEN_WDT 0 351(_if 5)
		(_inst I_TO_COUNTER_MODULE 0 369(_ent . counter_f)
			(_gen
				((C_NUM_BITS)(_code 6))
				((C_FAMILY)(_code 7))
			)
			(_port
				((Clk)(S_AXI_ACLK))
				((Rst)(cntr_rst))
				((Load_In)(_code 8))
				((Count_Enable)(cntr_enable))
				((Count_Load)(load_cntr))
				((Count_Down)(_code 9))
				((Count_Out)(_open))
				((Carry_Out)(timeout_i))
			)
		)
		(_object
			(_cnst(_int TIMEOUT_VALUE_TO_USE -2 0 353(_arch gms(_code 10))))
			(_cnst(_int COUNTER_WIDTH -2 0 354(_arch gms(_code 11))))
			(_type(_int ~NATURAL~range~COUNTER_WIDTH-1~downto~0~13 0 355(_scalar (_dto c 12 i 0))))
			(_type(_int ~STD_LOGIC_VECTOR{COUNTER_WIDTH-1~downto~0}~13 0 355(_array -3((_dto c 13 i 0)))))
			(_cnst(_int DPTO_LD_VALUE 2 0 355(_arch gms(_code 14))))
			(_sig(_int timeout_i -3 0 358(_arch(_uni))))
			(_sig(_int cntr_rst -3 0 359(_arch(_uni))))
			(_prcs
				(line__363(_arch 0 0 363(_assignment(_trgt(7))(_sens(6)(1)))))
				(TIMEOUT_REG(_arch 1 0 391(_prcs(_trgt(5))(_sens(0)(6)(1)(2))(_dssslsensitivity 1))))
			)
		)
	)
	(_generate GEN_NO_WDT 0 408(_if 15)
		(_object
			(_prcs
				(line__410(_arch 2 0 410(_assignment(_alias((timeout_o)(_string \"0"\)))(_trgt(5)))))
			)
		)
	)
	(_object
		(_type(_int ~STRING~12 0 297(_array -1((_uto i 1 i 2147483647)))))
		(_gen(_int C_FAMILY 0 0 297(_ent(_string \"virtex7"\))))
		(_gen(_int C_DPHASE_TIMEOUT -2 0 298 \0\ (_ent gms((i 0)))))
		(_port(_int S_AXI_ACLK -3 0 302(_ent(_in)(_event))))
		(_port(_int S_AXI_ARESETN -3 0 303(_ent(_in))))
		(_port(_int M_AHB_HREADY -3 0 305(_ent(_in))))
		(_port(_int load_cntr -3 0 307(_ent(_in))))
		(_port(_int cntr_enable -3 0 308(_ent(_in))))
		(_port(_int timeout_o -3 0 309(_ent(_out))))
		(_prcs
			(line__0(_int 3 0 0(_prcs)))
		)
		(_subprogram
			(_int clog2 4 0 320(_arch(_func -5)))
		)
		(_type(_ext ~extstd.standard.CHARACTER(0 CHARACTER)))
		(_type(_ext ~extstd.standard.INTEGER(0 INTEGER)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ~extstd.standard.POSITIVE(0 POSITIVE)))
		(_type(_ext ~extstd.standard.NATURAL(0 NATURAL)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
		(_type(_ext ~extstd.standard.BOOLEAN(0 BOOLEAN)))
		(_type(_ext ~extieee.NUMERIC_STD.UNSIGNED(2 UNSIGNED)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD))(ieee(STD_LOGIC_UNSIGNED)))
	(_model . RTL 16 -1)
)
V 000055 55 9310          1580964470703 implementation
(_unit VHDL(ahb_skid_buf 0 496(implementation 0 535))
	(_version vde)
	(_time 1580964470704 2020.02.05 22:47:50)
	(_source(\C:/Xilinx/Vivado/2019.2/data/ip/xilinx/axi_ahblite_bridge_v3_0/hdl/axi_ahblite_bridge_v3_0_vh_rfs.vhd\))
	(_parameters tan)
	(_code f2f6f4a2f8a5a4e7a4f4a7f4b0a8aaf4f6f7a4f4f0f5f7)
	(_ent
		(_time 1580964470701)
	)
	(_object
		(_type(_int ~INTEGER~range~8~to~1024~12 0 498(_scalar (_to i 8 i 1024))))
		(_gen(_int C_WDATA_WIDTH 0 0 498 \32\ (_ent gms((i 32)))))
		(_type(_int ~INTEGER~range~1~to~32~12 0 500(_scalar (_to i 1 i 32))))
		(_gen(_int C_S_AXI_ID_WIDTH 1 0 500 \4\ (_ent gms((i 4)))))
		(_type(_int ~INTEGER~range~1~to~128~12 0 501(_scalar (_to i 1 i 128))))
		(_gen(_int C_TUSER_WIDTH 2 0 501 \1\ (_ent gms((i 1)))))
		(_port(_int ACLK -1 0 507(_ent(_in)(_event))))
		(_port(_int ARST -1 0 508(_ent(_in))))
		(_port(_int skid_stop -1 0 511(_ent(_in))))
		(_port(_int S_VALID -1 0 513(_ent(_in))))
		(_port(_int S_READY -1 0 514(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_WDATA_WIDTH-1~downto~0}~12 0 515(_array -1((_dto c 34 i 0)))))
		(_port(_int S_Data 3 0 515(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{{C_WDATA_WIDTH/8}-1~downto~0}~12 0 516(_array -1((_dto c 35 i 0)))))
		(_port(_int S_STRB 4 0 516(_ent(_in))))
		(_port(_int S_Last -1 0 517(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_TUSER_WIDTH-1~downto~0}~12 0 518(_array -1((_dto c 36 i 0)))))
		(_port(_int S_User 5 0 518(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~12 0 519(_array -1((_dto c 37 i 0)))))
		(_port(_int S_RID 6 0 519(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{1~downto~0}~12 0 520(_array -1((_dto i 1 i 0)))))
		(_port(_int S_RESP 7 0 520(_ent(_in))))
		(_port(_int M_RESP 7 0 522(_ent(_out))))
		(_port(_int M_VALID -1 0 523(_ent(_out))))
		(_port(_int M_READY -1 0 524(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~122 0 525(_array -1((_dto c 38 i 0)))))
		(_port(_int M_RID 8 0 525(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_WDATA_WIDTH-1~downto~0}~124 0 526(_array -1((_dto c 39 i 0)))))
		(_port(_int M_Data 9 0 526(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{C_WDATA_WIDTH/8}-1~downto~0}~126 0 527(_array -1((_dto c 40 i 0)))))
		(_port(_int M_STRB 10 0 527(_ent(_out))))
		(_port(_int M_Last -1 0 528(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_TUSER_WIDTH-1~downto~0}~128 0 529(_array -1((_dto c 41 i 0)))))
		(_port(_int M_User 11 0 529(_ent(_out))))
		(_sig(_int sig_reset_reg -1 0 542(_arch(_uni((i 2))))))
		(_sig(_int sig_spcl_s_ready_set -1 0 543(_arch(_uni((i 2))))))
		(_type(_int ~STD_LOGIC_VECTOR{C_WDATA_WIDTH-1~downto~0}~13 0 545(_array -1((_dto c 42 i 0)))))
		(_sig(_int sig_data_skid_reg 12 0 545(_arch(_uni((_others(i 2)))))))
		(_type(_int ~STD_LOGIC_VECTOR{{C_WDATA_WIDTH/8}-1~downto~0}~13 0 546(_array -1((_dto c 43 i 0)))))
		(_sig(_int sig_strb_skid_reg 13 0 546(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_last_skid_reg -1 0 547(_arch(_uni((i 2))))))
		(_sig(_int sig_skid_reg_en -1 0 548(_arch(_uni((i 2))))))
		(_sig(_int sig_data_skid_mux_out 12 0 550(_arch(_uni((_others(i 2)))))))
		(_type(_int ~STD_LOGIC_VECTOR{{C_WDATA_WIDTH/8}-1~downto~0}~132 0 551(_array -1((_dto c 44 i 0)))))
		(_sig(_int sig_strb_skid_mux_out 14 0 551(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_last_skid_mux_out -1 0 552(_arch(_uni((i 2))))))
		(_sig(_int sig_skid_mux_sel -1 0 553(_arch(_uni((i 2))))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~13 0 555(_array -1((_dto c 45 i 0)))))
		(_sig(_int sig_rid_skid_reg 15 0 555(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_rid_skid_mux_out 15 0 556(_arch(_uni((_others(i 2)))))))
		(_type(_int ~STD_LOGIC_VECTOR{1~downto~0}~13 0 557(_array -1((_dto i 1 i 0)))))
		(_sig(_int sig_resp_reg_out 16 0 557(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_resp_skid_mux_out 16 0 558(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_resp_skid_reg 16 0 559(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_rid_reg_out 15 0 560(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_data_reg_out 12 0 561(_arch(_uni((_others(i 2)))))))
		(_type(_int ~STD_LOGIC_VECTOR{{C_WDATA_WIDTH/8}-1~downto~0}~134 0 562(_array -1((_dto c 46 i 0)))))
		(_sig(_int sig_strb_reg_out 17 0 562(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_last_reg_out -1 0 563(_arch(_uni((i 2))))))
		(_sig(_int sig_data_reg_out_en -1 0 564(_arch(_uni((i 2))))))
		(_sig(_int sig_m_valid_out -1 0 566(_arch(_uni((i 2))))))
		(_sig(_int sig_m_valid_dup -1 0 567(_arch(_uni((i 2))))))
		(_sig(_int sig_m_valid_comb -1 0 568(_arch(_uni((i 2))))))
		(_sig(_int sig_s_ready_out -1 0 570(_arch(_uni((i 2))))))
		(_sig(_int sig_s_ready_dup -1 0 571(_arch(_uni((i 2))))))
		(_sig(_int sig_s_ready_comb -1 0 572(_arch(_uni((i 2))))))
		(_sig(_int sig_stop_request -1 0 574(_arch(_uni((i 2))))))
		(_sig(_int sig_sready_stop -1 0 576(_arch(_uni((i 2))))))
		(_sig(_int sig_sready_stop_reg -1 0 577(_arch(_uni((i 2))))))
		(_sig(_int sig_s_last_xfered -1 0 578(_arch(_uni((i 2))))))
		(_sig(_int sig_m_last_xfered -1 0 580(_arch(_uni((i 2))))))
		(_sig(_int sig_mvalid_stop_reg -1 0 581(_arch(_uni((i 2))))))
		(_sig(_int sig_mvalid_stop -1 0 582(_arch(_uni((i 2))))))
		(_sig(_int sig_slast_with_stop -1 0 584(_arch(_uni((i 2))))))
		(_type(_int ~STD_LOGIC_VECTOR{{C_WDATA_WIDTH/8}-1~downto~0}~136 0 585(_array -1((_dto c 47 i 0)))))
		(_sig(_int sig_sstrb_stop_mask 18 0 585(_arch(_uni((_others(i 2)))))))
		(_type(_int ~STD_LOGIC_VECTOR{{C_WDATA_WIDTH/8}-1~downto~0}~138 0 586(_array -1((_dto c 48 i 0)))))
		(_sig(_int sig_sstrb_with_stop 19 0 586(_arch(_uni((_others(i 2)))))))
		(_type(_int ~STD_LOGIC_VECTOR{C_TUSER_WIDTH-1~downto~0}~13 0 589(_array -1((_dto c 49 i 0)))))
		(_sig(_int sig_user_skid_mux_out 20 0 589(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_user_skid_reg 20 0 590(_arch(_uni((_others(i 2)))))))
		(_sig(_int sig_user_reg_out 20 0 591(_arch(_uni((_others(i 2)))))))
		(_prcs
			(line__613(_arch 0 0 613(_assignment(_alias((M_VALID)(sig_m_valid_out)))(_simpleassign BUF)(_trgt(12))(_sens(39)))))
			(line__614(_arch 1 0 614(_assignment(_alias((S_READY)(sig_s_ready_out)))(_simpleassign BUF)(_trgt(4))(_sens(42)))))
			(line__616(_arch 2 0 616(_assignment(_trgt(16))(_sens(36)))))
			(line__617(_arch 3 0 617(_assignment(_alias((M_Last)(sig_last_reg_out)))(_simpleassign BUF)(_trgt(17))(_sens(37)))))
			(line__618(_arch 4 0 618(_assignment(_trgt(15))(_sens(35)))))
			(line__619(_arch 5 0 619(_assignment(_trgt(14))(_sens(34)))))
			(line__620(_arch 6 0 620(_assignment(_alias((M_RESP)(sig_resp_reg_out)))(_trgt(11))(_sens(31)))))
			(line__621(_arch 7 0 621(_assignment(_trgt(18))(_sens(57)))))
			(line__625(_arch 8 0 625(_assignment(_trgt(52))(_sens(45)(7)))))
			(line__626(_arch 9 0 626(_assignment(_trgt(54))(_sens(53)(6)))))
			(line__628(_arch 10 0 628(_assignment(_alias((sig_spcl_s_ready_set)(sig_reset_reg)))(_simpleassign BUF)(_trgt(20))(_sens(19)))))
			(line__632(_arch 11 0 632(_assignment(_trgt(38))(_sens(40)(13)))))
			(line__635(_arch 12 0 635(_assignment(_alias((sig_skid_reg_en)(sig_s_ready_dup)))(_simpleassign BUF)(_trgt(24))(_sens(43)))))
			(line__638(_arch 13 0 638(_assignment(_trgt(28))(_sens(43)))))
			(line__642(_arch 14 0 642(_assignment(_trgt(25))(_sens(21)(28)(5)))))
			(line__646(_arch 15 0 646(_assignment(_trgt(30))(_sens(28)(29)(9)))))
			(line__650(_arch 16 0 650(_assignment(_trgt(32))(_sens(28)(33)(10)))))
			(line__654(_arch 17 0 654(_assignment(_trgt(55))(_sens(28)(56)(8)))))
			(line__659(_arch 18 0 659(_assignment(_trgt(26))(_sens(22)(28)(54)))))
			(line__663(_arch 19 0 663(_assignment(_trgt(27))(_sens(23)(28)(52)))))
			(line__669(_arch 20 0 669(_assignment(_trgt(41))(_sens(40)(43)(3)(13)))))
			(line__677(_arch 21 0 677(_assignment(_trgt(44))(_sens(40)(43)(3)(13)))))
			(REG_THE_RST(_arch 22 0 693(_prcs(_trgt(19))(_sens(0)(1))(_dssslsensitivity 1))))
			(S_READY_FLOP(_arch 23 0 715(_prcs(_trgt(42)(43))(_sens(0)(20)(44)(46)(1))(_dssslsensitivity 1))))
			(M_VALID_FLOP(_arch 24 0 753(_prcs(_trgt(39)(40))(_sens(0)(20)(41)(51)(1))(_dssslsensitivity 1))))
			(SKID_REG(_arch 25 0 786(_prcs(_trgt(21)(22)(23)(29)(33)(56))(_sens(0)(24)(52)(54)(1)(5)(8)(9)(10))(_dssslsensitivity 1))))
			(OUTPUT_REG(_arch 26 0 826(_prcs(_trgt(31)(34)(35)(36)(37)(57))(_sens(0)(25)(26)(27)(30)(32)(38)(50)(55)(1))(_dssslsensitivity 1))))
			(line__860(_arch 27 0 860(_assignment(_trgt(48))(_sens(43)(52)(3)))))
			(line__865(_arch 28 0 865(_assignment(_trgt(46))(_sens(45)(47)(48)))))
			(line__874(_arch 29 0 874(_assignment(_trgt(49))(_sens(37)(40)(13)))))
			(line__879(_arch 30 0 879(_assignment(_trgt(51))(_sens(45)(49)(50)))))
			(IMP_STOP_REQ_FLOP(_arch 31 0 896(_prcs(_trgt(45)(53))(_sens(0)(1)(2))(_dssslsensitivity 1))))
			(IMP_CLR_SREADY_FLOP(_arch 32 0 933(_prcs(_trgt(47))(_sens(0)(45)(48)(1))(_dssslsensitivity 1))))
			(IMP_CLR_MVALID_FLOP(_arch 33 0 965(_prcs(_trgt(50))(_sens(0)(45)(49)(1))(_dssslsensitivity 1))))
		)
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext ~extstd.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(ieee(NUMERIC_STD)))
	(_static
		(514)
		(514)
	)
	(_model . implementation 50 -1)
)
V 000044 55 14755         1580964470718 RTL
(_unit VHDL(axi_slv_if 0 1090(rtl 0 1178))
	(_version vde)
	(_time 1580964470719 2020.02.05 22:47:50)
	(_source(\C:/Xilinx/Vivado/2019.2/data/ip/xilinx/axi_ahblite_bridge_v3_0/hdl/axi_ahblite_bridge_v3_0_vh_rfs.vhd\))
	(_parameters tan)
	(_code 0105080608565c1457055151425a560457070807070700)
	(_ent
		(_time 1580964470713)
	)
	(_generate GEN_32_NARROW 0 1300(_if 53)
		(_object
			(_prcs
				(line__1304(_arch 17 0 1304(_assignment(_trgt(96))(_sens(13)))))
				(line__1308(_arch 18 0 1308(_assignment(_trgt(97))(_sens(13)))))
				(line__1311(_arch 19 0 1311(_assignment(_trgt(98))(_sens(13)))))
				(line__1314(_arch 20 0 1314(_assignment(_alias((doubleword_transfer)(_string \"0"\)))(_trgt(99)))))
			)
		)
	)
	(_generate GEN_64_NARROW 0 1324(_if 54)
		(_object
			(_prcs
				(line__1328(_arch 21 0 1328(_assignment(_trgt(96))(_sens(13)))))
				(line__1334(_arch 22 0 1334(_assignment(_trgt(97))(_sens(13)))))
				(line__1338(_arch 23 0 1338(_assignment(_trgt(98))(_sens(13)))))
				(line__1341(_arch 24 0 1341(_assignment(_trgt(99))(_sens(13)))))
			)
		)
	)
	(_generate GEN_TIMEOUT_INPROGRESS 0 1792(_if 55)
		(_object
			(_prcs
				(TIMEOUT_PROGRESS_REG(_arch 47 0 1795(_prcs(_trgt(95))(_sens(0)(58)(89)(90)(1))(_dssslsensitivity 1))))
			)
		)
	)
	(_generate GEN_TIMEOUT_NOTINPROGRESS 0 1817(_if 56)
		(_object
			(_prcs
				(line__1820(_arch 48 0 1820(_assignment(_alias((timeout_inprogress_s)(_string \"0"\)))(_trgt(95)))))
			)
		)
	)
	(_object
		(_type(_int ~STRING~12 0 1092(_array -1((_uto i 1 i 2147483647)))))
		(_gen(_int C_FAMILY 0 0 1092(_ent(_string \"virtex6"\))))
		(_type(_int ~INTEGER~range~1~to~32~12 0 1093(_scalar (_to i 1 i 32))))
		(_gen(_int C_S_AXI_ID_WIDTH 1 0 1093 \4\ (_ent gms((i 4)))))
		(_type(_int ~INTEGER~range~32~to~64~12 0 1094(_scalar (_to i 32 i 64))))
		(_gen(_int C_S_AXI_ADDR_WIDTH 2 0 1094 \32\ (_ent gms((i 32)))))
		(_gen(_int C_S_AXI_DATA_WIDTH -2 0 1095 \32\ (_ent gms((i 32)))))
		(_gen(_int C_DPHASE_TIMEOUT -2 0 1096 \0\ (_ent gms((i 0)))))
		(_port(_int S_AXI_ACLK -3 0 1100(_ent(_in)(_event))))
		(_port(_int S_AXI_ARESETN -3 0 1101(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~12 0 1103(_array -3((_dto c 57 i 0)))))
		(_port(_int S_AXI_AWID 3 0 1103(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ADDR_WIDTH-1~downto~0}~12 0 1105(_array -3((_dto c 58 i 0)))))
		(_port(_int S_AXI_AWADDR 4 0 1105(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{2~downto~0}~12 0 1106(_array -3((_dto i 2 i 0)))))
		(_port(_int S_AXI_AWPROT 5 0 1106(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{3~downto~0}~12 0 1107(_array -3((_dto i 3 i 0)))))
		(_port(_int S_AXI_AWCACHE 6 0 1107(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{7~downto~0}~12 0 1108(_array -3((_dto i 7 i 0)))))
		(_port(_int S_AXI_AWLEN 7 0 1108(_ent(_in))))
		(_port(_int S_AXI_AWSIZE 5 0 1109(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{1~downto~0}~12 0 1110(_array -3((_dto i 1 i 0)))))
		(_port(_int S_AXI_AWBURST 8 0 1110(_ent(_in))))
		(_port(_int S_AXI_AWLOCK -3 0 1111(_ent(_in))))
		(_port(_int S_AXI_AWVALID -3 0 1112(_ent(_in))))
		(_port(_int S_AXI_AWREADY -3 0 1113(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH-1~downto~0}~12 0 1114(_array -3((_dto c 59 i 0)))))
		(_port(_int S_AXI_WDATA 9 0 1114(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH/8-1~downto~0}~12 0 1115(_array -3((_dto c 60 i 0)))))
		(_port(_int S_AXI_WSTRB 10 0 1115(_ent(_in))))
		(_port(_int S_AXI_WVALID -3 0 1116(_ent(_in))))
		(_port(_int S_AXI_WLAST -3 0 1117(_ent(_in))))
		(_port(_int S_AXI_WREADY -3 0 1118(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~122 0 1120(_array -3((_dto c 61 i 0)))))
		(_port(_int S_AXI_BID 11 0 1120(_ent(_out))))
		(_port(_int S_AXI_BRESP 8 0 1122(_ent(_out))))
		(_port(_int S_AXI_BVALID -3 0 1123(_ent(_out))))
		(_port(_int S_AXI_BREADY -3 0 1124(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~124 0 1126(_array -3((_dto c 62 i 0)))))
		(_port(_int S_AXI_ARID 12 0 1126(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ADDR_WIDTH-1~downto~0}~126 0 1128(_array -3((_dto c 63 i 0)))))
		(_port(_int S_AXI_ARADDR 13 0 1128(_ent(_in))))
		(_port(_int S_AXI_ARVALID -3 0 1129(_ent(_in))))
		(_port(_int S_AXI_ARPROT 5 0 1130(_ent(_in))))
		(_port(_int S_AXI_ARCACHE 6 0 1131(_ent(_in))))
		(_port(_int S_AXI_ARLEN 7 0 1132(_ent(_in))))
		(_port(_int S_AXI_ARSIZE 5 0 1133(_ent(_in))))
		(_port(_int S_AXI_ARBURST 8 0 1134(_ent(_in))))
		(_port(_int S_AXI_ARLOCK -3 0 1135(_ent(_in))))
		(_port(_int S_AXI_ARREADY -3 0 1136(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~128 0 1138(_array -3((_dto c 64 i 0)))))
		(_port(_int S_AXI_RID 14 0 1138(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH-1~downto~0}~1210 0 1140(_array -3((_dto c 65 i 0)))))
		(_port(_int S_AXI_RDATA 15 0 1140(_ent(_out))))
		(_port(_int S_AXI_RRESP 8 0 1141(_ent(_out))))
		(_port(_int S_AXI_RVALID -3 0 1142(_ent(_out))))
		(_port(_int S_AXI_RLAST -3 0 1143(_ent(_out))))
		(_port(_int S_AXI_RREADY -3 0 1144(_ent(_in))))
		(_port(_int axi_prot 5 0 1147(_ent(_out))))
		(_port(_int axi_cache 6 0 1148(_ent(_out))))
		(_port(_int axi_size 5 0 1149(_ent(_out))))
		(_port(_int axi_lock -3 0 1150(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH-1~downto~0}~1212 0 1151(_array -3((_dto c 66 i 0)))))
		(_port(_int axi_wdata 16 0 1151(_ent(_out))))
		(_port(_int ahb_rd_request -3 0 1152(_ent(_out))))
		(_port(_int ahb_wr_request -3 0 1153(_ent(_out))))
		(_port(_int slv_err_resp -3 0 1154(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH-1~downto~0}~1214 0 1155(_array -3((_dto c 67 i 0)))))
		(_port(_int rd_data 17 0 1155(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ADDR_WIDTH-1~downto~0}~1216 0 1156(_array -3((_dto c 68 i 0)))))
		(_port(_int axi_address 18 0 1156(_ent(_out))))
		(_port(_int axi_burst 8 0 1157(_ent(_out))))
		(_port(_int axi_length 7 0 1158(_ent(_out))))
		(_port(_int send_wvalid -3 0 1159(_ent(_in))))
		(_port(_int send_ahb_wr -3 0 1160(_ent(_out))))
		(_port(_int axi_wvalid -3 0 1161(_ent(_out))))
		(_port(_int single_ahb_wr_xfer -3 0 1162(_ent(_out))))
		(_port(_int single_ahb_rd_xfer -3 0 1163(_ent(_out))))
		(_port(_int send_bresp -3 0 1164(_ent(_in))))
		(_port(_int send_rvalid -3 0 1165(_ent(_in))))
		(_port(_int send_rlast -3 0 1166(_ent(_in))))
		(_port(_int axi_rready -3 0 1167(_ent(_out))))
		(_port(_int timeout_i -3 0 1168(_ent(_in))))
		(_port(_int timeout_inprogress -3 0 1169(_ent(_out))))
		(_type(_int AXI_WR_SM_TYPE 0 1191(_enum1 axi_wr_idle axi_writing axi_wvalids_wait axi_wvalid_wait axi_write_last axi_wr_resp_wait axi_wr_resp (_to i 0 i 6))))
		(_type(_int AXI_RD_SM_TYPE 0 1200(_enum1 axi_rd_idle axi_read_last axi_reading axi_wait_rready rd_resp (_to i 0 i 4))))
		(_sig(_int axi_write_ns 19 0 1210(_arch(_uni))))
		(_sig(_int axi_write_cs 19 0 1211(_arch(_uni))))
		(_sig(_int axi_read_ns 20 0 1212(_arch(_uni))))
		(_sig(_int axi_read_cs 20 0 1213(_arch(_uni))))
		(_sig(_int ARREADY_i -3 0 1215(_arch(_uni))))
		(_sig(_int WREADY_i -3 0 1216(_arch(_uni))))
		(_sig(_int AWREADY_i -3 0 1217(_arch(_uni))))
		(_sig(_int BVALID_i -3 0 1218(_arch(_uni))))
		(_sig(_int BRESP_1_i -3 0 1219(_arch(_uni))))
		(_sig(_int RVALID_i -3 0 1220(_arch(_uni))))
		(_sig(_int RLAST_i -3 0 1221(_arch(_uni))))
		(_sig(_int RRESP_1_i -3 0 1222(_arch(_uni))))
		(_sig(_int write_ready_sm -3 0 1223(_arch(_uni))))
		(_sig(_int wr_addr_ready_sm -3 0 1224(_arch(_uni))))
		(_sig(_int rd_addr_ready_sm -3 0 1225(_arch(_uni))))
		(_sig(_int BVALID_sm -3 0 1226(_arch(_uni))))
		(_sig(_int RVALID_sm -3 0 1227(_arch(_uni))))
		(_sig(_int RLAST_sm -3 0 1228(_arch(_uni))))
		(_sig(_int wr_request -3 0 1230(_arch(_uni))))
		(_sig(_int rd_request -3 0 1231(_arch(_uni))))
		(_sig(_int write_pending -3 0 1233(_arch(_uni))))
		(_sig(_int write_waiting -3 0 1234(_arch(_uni))))
		(_sig(_int write_complete -3 0 1235(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~13 0 1236(_array -3((_dto c 69 i 0)))))
		(_sig(_int BID_i 21 0 1236(_arch(_uni))))
		(_sig(_int RID_i 21 0 1237(_arch(_uni))))
		(_sig(_int axi_rid 21 0 1238(_arch(_uni))))
		(_sig(_int axi_wid 21 0 1239(_arch(_uni))))
		(_sig(_int single_axi_wr_xfer -3 0 1241(_arch(_uni))))
		(_sig(_int single_axi_rd_xfer -3 0 1242(_arch(_uni))))
		(_sig(_int write_in_progress -3 0 1243(_arch(_uni))))
		(_sig(_int read_in_progress -3 0 1244(_arch(_uni))))
		(_sig(_int write_statrted -3 0 1245(_arch(_uni))))
		(_sig(_int send_rd_data -3 0 1246(_arch(_uni))))
		(_sig(_int wr_err_occured -3 0 1247(_arch(_uni))))
		(_sig(_int axi_wlast -3 0 1249(_arch(_uni))))
		(_sig(_int timeout_inprogress_s -3 0 1250(_arch(_uni))))
		(_sig(_int byte_transfer -3 0 1252(_arch(_uni))))
		(_sig(_int halfword_transfer -3 0 1253(_arch(_uni))))
		(_sig(_int word_transfer -3 0 1254(_arch(_uni))))
		(_sig(_int doubleword_transfer -3 0 1255(_arch(_uni))))
		(_prcs
			(line__1267(_arch 0 0 1267(_assignment(_alias((S_AXI_AWREADY)(AWREADY_i)))(_simpleassign BUF)(_trgt(11))(_sens(66)))))
			(line__1268(_arch 1 0 1268(_assignment(_trgt(17))(_sens(83)))))
			(line__1269(_arch 2 0 1269(_assignment(_trgt(31))(_sens(84)))))
			(line__1271(_arch 3 0 1271(_assignment(_alias((S_AXI_WREADY)(WREADY_i)))(_simpleassign BUF)(_trgt(16))(_sens(65)))))
			(line__1273(_arch 4 0 1273(_assignment(_trgt(18(0))))))
			(line__1274(_arch 5 0 1274(_assignment(_alias((S_AXI_BRESP(1))(BRESP_1_i)))(_trgt(18(1)))(_sens(68)))))
			(line__1275(_arch 6 0 1275(_assignment(_alias((S_AXI_BVALID)(BVALID_i)))(_simpleassign BUF)(_trgt(19))(_sens(67)))))
			(line__1277(_arch 7 0 1277(_assignment(_alias((S_AXI_ARREADY)(ARREADY_i)))(_simpleassign BUF)(_trgt(30))(_sens(64)))))
			(line__1279(_arch 8 0 1279(_assignment(_trgt(33(0))))))
			(line__1280(_arch 9 0 1280(_assignment(_alias((S_AXI_RRESP(1))(RRESP_1_i)))(_trgt(33(1)))(_sens(71)))))
			(line__1281(_arch 10 0 1281(_assignment(_alias((S_AXI_RVALID)(RVALID_i)))(_simpleassign BUF)(_trgt(34))(_sens(69)))))
			(line__1282(_arch 11 0 1282(_assignment(_alias((S_AXI_RLAST)(RLAST_i)))(_simpleassign BUF)(_trgt(35))(_sens(70)))))
			(line__1284(_arch 12 0 1284(_assignment(_alias((timeout_inprogress)(timeout_inprogress_s)))(_simpleassign BUF)(_trgt(59))(_sens(95)))))
			(line__1289(_arch 13 0 1289(_assignment(_alias((axi_wvalid)(S_AXI_WVALID)))(_simpleassign BUF)(_trgt(51))(_sens(14)))))
			(line__1290(_arch 14 0 1290(_assignment(_alias((axi_rready)(S_AXI_RREADY)))(_simpleassign BUF)(_trgt(57))(_sens(36)))))
			(line__1292(_arch 15 0 1292(_assignment(_alias((single_ahb_wr_xfer)(single_axi_wr_xfer)))(_simpleassign BUF)(_trgt(52))(_sens(87)))))
			(line__1293(_arch 16 0 1293(_assignment(_alias((single_ahb_rd_xfer)(single_axi_rd_xfer)))(_simpleassign BUF)(_trgt(53))(_sens(88)))))
			(RID_REG(_arch 25 0 1351(_prcs(_trgt(84))(_sens(0)(85)(1))(_dssslsensitivity 1))))
			(RD_RESP_REG(_arch 26 0 1366(_prcs(_trgt(71))(_sens(0)(92)(95)(1)(36)(44))(_dssslsensitivity 1))))
			(RD_DATA_REG(_arch 27 0 1385(_prcs(_trgt(32))(_sens(0)(92)(1)(36)(45))(_dssslsensitivity 1))))
			(BID_REG(_arch 28 0 1404(_prcs(_trgt(83))(_sens(0)(86)(1))(_dssslsensitivity 1))))
			(AXI_RID_REG(_arch 29 0 1420(_prcs(_trgt(85))(_sens(0)(74)(1)(21))(_dssslsensitivity 1))))
			(AXI_WID_REG(_arch 30 0 1438(_prcs(_trgt(86))(_sens(0)(73)(1)(2))(_dssslsensitivity 1))))
			(ADDR_REG(_arch 31 0 1455(_prcs(_trgt(46))(_sens(0)(73)(74)(1)(3)(22))(_dssslsensitivity 1))))
			(AXI_PROT_REG(_arch 32 0 1475(_prcs(_trgt(37))(_sens(0)(73)(74)(1)(4)(24))(_dssslsensitivity 1))))
			(AXI_CACHE_REG(_arch 33 0 1495(_prcs(_trgt(38))(_sens(0)(73)(74)(1)(5)(25))(_dssslsensitivity 1))))
			(AXI_LOCK_REG(_arch 34 0 1515(_prcs(_trgt(40))(_sens(0)(73)(74)(1)(9)(29))(_dssslsensitivity 1))))
			(AXI_SIZE_REG(_arch 35 0 1535(_prcs(_simple)(_trgt(39))(_sens(0))(_read(73)(74)(96)(97)(98)(99)(1)(6)(7)(27)))))
			(AXI_LENGTH_REG(_arch 36 0 1569(_prcs(_trgt(48))(_sens(0)(73)(74)(1)(6)(26))(_dssslsensitivity 1))))
			(AXI_BURST_REG(_arch 37 0 1589(_prcs(_trgt(47))(_sens(0)(73)(74)(1)(8)(28))(_dssslsensitivity 1))))
			(AXI_WR_DATA_REG(_arch 38 0 1608(_prcs(_trgt(41))(_sens(0)(72)(1)(12))(_dssslsensitivity 1))))
			(line__1642(_arch 39 0 1642(_assignment(_trgt(68))(_sens(93)(95)))))
			(WR_PEND_REG(_arch 40 0 1649(_prcs(_trgt(89))(_sens(0)(82)(91)(1))(_dssslsensitivity 1))))
			(WR_ERR_REG(_arch 41 0 1668(_prcs(_trgt(93))(_sens(0)(82)(89)(1)(44))(_dssslsensitivity 1))))
			(RD_PROGRESS_REG(_arch 42 0 1688(_prcs(_trgt(90))(_sens(0)(74)(77)(1))(_dssslsensitivity 1))))
			(WR_PROGRESS_REG(_arch 43 0 1707(_prcs(_trgt(80))(_sens(0)(75)(81)(1))(_dssslsensitivity 1))))
			(WR_SINGLE_XFER_REG(_arch 44 0 1726(_prcs(_trgt(87))(_sens(0)(75)(1)(6)(8(1))(10))(_dssslsensitivity 1))))
			(RD_SINGLE_XFER_REG(_arch 45 0 1750(_prcs(_trgt(88))(_sens(0)(77)(1)(23)(26)(28(1)))(_dssslsensitivity 1))))
			(S_AXI_WLAST_REG(_arch 46 0 1776(_prcs(_trgt(94))(_sens(0)(1)(15))(_dssslsensitivity 1))))
			(AXI_WRITE_SM(_arch 49 0 1831(_prcs(_simple)(_trgt(60)(72)(73)(75)(78)(82)(91)(50))(_sens(54)(61)(80)(87)(90)(94)(10)(14)(15)(20)(23)(49)))))
			(AXI_WRITE_SM_REG(_arch 50 0 1933(_prcs(_trgt(61)(65)(66)(67))(_sens(0)(60)(72)(73)(75)(1))(_dssslsensitivity 1))))
			(AXI_READ_SM(_arch 51 0 1956(_prcs(_simple)(_trgt(62)(74)(76)(77)(79)(81)(92))(_sens(55)(56)(63)(80)(88)(89)(10)(14)(23)(36)))))
			(AXI_READ_SM_REG(_arch 52 0 2042(_prcs(_trgt(63)(64)(69)(70)(42)(43))(_sens(0)(62)(74)(76)(77)(78)(79)(1))(_dssslsensitivity 1))))
		)
		(_type(_ext ~extstd.standard.CHARACTER(0 CHARACTER)))
		(_type(_ext ~extstd.standard.INTEGER(0 INTEGER)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
		(_type(_ext ~extstd.standard.BOOLEAN(0 BOOLEAN)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(STD_LOGIC_UNSIGNED))(ieee(NUMERIC_STD))(ieee(std_logic_misc)))
	(_static
		(50463234)
		(33751554)
		(33686274)
		(33686019)
		(50528770)
		(33686275)
		(50529027)
		(33686018 50463234)
		(33686018 33751554)
		(33686018 33686274)
		(33686018 33686019)
		(50463234 33686018)
		(33751554 33686018)
		(33686274 33686018)
		(33686019 33686018)
		(33686018 50528770)
		(33686018 33686275)
		(50528770 33686018)
		(33686275 33686018)
		(33686018 50529027)
		(50529027 33686018)
		(50529027 50529027)
		(131586)
		(33686018)
		(131586)
		(131586)
		(197122)
		(131842)
		(197378)
		(33686018 33686018)
		(514)
	)
	(_model . RTL 70 -1)
)
V 000044 55 14183         1580964470736 RTL
(_unit VHDL(ahb_mstr_if 0 2161(rtl 0 2220))
	(_version vde)
	(_time 1580964470737 2020.02.05 22:47:50)
	(_source(\C:/Xilinx/Vivado/2019.2/data/ip/xilinx/axi_ahblite_bridge_v3_0/hdl/axi_ahblite_bridge_v3_0_vh_rfs.vhd\))
	(_parameters tan)
	(_code 111518161846470447131747024a441613144717181717)
	(_ent
		(_time 1580964470727)
	)
	(_generate GEN_32_DATA_WIDTH_NARROW 0 2479(_if 46)
		(_object
			(_prcs
				(AHB_ADDRESS_REG(_arch 23 0 2490(_prcs(_simple)(_trgt(41(d_5_0))(41(_range 47))(41(_range 48))(41(_range 49))(41(_range 50))(41(d_4_0))(41(_range 51))(41(_range 52))(41(_range 53))(41(_range 54))(41(d_3_0))(41(_range 55))(41(d_2_0))(41(_range 56))(41(_range 57))(41(_range 58))(41(0))(41(_range 59))(41(d_1_0))(41(_range 60))(41))(_sens(0))(_read(41)(55)(71)(76)(79)(80)(81)(1)(13)(14)(21)(23)))))
			)
		)
	)
	(_generate GEN_64_DATA_WIDTH_NARROW 0 2576(_if 61)
		(_object
			(_prcs
				(AHB_ADDRESS_REG(_arch 24 0 2587(_prcs(_simple)(_trgt(41(d_6_0))(41(_range 62))(41(_range 63))(41(_range 64))(41(_range 65))(41(d_5_0))(41(_range 66))(41(_range 67))(41(_range 68))(41(_range 69))(41(d_4_0))(41(_range 70))(41(_range 71))(41(_range 72))(41(_range 73))(41(d_3_0))(41(_range 74))(41(_range 75))(41(_range 76))(41(_range 77))(41(0))(41(_range 78))(41(d_1_0))(41(_range 79))(41(d_2_0))(41(_range 80))(41))(_sens(0))(_read(41)(55)(71)(76)(79)(80)(81)(1)(13)(14)(21)(23)))))
			)
		)
	)
	(_generate GEN_32_DATA_WIDTH 0 2693(_if 81)
		(_object
			(_prcs
				(AHB_ADDRESS_REG(_arch 25 0 2704(_prcs(_simple)(_trgt(41(d_5_0))(41(_range 82))(41(d_4_0))(41(_range 83))(41(d_3_0))(41(_range 84))(41(d_2_0))(41(_range 85))(41(d_1_0))(41(_range 86))(41))(_sens(0))(_read(41)(55)(71)(76)(79)(80)(81)(1)(13)(14)(23(_range 87))))))
			)
		)
	)
	(_generate GEN_64_DATA_WIDTH 0 2743(_if 88)
		(_object
			(_prcs
				(AHB_ADDRESS_REG(_arch 26 0 2754(_prcs(_simple)(_trgt(41(d_6_0))(41(_range 89))(41(d_5_0))(41(_range 90))(41(d_4_0))(41(_range 91))(41(d_3_0))(41(_range 92))(41(d_2_0))(41(_range 93))(41))(_sens(0))(_read(41)(55)(71)(76)(79)(80)(81)(1)(13)(14)(23(_range 94))))))
			)
		)
	)
	(_object
		(_type(_int ~INTEGER~range~32~to~64~12 0 2163(_scalar (_to i 32 i 64))))
		(_gen(_int C_M_AHB_ADDR_WIDTH 0 0 2163 \32\ (_ent gms((i 32)))))
		(_gen(_int C_M_AHB_DATA_WIDTH -1 0 2164 \32\ (_ent gms((i 32)))))
		(_gen(_int C_S_AXI_DATA_WIDTH -1 0 2165 \32\ (_ent gms((i 32)))))
		(_type(_int ~INTEGER~range~0~to~1~12 0 2166(_scalar (_to i 0 i 1))))
		(_gen(_int C_S_AXI_SUPPORTS_NARROW_BURST 1 0 2166 \0\ (_ent gms((i 0)))))
		(_port(_int AHB_HCLK -2 0 2171(_ent(_in)(_event))))
		(_port(_int AHB_HRESETN -2 0 2172(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_ADDR_WIDTH-1~downto~0}~12 0 2174(_array -2((_dto c 95 i 0)))))
		(_port(_int M_AHB_HADDR 2 0 2174(_ent(_out))))
		(_port(_int M_AHB_HWRITE -2 0 2175(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{2~downto~0}~12 0 2176(_array -2((_dto i 2 i 0)))))
		(_port(_int M_AHB_HSIZE 3 0 2176(_ent(_out))))
		(_port(_int M_AHB_HBURST 3 0 2177(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{3~downto~0}~12 0 2178(_array -2((_dto i 3 i 0)))))
		(_port(_int M_AHB_HPROT 4 0 2178(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{1~downto~0}~12 0 2179(_array -2((_dto i 1 i 0)))))
		(_port(_int M_AHB_HTRANS 5 0 2179(_ent(_out))))
		(_port(_int M_AHB_HMASTLOCK -2 0 2180(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_DATA_WIDTH-1~downto~0}~12 0 2181(_array -2((_dto c 96 i 0)))))
		(_port(_int M_AHB_HWDATA 6 0 2181(_ent(_out))))
		(_port(_int M_AHB_HREADY -2 0 2183(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_DATA_WIDTH-1~downto~0}~122 0 2184(_array -2((_dto c 97 i 0)))))
		(_port(_int M_AHB_HRDATA 7 0 2184(_ent(_in))))
		(_port(_int M_AHB_HRESP -2 0 2185(_ent(_in))))
		(_port(_int ahb_rd_request -2 0 2188(_ent(_in))))
		(_port(_int ahb_wr_request -2 0 2189(_ent(_in))))
		(_port(_int axi_lock -2 0 2190(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_DATA_WIDTH-1~downto~0}~124 0 2191(_array -2((_dto c 98 i 0)))))
		(_port(_int rd_data 8 0 2191(_ent(_out))))
		(_port(_int slv_err_resp -2 0 2192(_ent(_out))))
		(_port(_int axi_prot 3 0 2193(_ent(_in))))
		(_port(_int axi_cache 4 0 2194(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH-1~downto~0}~12 0 2195(_array -2((_dto c 99 i 0)))))
		(_port(_int axi_wdata 9 0 2195(_ent(_in))))
		(_port(_int axi_size 3 0 2196(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{7~downto~0}~12 0 2197(_array -2((_dto i 7 i 0)))))
		(_port(_int axi_length 10 0 2197(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_ADDR_WIDTH-1~downto~0}~126 0 2198(_array -2((_dto c 100 i 0)))))
		(_port(_int axi_address 11 0 2198(_ent(_in))))
		(_port(_int axi_burst 5 0 2199(_ent(_in))))
		(_port(_int single_ahb_wr_xfer -2 0 2200(_ent(_in))))
		(_port(_int single_ahb_rd_xfer -2 0 2201(_ent(_in))))
		(_port(_int send_wvalid -2 0 2202(_ent(_out))))
		(_port(_int send_ahb_wr -2 0 2203(_ent(_in))))
		(_port(_int axi_wvalid -2 0 2204(_ent(_in))))
		(_port(_int send_bresp -2 0 2205(_ent(_out))))
		(_port(_int send_rvalid -2 0 2206(_ent(_out))))
		(_port(_int send_rlast -2 0 2207(_ent(_out))))
		(_port(_int axi_rready -2 0 2208(_ent(_in))))
		(_port(_int timeout_inprogress -2 0 2209(_ent(_in))))
		(_port(_int load_cntr -2 0 2210(_ent(_out))))
		(_port(_int cntr_enable -2 0 2211(_ent(_out))))
		(_type(_int AHB_SM_TYPE 0 2232(_enum1 ahb_idle ahb_rd_addr ahb_rd_single ahb_rd_data_incr ahb_rd_last ahb_rd_wait ahb_wr_addr ahb_wr_single ahb_wr_wait ahb_wr_incr ahb_incr_addr ahb_last_addr ahb_onekb_last ahb_last_wait ahb_last (_to i 0 i 14))))
		(_type(_int ~STD_LOGIC_VECTOR~13 0 2253(_array -2((_to i 0 i 1)))))
		(_cnst(_int IDLE 13 0 2253(_arch(_string \"00"\))))
		(_type(_int ~STD_LOGIC_VECTOR~131 0 2254(_array -2((_to i 0 i 1)))))
		(_cnst(_int BUSY 14 0 2254(_arch(_string \"01"\))))
		(_type(_int ~STD_LOGIC_VECTOR~133 0 2255(_array -2((_to i 0 i 1)))))
		(_cnst(_int NONSEQ 15 0 2255(_arch(_string \"10"\))))
		(_type(_int ~STD_LOGIC_VECTOR~135 0 2256(_array -2((_to i 0 i 1)))))
		(_cnst(_int SEQ 16 0 2256(_arch(_string \"11"\))))
		(_sig(_int ahb_wr_rd_ns 12 0 2262(_arch(_uni))))
		(_sig(_int ahb_wr_rd_cs 12 0 2263(_arch(_uni))))
		(_sig(_int HWRITE_i -2 0 2265(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_DATA_WIDTH-1~downto~0}~13 0 2266(_array -2((_dto c 101 i 0)))))
		(_sig(_int HWDATA_i 17 0 2266(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_ADDR_WIDTH-1~downto~0}~13 0 2267(_array -2((_dto c 102 i 0)))))
		(_sig(_int HADDR_i 18 0 2267(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{3~downto~0}~13 0 2268(_array -2((_dto i 3 i 0)))))
		(_sig(_int HPROT_i 19 0 2268(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{2~downto~0}~13 0 2269(_array -2((_dto i 2 i 0)))))
		(_sig(_int HBURST_i 20 0 2269(_arch(_uni))))
		(_sig(_int HSIZE_i 20 0 2270(_arch(_uni))))
		(_sig(_int HLOCK_i -2 0 2271(_arch(_uni))))
		(_sig(_int ahb_hslverr -2 0 2273(_arch(_uni))))
		(_sig(_int ahb_hready -2 0 2274(_arch(_uni))))
		(_sig(_int ahb_hrdata 17 0 2275(_arch(_uni))))
		(_sig(_int ahb_write_sm -2 0 2276(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{7~downto~0}~13 0 2277(_array -2((_dto i 7 i 0)))))
		(_sig(_int wrap_brst_count 21 0 2277(_arch(_uni))))
		(_sig(_int burst_ready -2 0 2278(_arch(_uni))))
		(_sig(_int wrap_brst_last -2 0 2279(_arch(_uni))))
		(_sig(_int ahb_burst 20 0 2280(_arch(_uni))))
		(_sig(_int send_wr_data -2 0 2281(_arch(_uni))))
		(_sig(_int incr_addr -2 0 2282(_arch(_uni))))
		(_sig(_int load_counter -2 0 2283(_arch(_uni))))
		(_sig(_int load_counter_sm -2 0 2284(_arch(_uni))))
		(_sig(_int wrap_brst_one -2 0 2285(_arch(_uni))))
		(_sig(_int send_trans_seq -2 0 2286(_arch(_uni))))
		(_sig(_int send_trans_nonseq -2 0 2287(_arch(_uni))))
		(_sig(_int send_trans_idle -2 0 2288(_arch(_uni))))
		(_sig(_int send_trans_busy -2 0 2289(_arch(_uni))))
		(_sig(_int send_wrap_burst -2 0 2290(_arch(_uni))))
		(_sig(_int wrap_in_progress -2 0 2292(_arch(_uni))))
		(_sig(_int send_rlast_sm -2 0 2293(_arch(_uni))))
		(_sig(_int send_bresp_sm -2 0 2294(_arch(_uni))))
		(_sig(_int one_kb_cross -2 0 2295(_arch(_uni))))
		(_sig(_int addr_all_ones -2 0 2297(_arch(_uni))))
		(_sig(_int one_kb_in_progress -2 0 2298(_arch(_uni))))
		(_sig(_int one_kb_splitted -2 0 2299(_arch(_uni))))
		(_sig(_int wrap_2_in_progress -2 0 2300(_arch(_uni))))
		(_sig(_int axi_len_les_eq_sixteen -2 0 2301(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{11~downto~0}~13 0 2302(_array -2((_dto i 11 i 0)))))
		(_sig(_int axi_end_address 22 0 2302(_arch(_uni))))
		(_sig(_int axi_length_burst 22 0 2303(_arch(_uni))))
		(_sig(_int onekb_cross_access -2 0 2304(_arch(_uni))))
		(_sig(_int fixed_burst_access -2 0 2305(_arch(_uni))))
		(_sig(_int incr_burst_access -2 0 2306(_arch(_uni))))
		(_sig(_int wrap_burst_access -2 0 2307(_arch(_uni))))
		(_sig(_int wrap_four -2 0 2308(_arch(_uni))))
		(_sig(_int wrap_eight -2 0 2309(_arch(_uni))))
		(_sig(_int wrap_sixteen -2 0 2310(_arch(_uni))))
		(_sig(_int onekb_brst_add -2 0 2311(_arch(_uni))))
		(_sig(_int single_ahb_wr -2 0 2312(_arch(_uni))))
		(_prcs
			(line__2323(_arch 0 0 2323(_assignment(_trgt(2))(_sens(41)))))
			(line__2324(_arch 1 0 2324(_assignment(_alias((M_AHB_HWRITE)(HWRITE_i)))(_simpleassign BUF)(_trgt(3))(_sens(39)))))
			(line__2325(_arch 2 0 2325(_assignment(_trgt(9))(_sens(40)))))
			(line__2326(_arch 3 0 2326(_assignment(_alias((M_AHB_HPROT)(HPROT_i)))(_trgt(6))(_sens(42)))))
			(line__2327(_arch 4 0 2327(_assignment(_alias((M_AHB_HMASTLOCK)(HLOCK_i)))(_simpleassign BUF)(_trgt(8))(_sens(45)))))
			(line__2328(_arch 5 0 2328(_assignment(_alias((M_AHB_HSIZE)(HSIZE_i)))(_trgt(4))(_sens(44)))))
			(line__2329(_arch 6 0 2329(_assignment(_alias((M_AHB_HBURST)(HBURST_i)))(_trgt(5))(_sens(43)))))
			(line__2335(_arch 7 0 2335(_assignment(_alias((ahb_hslverr)(M_AHB_HRESP)))(_simpleassign BUF)(_trgt(46))(_sens(12)))))
			(line__2336(_arch 8 0 2336(_assignment(_alias((ahb_hready)(M_AHB_HREADY)))(_simpleassign BUF)(_trgt(47))(_sens(10)))))
			(line__2337(_arch 9 0 2337(_assignment(_trgt(48))(_sens(11)))))
			(line__2338(_arch 10 0 2338(_assignment(_alias((send_rlast)(send_rlast_sm)))(_simpleassign BUF)(_trgt(32))(_sens(65)))))
			(line__2339(_arch 11 0 2339(_assignment(_alias((send_bresp)(send_bresp_sm)))(_simpleassign BUF)(_trgt(30))(_sens(66)))))
			(line__2346(_arch 12 0 2346(_assignment(_trgt(76))(_sens(24)))))
			(line__2353(_arch 13 0 2353(_assignment(_trgt(77))(_sens(24)))))
			(line__2360(_arch 14 0 2360(_assignment(_trgt(78))(_sens(24)))))
			(line__2367(_arch 15 0 2367(_assignment(_trgt(79))(_sens(64)(22(d_3_0))))))
			(line__2370(_arch 16 0 2370(_assignment(_trgt(80))(_sens(64)(22(d_3_0))))))
			(line__2373(_arch 17 0 2373(_assignment(_trgt(81))(_sens(64)(22(d_3_0))))))
			(AHB_WDATA_REG(_arch 18 0 2381(_prcs(_trgt(40))(_sens(0)(54)(1)(20))(_dssslsensitivity 1))))
			(AHB_TRANS_REG(_arch 19 0 2401(_prcs(_simple)(_trgt(7))(_sens(0))(_read(59)(60)(61)(62)(1)(34)))))
			(AHB_WRITE_REG(_arch 20 0 2426(_prcs(_trgt(39))(_sens(0)(1)(13)(14))(_dssslsensitivity 1))))
			(AHB_WRAP_REG(_arch 21 0 2447(_prcs(_trgt(64))(_sens(0)(63)(65)(66)(1))(_dssslsensitivity 1))))
			(line__2469(_arch 22 0 2469(_assignment(_trgt(71))(_sens(64)(22(d_3_0))))))
			(AHB_PROT_REG(_arch 27 0 2795(_prcs(_trgt(42(0))(42(1))(42(2))(42(3))(42))(_sens(0)(1)(13)(14)(18(2))(18(0))(19(3))(19(2))(19(0)))(_dssslsensitivity 1))))
			(WRAP_BURST_COUNTER_REG(_arch 28 0 2817(_prcs(_trgt(50))(_sens(0)(50)(51)(56)(1)(22))(_dssslsensitivity 1))))
			(line__2837(_arch 29 0 2837(_assignment(_trgt(52))(_sens(50)))))
			(line__2838(_arch 30 0 2838(_assignment(_trgt(58))(_sens(50)))))
			(line__2845(_arch 31 0 2845(_assignment(_trgt(72))(_sens(22(d_7_4))))))
			(line__2853(_arch 32 0 2853(_assignment(_trgt(82))(_sens(73(11))(73(10))))))
			(AHB_BURST_LENGTH_CMB(_arch 33 0 2855(_prcs(_simple)(_trgt(53))(_sens(72)(77)(78)(82)(22(d_3_0)))(_read(22(d_2_0))))))
			(AHB_BURST_REG(_arch 34 0 2905(_prcs(_trgt(43))(_sens(0)(53)(1))(_dssslsensitivity 1))))
			(AHB_SIZE_REG(_arch 35 0 2920(_prcs(_trgt(44))(_sens(0)(1)(21))(_dssslsensitivity 1))))
			(AHB_LOCK_REG(_arch 36 0 2935(_prcs(_trgt(45))(_sens(0)(1)(15))(_dssslsensitivity 1))))
			(SINGLE_WRITE_REG(_arch 37 0 2950(_prcs(_trgt(83))(_sens(0)(1)(14)(25))(_dssslsensitivity 1))))
			(AHB_WR_RD_SM(_arch 38 0 2970(_prcs(_simple)(_trgt(37)(49)(51)(54)(55)(57)(59)(60)(61)(62)(63)(65)(66)(70)(16)(17)(27)(31)(35)(36))(_sens(38)(46)(47)(48)(52)(58)(67)(69)(71)(76)(83)(13)(14)(24)(26)(28)(29)(33)(34)))))
			(AHB_WR_RD_SM_REG(_arch 39 0 3287(_prcs(_trgt(38)(56))(_sens(0)(37)(57)(1))(_dssslsensitivity 1))))
			(line__3308(_arch 40 0 3308(_assignment(_trgt(73))(_sens(74)(23(d_9_0))))))
			(line__3310(_arch 41 0 3310(_assignment(_trgt(74))(_sens(21)(22)))))
			(ONEKB_CROSS_ACCESS_REG(_arch 42 0 3320(_prcs(_trgt(75))(_sens(0)(52)(73(11))(73(10))(1)(13)(14))(_dssslsensitivity 1))))
			(line__3340(_arch 43 0 3340(_assignment(_trgt(68))(_sens(41(d_9_0))(41(d_9_3))(41(d_9_1))(41(d_9_2))(44)))))
			(line__3347(_arch 44 0 3347(_assignment(_trgt(67))(_sens(64)(68)(75)(76)))))
			(ONE_KB_CROSS_REG(_arch 45 0 3355(_prcs(_trgt(69))(_sens(0)(38)(67)(70)(1))(_dssslsensitivity 1))))
		)
		(_type(_ext ~extstd.standard.INTEGER(0 INTEGER)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ~extstd.standard.BOOLEAN(0 BOOLEAN)))
	)
	(_part (73(11))(73(10))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(STD_LOGIC_UNSIGNED)))
	(_static
		(514)
		(770)
		(515)
		(50528770)
		(50529026)
		(50529027)
		(514)
		(50463234)
		(131842)
		(197122)
		(131586)
		(33751554)
		(50463234 2)
		(131587)
		(33686274)
		(33751554 2)
		(50463234 514)
		(197378)
		(33686019)
		(33686274 2)
		(33751554 514)
		(50463234 131586)
		(33686018 33686018)
		(33686018 197122)
		(33686018 131842)
		(33686018)
		(131843)
		(197379)
		(197123)
		(131586)
		(131586)
		(50529027 50529027)
		(50529027 50529027 3)
		(50529027 197379)
		(50529027 50529027 771)
	)
	(_model . RTL 103 -1)
)
V 000044 55 13151         1580964470749 RTL
(_unit VHDL(axi_ahblite_bridge 0 3634(rtl 0 3729))
	(_version vde)
	(_time 1580964470750 2020.02.05 22:47:50)
	(_source(\C:/Xilinx/Vivado/2019.2/data/ip/xilinx/axi_ahblite_bridge_v3_0/hdl/axi_ahblite_bridge_v3_0_vh_rfs.vhd\))
	(_parameters tan)
	(_code 2024292528777d3576242170387a732673262927242625)
	(_ent
		(_time 1580964470747)
	)
	(_inst VALID_READY_SKID 0 3794(_ent . ahb_skid_buf)
		(_gen
			((C_WDATA_WIDTH)(_code 1))
			((C_S_AXI_ID_WIDTH)(_code 2))
		)
		(_port
			((ACLK)(s_axi_aclk))
			((ARST)(s_axi_aresetn_int))
			((skid_stop)(_code 3))
			((S_VALID)(s_axi_rvalid_int))
			((S_READY)(s_axi_rready_int))
			((S_Data)(s_axi_rdata_int))
			((S_STRB)(_code 4))
			((S_Last)(s_axi_rlast_int))
			((S_User)(_code 5))
			((S_RID)(s_axi_rid_int))
			((S_RESP)(s_axi_rresp_int))
			((M_RESP)(s_axi_rresp))
			((M_VALID)(s_axi_rvalid))
			((M_READY)(s_axi_rready))
			((M_RID)(s_axi_rid))
			((M_Data)(s_axi_rdata))
			((M_STRB)(_open))
			((M_Last)(s_axi_rlast))
			((M_User)(_open))
		)
	)
	(_inst AXI_SLV_IF_MODULE 0 3842(_ent . axi_slv_if)
		(_gen
			((C_FAMILY)(_code 6))
			((C_S_AXI_ID_WIDTH)(_code 7))
			((C_S_AXI_ADDR_WIDTH)(_code 8))
			((C_S_AXI_DATA_WIDTH)(_code 9))
			((C_DPHASE_TIMEOUT)(_code 10))
		)
		(_port
			((S_AXI_ACLK)(s_axi_aclk))
			((S_AXI_ARESETN)(s_axi_aresetn))
			((S_AXI_AWID)(s_axi_awid))
			((S_AXI_AWADDR)(s_axi_awaddr))
			((S_AXI_AWPROT)(s_axi_awprot))
			((S_AXI_AWCACHE)(s_axi_awcache))
			((S_AXI_AWLEN)(s_axi_awlen))
			((S_AXI_AWSIZE)(s_axi_awsize))
			((S_AXI_AWBURST)(s_axi_awburst))
			((S_AXI_AWLOCK)(s_axi_awlock))
			((S_AXI_AWVALID)(s_axi_awvalid))
			((S_AXI_AWREADY)(s_axi_awready))
			((S_AXI_WDATA)(s_axi_wdata))
			((S_AXI_WSTRB)(s_axi_wstrb))
			((S_AXI_WVALID)(s_axi_wvalid))
			((S_AXI_WLAST)(s_axi_wlast))
			((S_AXI_WREADY)(s_axi_wready))
			((S_AXI_BID)(s_axi_bid))
			((S_AXI_BRESP)(s_axi_bresp))
			((S_AXI_BVALID)(s_axi_bvalid))
			((S_AXI_BREADY)(s_axi_bready))
			((S_AXI_ARID)(s_axi_arid))
			((S_AXI_ARADDR)(s_axi_araddr))
			((S_AXI_ARVALID)(s_axi_arvalid))
			((S_AXI_ARPROT)(s_axi_arprot))
			((S_AXI_ARCACHE)(s_axi_arcache))
			((S_AXI_ARLEN)(s_axi_arlen))
			((S_AXI_ARSIZE)(s_axi_arsize))
			((S_AXI_ARBURST)(s_axi_arburst))
			((S_AXI_ARLOCK)(s_axi_arlock))
			((S_AXI_ARREADY)(s_axi_arready))
			((S_AXI_RID)(s_axi_rid_int))
			((S_AXI_RDATA)(s_axi_rdata_int))
			((S_AXI_RRESP)(s_axi_rresp_int))
			((S_AXI_RVALID)(s_axi_rvalid_int))
			((S_AXI_RLAST)(s_axi_rlast_int))
			((S_AXI_RREADY)(s_axi_rready_int))
			((axi_prot)(axi_prot))
			((axi_cache)(axi_cache))
			((axi_size)(axi_size))
			((axi_lock)(axi_lock))
			((axi_wdata)(axi_wdata))
			((ahb_rd_request)(ahb_rd_request))
			((ahb_wr_request)(ahb_wr_request))
			((slv_err_resp)(slv_err_resp))
			((rd_data)(rd_data))
			((axi_address)(axi_address))
			((axi_burst)(axi_burst))
			((axi_length)(axi_length))
			((send_wvalid)(send_wvalid))
			((send_ahb_wr)(send_ahb_wr))
			((axi_wvalid)(axi_wvalid))
			((single_ahb_wr_xfer)(single_ahb_wr_xfer))
			((single_ahb_rd_xfer)(single_ahb_rd_xfer))
			((send_bresp)(send_bresp))
			((send_rvalid)(send_rvalid))
			((send_rlast)(send_rlast))
			((axi_rready)(axi_rready))
			((timeout_i)(timeout_s))
			((timeout_inprogress)(timeout_inprogress))
		)
	)
	(_inst AHB_MSTR_IF_MODULE 0 3922(_ent . ahb_mstr_if)
		(_gen
			((C_M_AHB_ADDR_WIDTH)(_code 11))
			((C_M_AHB_DATA_WIDTH)(_code 12))
			((C_S_AXI_DATA_WIDTH)(_code 13))
			((C_S_AXI_SUPPORTS_NARROW_BURST)(_code 14))
		)
		(_port
			((AHB_HCLK)(s_axi_aclk))
			((AHB_HRESETN)(s_axi_aresetn))
			((M_AHB_HADDR)(m_ahb_haddr))
			((M_AHB_HWRITE)(m_ahb_hwrite))
			((M_AHB_HSIZE)(m_ahb_hsize))
			((M_AHB_HBURST)(m_ahb_hburst))
			((M_AHB_HPROT)(m_ahb_hprot))
			((M_AHB_HTRANS)(m_ahb_htrans))
			((M_AHB_HMASTLOCK)(m_ahb_hmastlock))
			((M_AHB_HWDATA)(m_ahb_hwdata))
			((M_AHB_HREADY)(m_ahb_hready))
			((M_AHB_HRDATA)(m_ahb_hrdata))
			((M_AHB_HRESP)(m_ahb_hresp))
			((ahb_rd_request)(ahb_rd_request))
			((ahb_wr_request)(ahb_wr_request))
			((axi_lock)(axi_lock))
			((rd_data)(rd_data))
			((slv_err_resp)(slv_err_resp))
			((axi_prot)(axi_prot))
			((axi_cache)(axi_cache))
			((axi_wdata)(axi_wdata))
			((axi_size)(axi_size))
			((axi_length)(axi_length))
			((axi_address)(axi_address))
			((axi_burst)(axi_burst))
			((single_ahb_wr_xfer)(single_ahb_wr_xfer))
			((single_ahb_rd_xfer)(single_ahb_rd_xfer))
			((send_wvalid)(send_wvalid))
			((send_ahb_wr)(send_ahb_wr))
			((axi_wvalid)(axi_wvalid))
			((send_bresp)(send_bresp))
			((send_rvalid)(send_rvalid))
			((send_rlast)(send_rlast))
			((axi_rready)(axi_rready))
			((timeout_inprogress)(timeout_inprogress))
			((load_cntr)(load_cntr))
			((cntr_enable)(cntr_enable))
		)
	)
	(_inst TIME_OUT_MODULE 0 3976(_ent . time_out)
		(_gen
			((C_FAMILY)(_code 15))
			((C_DPHASE_TIMEOUT)(_code 16))
		)
		(_port
			((S_AXI_ACLK)(s_axi_aclk))
			((S_AXI_ARESETN)(s_axi_aresetn))
			((M_AHB_HREADY)(m_ahb_hready))
			((load_cntr)(load_cntr))
			((cntr_enable)(cntr_enable))
			((timeout_o)(timeout_s))
		)
	)
	(_object
		(_type(_int ~STRING~12 0 3636(_array -1((_uto i 1 i 2147483647)))))
		(_gen(_int C_FAMILY 0 0 3636(_ent(_string \"virtex7"\))))
		(_type(_int ~STRING~121 0 3637(_array -1((_uto i 1 i 2147483647)))))
		(_gen(_int C_INSTANCE 1 0 3637(_ent(_string \"axi_ahblite_bridge_inst"\))))
		(_type(_int ~INTEGER~range~32~to~64~12 0 3638(_scalar (_to i 32 i 64))))
		(_gen(_int C_S_AXI_ADDR_WIDTH 2 0 3638 \32\ (_ent gms((i 32)))))
		(_gen(_int C_S_AXI_DATA_WIDTH -2 0 3639 \32\ (_ent gms((i 32)))))
		(_type(_int ~INTEGER~range~0~to~1~12 0 3640(_scalar (_to i 0 i 1))))
		(_gen(_int C_S_AXI_SUPPORTS_NARROW_BURST 3 0 3640 \0\ (_ent((i 0)))))
		(_type(_int ~INTEGER~range~1~to~32~12 0 3641(_scalar (_to i 1 i 32))))
		(_gen(_int C_S_AXI_ID_WIDTH 4 0 3641 \4\ (_ent gms((i 4)))))
		(_type(_int ~INTEGER~range~32~to~64~122 0 3642(_scalar (_to i 32 i 64))))
		(_gen(_int C_M_AHB_ADDR_WIDTH 5 0 3642 \32\ (_ent gms((i 32)))))
		(_gen(_int C_M_AHB_DATA_WIDTH -2 0 3643 \32\ (_ent gms((i 32)))))
		(_gen(_int C_DPHASE_TIMEOUT -2 0 3644 \0\ (_ent((i 0)))))
		(_port(_int s_axi_aclk -3 0 3648(_ent(_in))))
		(_port(_int s_axi_aresetn -3 0 3649(_ent(_in((i 3))))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~12 0 3652(_array -3((_dto c 17 i 0)))))
		(_port(_int s_axi_awid 6 0 3652(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{7~downto~0}~12 0 3654(_array -3((_dto i 7 i 0)))))
		(_port(_int s_axi_awlen 7 0 3654(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{2~downto~0}~12 0 3655(_array -3((_dto i 2 i 0)))))
		(_port(_int s_axi_awsize 8 0 3655(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{1~downto~0}~12 0 3656(_array -3((_dto i 1 i 0)))))
		(_port(_int s_axi_awburst 9 0 3656(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{3~downto~0}~12 0 3657(_array -3((_dto i 3 i 0)))))
		(_port(_int s_axi_awcache 10 0 3657(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ADDR_WIDTH-1~downto~0}~12 0 3658(_array -3((_dto c 18 i 0)))))
		(_port(_int s_axi_awaddr 11 0 3658(_ent(_in))))
		(_port(_int s_axi_awprot 8 0 3659(_ent(_in))))
		(_port(_int s_axi_awvalid -3 0 3660(_ent(_in))))
		(_port(_int s_axi_awready -3 0 3661(_ent(_out))))
		(_port(_int s_axi_awlock -3 0 3662(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH-1~downto~0}~12 0 3664(_array -3((_dto c 19 i 0)))))
		(_port(_int s_axi_wdata 12 0 3664(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{{C_S_AXI_DATA_WIDTH/8}-1~downto~0}~12 0 3665(_array -3((_dto c 20 i 0)))))
		(_port(_int s_axi_wstrb 13 0 3665(_ent(_in))))
		(_port(_int s_axi_wlast -3 0 3667(_ent(_in))))
		(_port(_int s_axi_wvalid -3 0 3668(_ent(_in))))
		(_port(_int s_axi_wready -3 0 3669(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~124 0 3672(_array -3((_dto c 21 i 0)))))
		(_port(_int s_axi_bid 14 0 3672(_ent(_out))))
		(_port(_int s_axi_bresp 9 0 3674(_ent(_out))))
		(_port(_int s_axi_bvalid -3 0 3675(_ent(_out))))
		(_port(_int s_axi_bready -3 0 3676(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~126 0 3679(_array -3((_dto c 22 i 0)))))
		(_port(_int s_axi_arid 15 0 3679(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ADDR_WIDTH-1~downto~0}~128 0 3681(_array -3((_dto c 23 i 0)))))
		(_port(_int s_axi_araddr 16 0 3681(_ent(_in))))
		(_port(_int s_axi_arprot 8 0 3682(_ent(_in))))
		(_port(_int s_axi_arcache 10 0 3683(_ent(_in))))
		(_port(_int s_axi_arvalid -3 0 3684(_ent(_in))))
		(_port(_int s_axi_arlen 7 0 3685(_ent(_in))))
		(_port(_int s_axi_arsize 8 0 3686(_ent(_in))))
		(_port(_int s_axi_arburst 9 0 3687(_ent(_in))))
		(_port(_int s_axi_arlock -3 0 3688(_ent(_in))))
		(_port(_int s_axi_arready -3 0 3689(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~1210 0 3691(_array -3((_dto c 24 i 0)))))
		(_port(_int s_axi_rid 17 0 3691(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH-1~downto~0}~1212 0 3693(_array -3((_dto c 25 i 0)))))
		(_port(_int s_axi_rdata 18 0 3693(_ent(_out))))
		(_port(_int s_axi_rresp 9 0 3694(_ent(_out))))
		(_port(_int s_axi_rvalid -3 0 3695(_ent(_out))))
		(_port(_int s_axi_rlast -3 0 3696(_ent(_out))))
		(_port(_int s_axi_rready -3 0 3697(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_ADDR_WIDTH-1~downto~0}~12 0 3704(_array -3((_dto c 26 i 0)))))
		(_port(_int m_ahb_haddr 19 0 3704(_ent(_out))))
		(_port(_int m_ahb_hwrite -3 0 3705(_ent(_out))))
		(_port(_int m_ahb_hsize 8 0 3706(_ent(_out))))
		(_port(_int m_ahb_hburst 8 0 3707(_ent(_out))))
		(_port(_int m_ahb_hprot 10 0 3708(_ent(_out))))
		(_port(_int m_ahb_htrans 9 0 3709(_ent(_out))))
		(_port(_int m_ahb_hmastlock -3 0 3710(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_DATA_WIDTH-1~downto~0}~12 0 3711(_array -3((_dto c 27 i 0)))))
		(_port(_int m_ahb_hwdata 20 0 3711(_ent(_out))))
		(_port(_int m_ahb_hready -3 0 3713(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_DATA_WIDTH-1~downto~0}~1214 0 3714(_array -3((_dto c 28 i 0)))))
		(_port(_int m_ahb_hrdata 21 0 3714(_ent(_in))))
		(_port(_int m_ahb_hresp -3 0 3715(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ADDR_WIDTH-1~downto~0}~13 0 3743(_array -3((_dto c 29 i 0)))))
		(_sig(_int axi_address 22 0 3743(_arch(_uni))))
		(_sig(_int ahb_rd_request -3 0 3744(_arch(_uni))))
		(_sig(_int ahb_wr_request -3 0 3745(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{C_M_AHB_DATA_WIDTH-1~downto~0}~13 0 3746(_array -3((_dto c 30 i 0)))))
		(_sig(_int rd_data 23 0 3746(_arch(_uni))))
		(_sig(_int slv_err_resp -3 0 3747(_arch(_uni))))
		(_sig(_int axi_lock -3 0 3748(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{2~downto~0}~13 0 3749(_array -3((_dto i 2 i 0)))))
		(_sig(_int axi_prot 24 0 3749(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{3~downto~0}~13 0 3750(_array -3((_dto i 3 i 0)))))
		(_sig(_int axi_cache 25 0 3750(_arch(_uni))))
		(_sig(_int axi_size 24 0 3751(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{1~downto~0}~13 0 3752(_array -3((_dto i 1 i 0)))))
		(_sig(_int axi_burst 26 0 3752(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{7~downto~0}~13 0 3753(_array -3((_dto i 7 i 0)))))
		(_sig(_int axi_length 27 0 3753(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_DATA_WIDTH-1~downto~0}~13 0 3754(_array -3((_dto c 31 i 0)))))
		(_sig(_int axi_wdata 28 0 3754(_arch(_uni))))
		(_sig(_int send_wvalid -3 0 3755(_arch(_uni))))
		(_sig(_int send_ahb_wr -3 0 3756(_arch(_uni))))
		(_sig(_int axi_wvalid -3 0 3757(_arch(_uni))))
		(_sig(_int send_bresp -3 0 3758(_arch(_uni))))
		(_sig(_int send_rvalid -3 0 3759(_arch(_uni))))
		(_sig(_int send_rlast -3 0 3760(_arch(_uni))))
		(_sig(_int axi_rready -3 0 3761(_arch(_uni))))
		(_sig(_int single_ahb_wr_xfer -3 0 3762(_arch(_uni))))
		(_sig(_int single_ahb_rd_xfer -3 0 3763(_arch(_uni))))
		(_sig(_int load_cntr -3 0 3764(_arch(_uni))))
		(_sig(_int cntr_enable -3 0 3765(_arch(_uni))))
		(_sig(_int timeout_s -3 0 3766(_arch(_uni))))
		(_sig(_int timeout_inprogress -3 0 3767(_arch(_uni))))
		(_sig(_int s_axi_aresetn_int -3 0 3768(_arch(_uni((i 2))))))
		(_sig(_int s_axi_rdata_int 28 0 3769(_arch(_uni))))
		(_sig(_int s_axi_rvalid_int -3 0 3770(_arch(_uni))))
		(_sig(_int s_axi_rlast_int -3 0 3771(_arch(_uni))))
		(_sig(_int s_axi_rready_int -3 0 3772(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{C_S_AXI_ID_WIDTH-1~downto~0}~13 0 3773(_array -3((_dto c 32 i 0)))))
		(_sig(_int s_axi_rid_int 29 0 3773(_arch(_uni))))
		(_sig(_int s_axi_rresp_int 26 0 3774(_arch(_uni))))
		(_prcs
			(line__3786(_arch 0 0 3786(_assignment(_trgt(73))(_sens(1)))))
		)
		(_type(_ext ~extstd.standard.CHARACTER(0 CHARACTER)))
		(_type(_ext ~extstd.standard.INTEGER(0 INTEGER)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ~extieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(STD_LOGIC_UNSIGNED)))
	(_static
		(2)
	)
	(_model . RTL 33 -1)
)
